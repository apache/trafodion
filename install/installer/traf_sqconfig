#!/bin/bash
# @@@ START COPYRIGHT @@@
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# @@@ END COPYRIGHT @@@

#  Create the sqconfig file

#=================================================

source /etc/trafodion/trafodion_config

typeset TRAF_USER_DIR="$HOME_DIR/$TRAF_USER"
typeset TRAF_GROUP="trafodion"

#================================================

#=================================================
# Create initial sqconfig file only if we have more than one node.
# If only one node, then we'll use the sqconfig included in the Trafodion build

echo "***INFO: creating sqconfig file"
sqconfig=$LOCAL_WORKDIR/sqconfig_${HOSTNAME}_${TRAF_USER}
rm $sqconfig &> /dev/null
if [ "$node_count" -ne "1" ]; then
    # NOTE: the lscpu command lists the cores of a two core cpu as
    #       0,1 and for >two cores as 0-n.  Trafodion's sqconfig
    #       file requires a range instead of a comma separated list.
    #       So, we convert the comma to a dash to cover this case.
    cores=$(lscpu | grep "CPU(s) list" | awk '{print $4}' | sed -e "s@,@-@" )
    if [ "$cores" == "" ]; then
        # NOTE: On some VM containers like OpenVZ (and maybe others)
        #       lscpu cannot be used to get cores and cpus. So an
        #       alternative is to use the info from /proc/cpuinfo.
        echo "***INFO: cannot get cores from lscpu, trying from /proc/cpuinfo"
        cores="0-$(($(cat /proc/cpuinfo | grep "processor" | sort -u | wc -l)-1))"
    fi    
    maxCores=`echo $cores | sed 's/.*\-//'`
    if [[ "$maxCores" -gt "15" ]]; then
       cores="0-15"
    fi
    
    processors=$(lscpu | grep "Socket(s)" | awk '{print $2}')
    if [ "$processors" == "" ]; then
       processors=$(lscpu | grep "CPU socket(s)" | awk '{print $3}')
    fi
    if [ "$processors" == "" ]; then
        # Trying also from /proc/cpuinfo.
        echo "***INFO: cannot get processors from lscpu, trying from /proc/cpuinfo"
        processors=$(cat /proc/cpuinfo | grep "physical id" | sort -u | wc -l)
    fi    
    # On some VMs it seems that "Socket(s)" is not listed in
    # lscpu, so if we could neither get it from /proc/cpuinfo we will default
    # processors=1 in that case
    if [ "$processors" == "" ]; then
        echo "***WARNING: unable to determine number of sockets with 'lscpu' or '/proc/cpuinfo' ..."
        echo "***WARNING: ...defaulting sqconfig 'processors=1'"
        processors="1"
    fi
    echo "#" >> $sqconfig
    echo "begin node" >> $sqconfig
    node_id=0
    for node in $NODE_LIST
    do
        echo "node-id=$node_id;node-name=$node;cores=$cores;processors=$processors;roles=connection,aggregation,storage" >> $sqconfig
        ((node_id++))
    done

    echo "end node" >> $sqconfig
    sudo cp $sqconfig $UNTAR_DIR
    sudo cp $sqconfig $TRAF_USER_DIR/sqconfig
    sudo chown $TRAF_USER.$TRAF_GROUP $TRAF_USER_DIR/sqconfig
fi

