#!/bin/bash
# @@@ START COPYRIGHT @@@
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# @@@ END COPYRIGHT @@@

#  Setup Cloudera

#==============================================
# Default values
typeset TRAF_WORKDIR="$( cd "$( dirname "$0" )" && pwd )/.."
typeset timestamp=$(date +%F-%H-%M-%S)
typeset SETUP_LOG="/var/log/trafodion/traf_cloudera_setup_$timestamp.log"

CLOUDERA=$(rpm -qa | grep cloudera | wc -l)
#==============================================

function print_usage {
cat << EOF
This script will do the one-time setup needed
to install Cloudera.

NOTE: Please refer to the offical Cloudera documentation for questions. 

Usage: $(basename $0) [options]

Options:
    --help                 Print this message and exit.

EOF
}

#==============================================
# Parse input parameters
while [[ $# -gt 0 ]]; do
    case "$1" in
        --help)
            print_usage
            exit -1
            ;;
        *)
         echo "***ERROR: unknown parameter '$1'"
            print_usage
            exit -1
    esac
    shift
done
#==============================================
#Info for log file
sudo mkdir -p /var/log/trafodion
sudo chmod 777 /var/log/trafodion

echo "***INFO: Log file located at /var/log/trafodion"
echo "***Log File: trafodion_cloudera_setup script***" >> $SETUP_LOG
echo >> $SETUP_LOG
echo "Working directory: $TRAF_WORKDIR" >> $SETUP_LOG
echo >> $SETUP_LOG

#==============================================
echo "***INFO: Checking the size of /var for Cloudera DB"

var_min=20000000
var_file='/var'
var_lib_file='/var/lib'
var_size=0
var_on_root=0
clouderadb_varfile="/var/lib/cloudera-scm-server-db"
clouderadb_file="cloudera-scm-server-db"
root="/"

if [ -d ${var_file} ] ; then
   df /var | grep var
   if [ $? -eq 0 ] ; then
      var_size=`df /var |grep var | tr -s [:space:] ':' | cut -d':' -f4`
   else
      var_size=`df / |grep dev | tr -s [:space:] ':' | cut -d':' -f4`
      var_on_root=1
   fi
fi

if [ -d ${clouderadb_varfile} ] ; then
   echo "*** WARNING: /var/lib/cloudera-scm-server-db already exists." | tee -a $SETUP_LOG
   if [ -h ${clouderadb_varfile} ] ; then
      echo "*** WARNING: The /var/lib/cloudera-scm-server-db is a symbolic link to a cloudera-scm-server-db directory." | tee -a $SETUP_LOG
      if ! [ -L ${clouderadb_varfile} ] ; then
         echo "*** WARNING: The /var/lib/cloudera-scm-server-db exists but the matching cloudera-scm-server-db directory does not." | tee -a $SETUP_LOG
         echo "*** WARNING: Check the desired location for cloudera-scm-servera-db directory and either establish a valid symbolic link to an existing directory or create the directory." | tee -a $SETUP_LOG
      fi
   elif [ ${var_on_root} -eq 0 ] ; then
        if [ ${var_size} -lt ${var_min} ] ; then
           echo "*** WARNING: There is insufficient space available for the Cloudera database on /var." | tee -a $SETUP_LOG
           echo "*** WARNING: It is recommended to review the 'installer/unsupported_tools/clouderaMoveDB.sh script to move the database to a disk with more available space." | tee -a $SETUP_LOG
        fi
   else
        echo "*** WARNING: /var/lib/cloudera-scm-server-db is already located directly on /." | tee -a $SETUP_LOG
        echo "*** WARNING: No additional movement of the file is recommended." | tee -a $SETUP_LOG
   fi
else
   if [ ${var_size} -lt ${var_min} ] ; then
      echo "*** WARNING: There is insufficient space available for the Cloudera database on /var." | tee -a $SETUP_LOG
      echo "*** WARNING: An attempt will be made to soft link the cloudera-scm-server-db directory to the / directory." | tee -a $SETUP_LOG
      if [ $UID -ne 0 ] ; then
         echo "*** WARNING: The cloudera-scm-server-db directory creation and soft linking must have root access." | tee -a $SETUP_LOG
      else
         if [ ! -d ${root}${clouderadb_file} ] ; then
            mkdir ${root}${clouderadb_file}
         fi
         if [ ! -d ${var_lib_file} ] ; then
            mkdir ${var_lib_file}
         fi
         ln -s ${root}${clouderadb_file} ${var_lib_file}
         if [ $? -ne 0 ] ; then
            echo "*** WARNING: The cloudera-scm-server-db directory was not successfully soft linked to /var/lib." | tee -a $SETUP_LOG
         fi
      fi
   fi
fi

#==============================================
cloudera_installed=$(rpm -qa | grep cloudera | wc -l )

if [[ $cloudera_installed -eq 0 ]]; then

   echo "***INFO: Installing Cloudera, will need browser access to complete" | tee -a $SETUP_LOG 

   sudo rm -rf cloudera-manager-* 2>/dev/null

   wget http://archive.cloudera.com/cm5/installer/latest/cloudera-manager-installer.bin

   if [ $? -ne 0 ]; then
      echo "****ERROR: Time our error. Please check http_proxy settings." | tee -a $SETUP_LOG
      echo "***ERROR: Exiting..." | tee -a $SETUP_LOG
      echo
      exit -1
   fi
   
   sudo rm -rf oracle-j2sdk* 2>/dev/null
   linuxInstalled=$(grep -cr SUSE /proc/version)
   if [[ "$linuxInstalled" -eq "1" ]]; then
      wget  http://archive.cloudera.com/cm5/sles/11/x86_64/cm/5.3.0/RPMS/x86_64/oracle-j2sdk1.7-1.7.0+update67-1.x86_64.rpm
   else
      if [[ ! -d /usr/java/jdk1.7.0_67-cloudera ]]; then
         wget http://archive.cloudera.com/cm5/redhat/6/x86_64/cm/5/RPMS/x86_64/oracle-j2sdk1.7-1.7.0+update67-1.x86_64.rpm
      fi
   fi

   if [ $? -ne 0 ]; then
      echo "****ERROR: Time our error. Please check http_proxy settings." | tee -a $SETUP_LOG
      echo "***ERROR: Exiting..." | tee -a $SETUP_LOG
      echo
      exit -1
   fi

   if [[ ! -d /usr/java/jdk1.7.0_67-cloudera ]]; then

      sudo rpm -ivh oracle-j2sdk1.7-1.7.0+update67-1.x86_64.rpm 
   fi

   chmod +x cloudera-manager-installer.bin

   echo -n "Setting up with a local repository? (Y/N) "
   read answer

   if [[ $answer != "Y" ]] && [[ $answer != "y" ]]; then
      sudo ./cloudera-manager-installer.bin --i-agree-to-all-licenses --noreadme --noprompt
   else
      sudo ./cloudera-manager-installer.bin --i-agree-to-all-licenses --noreadme --noprompt --skip_repo_package=1
   fi

   if [ $? -ne 0 ]; then
      echo "***ERROR: Error while installing Cloudera" | tee -a $SETUP_LOG
      echo "***ERROR: Exiting..." | tee -a $SETUP_LOG
      echo
      exit -1
   fi

   echo "***INFO: Complete Cloudera setup from http://$(hostname --long):7180" | tee -a $SETUP_LOG 
else
   echo
   echo "***INFO: Cloudera previously installed." | tee -a $SETUP_LOG
fi
#==============================================
