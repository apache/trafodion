<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <!--
// @@@ START COPYRIGHT @@@
//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// @@@ END COPYRIGHT @@@

-->
  <repositories>
    <repository>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>never</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
      <id>HDPReleases</id>
      <name>HDP Releases</name>
      <url>http://repo.hortonworks.com/content/repositories/releases/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>HDPContent</id>
      <name>HDP Content</name>
      <url>http://repo.hortonworks.com/content/groups/public/</url>
      <layout>default</layout>
    </repository>
  </repositories>

  <properties>
    <hadoop.version>2.7.1.2.3.2.0-2950</hadoop.version>
    <hbase.version>1.1.2.2.3.2.0-2950</hbase.version>
    <!--<hbase.version>0.98.3-hadoop2</hbase.version>-->
    <!--<hbase.version>0.98.3-hadoop1</hbase.version>-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.7</java.version>
    <trx-suffix>hdp2_3</trx-suffix>
    <protocVersion>2.5.0</protocVersion>
  </properties>


  <groupId>org.apache</groupId>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>hbase-trx-hdp2_3</artifactId>
  <version>${env.TRAFODION_VER}</version>
  <name>HBase - Trx</name>
  <description>Trx of HBase usage</description>


  <build>
    <defaultGoal>package</defaultGoal>
      <!-- allow for different build targets with separate classes directories and
           output jars, used for Java 6 compile for now -->
      <outputDirectory>${project.build.directory}/classes_${trx-suffix}</outputDirectory>
      <finalName>${project.artifactId}-${project.version}</finalName>
      <!-- Some plugins (javadoc for example) can be used in the normal build- and the site phase.
           These plugins inherit their options from the <reporting> section below. These settings
           can be overwritten here. -->
    <plugins>
      <plugin>
        <!--Make it so assembly:single does nothing in here-->
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2-beta-5</version>
        <configuration>
          <skipAssembly>true</skipAssembly>
        </configuration>
      </plugin>
        <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.5</version>
            <configuration>
                <!-- Have to set the groups here because we only do
    split tests in this package, so groups on live in this module -->
                <groups>${surefire.firstPartGroups}</groups>
            </configuration>
        </plugin>
        <!-- Make a jar and put the sources in the jar -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <archive>
               <manifestFile>hbase-trx.jar.versions</manifestFile>
            </archive>
          </configuration>
        </plugin>
    </plugins>
  </build>



  <dependencies>
    <dependency>
        <groupId>org.apache.hbase</groupId>
        <artifactId>hbase-common</artifactId>
        <version>${hbase.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.hbase</groupId>
        <artifactId>hbase-protocol</artifactId>
        <version>${hbase.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.hbase</groupId>
        <artifactId>hbase-client</artifactId>
        <version>${hbase.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-server</artifactId>
      <version>${hbase.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-thrift</artifactId>
      <version>${hbase.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.hbase</groupId>
        <artifactId>hbase-testing-util</artifactId>
        <scope>test</scope>
      <version>${hbase.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.thrift</groupId>
      <artifactId>libthrift</artifactId>
      <version>0.9.1</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
      <version>3.4.6</version>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>2.5.0</version>
    </dependency>
 </dependencies>
 <profiles>
     <!-- Skip the tests in this module -->
     <profile>
         <id>skipTrxTests</id>
         <activation>
             <property>
                 <name>skipTrxTests</name>
             </property>
         </activation>
         <properties>
             <surefire.skipFirstPart>true</surefire.skipFirstPart>
             <surefire.skipSecondPart>true</surefire.skipSecondPart>
         </properties>
     </profile>

     <!-- Profiles for building against different hadoop versions -->
     <!-- There are a lot of common dependencies used here, should investigate
if we can combine these profiles somehow -->
     <!-- profile against Hadoop 1.1.x: This is the default. It has to have the same
  activation property as the parent Hadoop 1.1.x profile to make sure it gets run at
  the same time. -->
     <profile>
         <id>hadoop-1.1</id>
         <activation>
             <property>
            <!--Below formatting for dev-support/generate-hadoopX-poms.sh-->
            <!--h1--><name>hadoop.profile</name><value>1.1</value>
             </property>
         </activation>
         <dependencies>
             <dependency>
                 <groupId>org.apache.hadoop</groupId>
                 <artifactId>hadoop-core</artifactId>
             </dependency>
             <dependency>
                 <groupId>org.apache.hadoop</groupId>
                 <artifactId>hadoop-test</artifactId>
             </dependency>
         </dependencies>
     </profile>
     <!--
       profile for building against Hadoop 2.0.0-alpha. Activate using:
        mvn -Dhadoop.profile=2.0
     -->
     <profile>
         <id>hadoop-2.0</id>
         <activation>
             <property>
            <!--Below formatting for dev-support/generate-hadoopX-poms.sh-->
            <!--h2--><name>!hadoop.profile</name>
             </property>
         </activation>
         <dependencies>
             <dependency>
                 <groupId>org.apache.hadoop</groupId>
                 <artifactId>hadoop-mapreduce-client-core</artifactId>
                 <version>${hadoop.version}</version>
             </dependency>
             <dependency>
                 <groupId>org.apache.hadoop</groupId>
                 <artifactId>hadoop-common</artifactId>
                 <version>${hadoop.version}</version>
             </dependency>
         </dependencies>
         <build>
             <plugins>
                 <plugin>
                     <artifactId>maven-dependency-plugin</artifactId>
                     <executions>
                         <execution>
                             <id>create-mrapp-generated-classpath</id>
                             <phase>generate-test-resources</phase>
                             <goals>
                                 <goal>build-classpath</goal>
                             </goals>
                             <configuration>
                                 <!-- needed to run the unit test for DS to generate
                                 the required classpath that is required in the env
                                 of the launch container in the mini mr/yarn cluster
                                 -->
                                 <outputFile>${project.build.directory}/test-classes/mrapp-generated-classpath</outputFile>
                             </configuration>
                         </execution>
                     </executions>
                 </plugin>
             </plugins>
         </build>
     </profile>
     <!--
       profile for building against Hadoop 3.0.x. Activate using:
        mvn -Dhadoop.profile=3.0
     -->
     <profile>
         <id>hadoop-3.0</id>
         <activation>
             <property>
                 <name>hadoop.profile</name>
                 <value>3.0</value>
             </property>
         </activation>
         <properties>
             <hadoop.version>3.0-SNAPSHOT</hadoop.version>
         </properties>
         <dependencies>
             <dependency>
                 <groupId>org.apache.hadoop</groupId>
                 <artifactId>hadoop-common</artifactId>
             </dependency>
             <dependency>
                 <groupId>org.apache.hadoop</groupId>
                 <artifactId>hadoop-annotations</artifactId>
             </dependency>
             <dependency>
                 <groupId>org.apache.hadoop</groupId>
                 <artifactId>hadoop-minicluster</artifactId>
             </dependency>
         </dependencies>
         <build>
             <plugins>
                 <plugin>
                     <artifactId>maven-dependency-plugin</artifactId>
                     <executions>
                         <execution>
                             <id>create-mrapp-generated-classpath</id>
                             <phase>generate-test-resources</phase>
                             <goals>
                                 <goal>build-classpath</goal>
                             </goals>
                             <configuration>
                                 <!-- needed to run the unit test for DS to generate
                                 the required classpath that is required in the env
                                 of the launch container in the mini mr/yarn cluster
                                 -->
                                 <outputFile>${project.build.directory}/test-classes/mrapp-generated-classpath</outputFile>
                             </configuration>
                         </execution>
                     </executions>
                 </plugin>
             </plugins>
         </build>
     </profile>
    <profile>
      <id>compile-protobuf</id>
      <activation>
        <property>
          <name>compile-protobuf</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-maven-plugins</artifactId>
            <executions>
              <execution>
                <id>compile-protoc</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>protoc</goal>
                </goals>
                <configuration>
                  <imports>
                    <param>${basedir}/src/main/protobuf</param>
                    <param>${basedir}/hbase-protocol/src/main/protobuf</param>
                  </imports>
                  <protobuf.version>2.5.0</protobuf.version>
                  <protocVersion>2.5.0</protocVersion>
                  <source>
                    <directory>${basedir}/src/main/protobuf</directory>
                    <includes>
                      <include>TrxRegion.proto</include>
                      <include>SsccRegion.proto</include>
                    </includes>
                  </source>
                  <output>${basedir}/src/main/java/</output>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
