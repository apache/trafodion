>>sh rm -f LOG107-SECONDARY;
>>obey TEST107(compile_libs);
>>--------------------------------------------------------------------------
>>log;
>>
>>obey TEST107(create_tables);
>>--------------------------------------------------------------------------
>>create table t10 (a int not null, b int, c int, primary key (a));

--- SQL operation complete.
>>insert into t10 values
+> (1,1,-10), (2,1,null), (3,1,-20), (4,1,null), (5,1,-30),
+> (6,1,null), (7,1,-40), (8,1,null), (9,1,-50), (10,1,null);

--- 10 row(s) inserted.
>>
>>obey TEST107(register_functions);
>>--------------------------------------------------------------------------
>>create library TEST107 file $$QUOTE$$ $$REGRRUNDIR$$/$$DLL$$ $$QUOTE$$ ;

--- SQL operation complete.
>>-- GETMXV
>>create function GETMXV() returns (MXV smallint)
+>language c parameter style sql external name 'getMXV'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>-- ADD2: Adds two integers
>>create function ADD2(int,int) returns (ADD2 int)
+>language c parameter style sql external name 'add2'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>-- "AddDays2Date@": Adds days to a date
>>create function "AddDays2Date@"(date,int) returns (NEWDATE date)
+>language c parameter style sql external name 'addDaysToDate'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>-- GETCOLLATION
>>create function GETCOLLATION(char(32) collate default) returns char(32)
+>language c parameter style sql external name 'getCollation'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>-- Register the ECHO functions
>>
>>-- The value of $$ECHONAME$$ will become the function name and is also
>>-- the DLL entry point name. Input type and return type are both
>>-- $$ECHOTYPE$$. The function body returns a copy of the input value.
>>
>>-- INTEGER
>>set pattern $$ECHONAME$$ echoINT;
>>set pattern $$ECHOTYPE$$ 'INT';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoUINT;
>>set pattern $$ECHOTYPE$$ 'INT UNSIGNED';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoSMALL;
>>set pattern $$ECHOTYPE$$ 'SMALLINT';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoUSMALL;
>>set pattern $$ECHOTYPE$$ 'SMALLINT UNSIGNED';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoLARGE;
>>set pattern $$ECHOTYPE$$ 'LARGEINT';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>-- CHARACTER
>>set pattern $$ECHONAME$$ echoCHAR;
>>set pattern $$ECHOTYPE$$ 'CHAR(32)';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoVC;
>>set pattern $$ECHOTYPE$$ 'VARCHAR(32)';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoCHAR2;
>>set pattern $$ECHOTYPE$$ 'CHAR(32) CHARACTER SET UCS2';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoVC2;
>>set pattern $$ECHOTYPE$$ 'VARCHAR(32) CHARACTER SET UCS2';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>-- DATETIME
>>set pattern $$ECHONAME$$ echoDATE;
>>set pattern $$ECHOTYPE$$ 'DATE';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoTIME0;
>>set pattern $$ECHOTYPE$$ 'TIME(0)';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoTIME6;
>>set pattern $$ECHOTYPE$$ 'TIME(6)';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoTS0;
>>set pattern $$ECHOTYPE$$ 'TIMESTAMP(0)';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoTS6;
>>set pattern $$ECHOTYPE$$ 'TIMESTAMP(6)';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>-- NUMERIC SIGNED
>>set pattern $$ECHONAME$$ echoNUM4;
>>set pattern $$ECHOTYPE$$ 'NUMERIC(4,2)';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoNUM8;
>>set pattern $$ECHOTYPE$$ 'NUMERIC(8,4)';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoNUM12;
>>set pattern $$ECHOTYPE$$ 'NUMERIC(12,4)';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoNUM0;
>>set pattern $$ECHOTYPE$$ 'NUMERIC(8,0)';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>-- NUMERIC UNSIGNED
>>set pattern $$ECHONAME$$ echoUNUM4;
>>set pattern $$ECHOTYPE$$ 'NUMERIC(4,2) UNSIGNED';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoUNUM8;
>>set pattern $$ECHOTYPE$$ 'NUMERIC(8,4) UNSIGNED';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoUNUM0;
>>set pattern $$ECHOTYPE$$ 'NUMERIC(8,0) UNSIGNED';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>-- BIGNUM
>>set pattern $$ECHONAME$$ echoBNUM32;
>>set pattern $$ECHOTYPE$$ 'NUMERIC(32,4)';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoBNUM0;
>>set pattern $$ECHOTYPE$$ 'NUMERIC(24,0)';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>-- DECIMAL SIGNED and UNSIGNED
>>set pattern $$ECHONAME$$ echoDEC;
>>set pattern $$ECHOTYPE$$ 'DECIMAL(8,2)';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoUDEC;
>>set pattern $$ECHOTYPE$$ 'DECIMAL(8,2) UNSIGNED';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>set pattern $$ECHONAME$$ echoDEC0;
>>set pattern $$ECHOTYPE$$ 'DECIMAL(8,0) UNSIGNED';
>>obey TEST107(register_echo);
>>--------------------------------------------------------------------------
>>create function $$ECHONAME$$ ( $$ECHOTYPE$$ ) returns $$ECHOTYPE$$
+>language c parameter style sql external name $$QUOTE$$ $$ECHONAME$$ $$QUOTE$$
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>
>>-- SESSION_USER_NAME
>>create function SESSION_USER_NAME() returns (SESSION_USER_NAME char(128))
+>language c parameter style sql external name 'session_user_name'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>-- VALIDATE_SESSION_USER_NAME
>>create function VALIDATE_SESSION_USER_NAME(char(128)) returns (STATUS char(32))
+>language c parameter style sql external name 'validate_session_user_name'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>-- CURRENT_USER_NAME
>>create function CURRENT_USER_NAME()
+>  returns (CURRENT_USER_NAME char(128))
+>language c parameter style sql external name 'current_user_name'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>-- VALIDATE_CURRENT_USER_NAME
>>create function VALIDATE_CURRENT_USER_NAME(char(128))
+>  returns (STATUS char(32))
+>language c parameter style sql external name 'validate_current_user_name'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>-- CURRENT_ROLE_NAME
>>create function CURRENT_ROLE_NAME()
+>  returns (CURRENT_ROLE_NAME char(128))
+>language c parameter style sql external name 'current_role_name'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>-- VALIDATE_CURRENT_ROLE_NAME
>>create function VALIDATE_CURRENT_ROLE_NAME(char(128))
+>  returns (STATUS char(32))
+>language c parameter style sql external name 'validate_current_role_name'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>-- ERRORWARN: The function can return a warning or an error.
>>-- Returns an error when the input value is a multiple of 10.
>>-- Returns a warning when the input value is odd.
>>-- Otherwise returns the input value.
>>create function ERRORWARN(int) returns (ERRORWARN int)
+>language c parameter style sql external name 'errOrWarn'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>get functions for library TEST107;

Functions for Library SCH.TEST107
=================================

SCH.ADD2
SCH.AddDays2Date@
SCH.CURRENT_ROLE_NAME
SCH.CURRENT_USER_NAME
SCH.ECHOBNUM0
SCH.ECHOBNUM32
SCH.ECHOCHAR
SCH.ECHOCHAR2
SCH.ECHODATE
SCH.ECHODEC
SCH.ECHODEC0
SCH.ECHOINT
SCH.ECHOLARGE
SCH.ECHONUM0
SCH.ECHONUM12
SCH.ECHONUM4
SCH.ECHONUM8
SCH.ECHOSMALL
SCH.ECHOTIME0
SCH.ECHOTIME6
SCH.ECHOTS0
SCH.ECHOTS6
SCH.ECHOUDEC
SCH.ECHOUINT
SCH.ECHOUNUM0
SCH.ECHOUNUM4
SCH.ECHOUNUM8
SCH.ECHOUSMALL
SCH.ECHOVC
SCH.ECHOVC2
SCH.ERRORWARN
SCH.GETCOLLATION
SCH.GETMXV
SCH.SESSION_USER_NAME
SCH.VALIDATE_CURRENT_ROLE_NAME
SCH.VALIDATE_CURRENT_USER_NAME
SCH.VALIDATE_SESSION_USER_NAME

=======================
 37 row(s) returned

--- SQL operation complete.
>>
>>showddl function errorwarn ;

CREATE FUNCTION TRAFODION.SCH.ERRORWARN
  (
    IN INTEGER SIGNED
  )
  RETURNS
  (
    OUT ERRORWARN INTEGER SIGNED
  )
  EXTERNAL NAME 'errOrWarn'
  LIBRARY TRAFODION.SCH.TEST107
  LANGUAGE C
  PARAMETER STYLE SQL
  NO SQL
  NO FINAL CALL
  STATE AREA SIZE 1024
  ALLOW ANY PARALLELISM
  DETERMINISTIC
  SAFE EXECUTION MODE
  ;

--- SQL operation complete.
>>
>>obey TEST107(tests);
>>--------------------------------------------------------------------------
>>prepare S from values(add2(1,2));

--- SQL command prepared.
>>select tname, substr(description, (position('routine_name:' in description)))
+>from table(explain(null, 'S'))
+>where operator = 'ISOLATED_SCALAR_UDF';

TNAME                                                         (EXPR)


TRAFODION.SCH.ADD2                                            routine_name: TRAFODION.SCH.ADD2 parameter_modes: I I O  sql_access_mode: NO SQL external_name: add2 library: TRAFODION.SCH.TEST107 external_file: TEST107.dll signature: (none) language: C parameter_style: SQL external_security: INVOKER max_result_sets: 0 actual_parameters: cast(%(1)), cast

--- 1 row(s) selected.
>>
>>execute S;

ADD2       
-----------

          3

--- 1 row(s) selected.
>>
>>select add2(a,b) from t10;

ADD2       
-----------

          2
          3
          4
          5
          6
          7
          8
          9
         10
         11

--- 10 row(s) selected.
>>select add2(a,c) from t10;

ADD2       
-----------

         -9
          ?
        -17
          ?
        -25
          ?
        -33
          ?
        -41
          ?

--- 10 row(s) selected.
>>
>>values("AddDays2Date@"(date'2000-01-01',2));

NEWDATE   
----------

2000-01-03

--- 1 row(s) selected.
>>select "AddDays2Date@"(date'2000-01-01', a) from t10;

NEWDATE   
----------

2000-01-02
2000-01-03
2000-01-04
2000-01-05
2000-01-06
2000-01-07
2000-01-08
2000-01-09
2000-01-10
2000-01-11

--- 10 row(s) selected.
>>
>>values(getMXV());

MXV   
------

  2600

--- 1 row(s) selected.
>>
>>-----------------------------------------------------------------------------
>>-- Invoke the ECHO functions
>>-----------------------------------------------------------------------------
>>
>>-- INTEGER
>>values(echoINT(1));

(EXPR)     
-----------

          1

--- 1 row(s) selected.
>>values(echoUINT(1));

(EXPR)    
----------

         1

--- 1 row(s) selected.
>>values(echoSMALL(1));

(EXPR)
------

     1

--- 1 row(s) selected.
>>values(echoUSMALL(1));

(EXPR)
------

     1

--- 1 row(s) selected.
>>values(echoLARGE(1));

(EXPR)              
--------------------

                   1

--- 1 row(s) selected.
>>
>>-- CHARACTER
>>values(echoCHAR('abc') || 'x');

(EXPR)                           
---------------------------------

abc                             x

--- 1 row(s) selected.
>>values(echoVC('abc') || 'x');

(EXPR)                           
---------------------------------

abcx                             

--- 1 row(s) selected.
>>values(echoCHAR2(_ucs2'abc') || _ucs2'x');

(EXPR)                                                            
------------------------------------------------------------------

abc                             x                                 

--- 1 row(s) selected.
>>values(echoVC2(_ucs2'abc') || _ucs2'x');

(EXPR)                                                            
------------------------------------------------------------------

abcx                                                              

--- 1 row(s) selected.
>>
>>-- DATETIME
>>values(echoDATE(date'2009-01-01'));

(EXPR)    
----------

2009-01-01

--- 1 row(s) selected.
>>values(echoTIME0(time'01:01:01'));

(EXPR)  
--------

01:01:01

--- 1 row(s) selected.
>>values(echoTIME6(time'02:03:04.5'));

(EXPR)         
---------------

02:03:04.500000

--- 1 row(s) selected.
>>values(echoTS0(timestamp'2009-01-01 01:01:01'));

(EXPR)             
-------------------

2009-01-01 01:01:01

--- 1 row(s) selected.
>>values(echoTS6(timestamp'2009-02-02 02:02:02.123'));

(EXPR)                    
--------------------------

2009-02-02 02:02:02.123000

--- 1 row(s) selected.
>>
>>-- NUMERIC SIGNED
>>values(echoNUM4(12.34));

(EXPR) 
-------

  12.34

--- 1 row(s) selected.
>>values(echoNUM4(-56.78));

(EXPR) 
-------

 -56.78

--- 1 row(s) selected.
>>values(echoNUM8(1234.5678));

(EXPR)      
------------

   1234.5678

--- 1 row(s) selected.
>>values(echoNUM8(-1111.2222));

(EXPR)      
------------

  -1111.2222

--- 1 row(s) selected.
>>values(echoNUM12(12341234.5678));

(EXPR)               
---------------------

        12341234.5678

--- 1 row(s) selected.
>>values(echoNUM12(-11112222.3333));

(EXPR)               
---------------------

       -11112222.3333

--- 1 row(s) selected.
>>values(echoNUM0(12345));

(EXPR)     
-----------

      12345

--- 1 row(s) selected.
>>values(echoNUM0(-54321));

(EXPR)     
-----------

     -54321

--- 1 row(s) selected.
>>
>>-- NUMERIC UNSIGNED
>>values(echoUNUM4(12.34));

(EXPR)
------

 12.34

--- 1 row(s) selected.
>>values(echoUNUM8(1234.5678));

(EXPR)     
-----------

  1234.5678

--- 1 row(s) selected.
>>values(echoUNUM0(12345));

(EXPR)    
----------

     12345

--- 1 row(s) selected.
>>
>>-- BIGNUM
>>values(echoBNUM32(1234567890.1234));

(EXPR)                            
----------------------------------

                   1234567890.1234

--- 1 row(s) selected.
>>values(echoBNUM0(1234567890));

(EXPR)                   
-------------------------

               1234567890

--- 1 row(s) selected.
>>values(echoBNUM0(-123456789012345678901234));

(EXPR)                   
-------------------------

-123456789012345678901234

--- 1 row(s) selected.
>>
>>-- DECIMAL SIGNED
>>values(echoDEC(-9));

(EXPR)    
----------

     -9.00

--- 1 row(s) selected.
>>values(echoDEC(-123456.78));

(EXPR)    
----------

-123456.78

--- 1 row(s) selected.
>>values(echoUDEC(123));

(EXPR)   
---------

   123.00

--- 1 row(s) selected.
>>values(echoUDEC(123456.78));

(EXPR)   
---------

123456.78

--- 1 row(s) selected.
>>values(echoDEC0(123));

(EXPR)  
--------

     123

--- 1 row(s) selected.
>>values(echoDEC0(12345678));

(EXPR)  
--------

12345678

--- 1 row(s) selected.
>>
>>select num_lookups, num_cache_hits, num_entries, max_cache_size from table(naroutinecache('user','local')) ;

NUM_LOOKUPS  NUM_CACHE_HITS  NUM_ENTRIES  MAX_CACHE_SIZE
-----------  --------------  -----------  --------------

         70              11           30        20971520

--- 1 row(s) selected.
>>
>>-----------------------------------------------------------------------------
>>-- COLLATION
>>-----------------------------------------------------------------------------
>>control query default ROUTINE_CACHE_SIZE '0';

--- SQL operation complete.
>>control query default QUERY_CACHE '0';

--- SQL operation complete.
>>
>>-- DEFAULT collation
>>drop function GETCOLLATION;

--- SQL operation complete.
>>create function GETCOLLATION(char(32) collate default) returns char(32)
+>language c parameter style sql external name 'getCollation'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

--- SQL operation complete.
>>
>>values(getCollation('abc'));

(EXPR)                          
--------------------------------

DEFAULT                         

--- 1 row(s) selected.
>>
>>-- CZECH collation
>>drop function GETCOLLATION;

--- SQL operation complete.
>>create function GETCOLLATION(char(32) collate czech) returns char(32)
+>language c parameter style sql external name 'getCollation'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

*** ERROR[4069] Column  uses an unsupported collation.

--- SQL operation failed with errors.
>>
>>values(getCollation('def'));

*** ERROR[4450] Function TRAFODION."_UDF_".GETCOLLATION is not a built-in function or registered user-defined function.

*** ERROR[8822] The statement was not prepared.

>>
>>-- CZECH_CI collation
>>drop function GETCOLLATION;

*** ERROR[1389] Object TRAFODION.SCH.GETCOLLATION does not exist in Trafodion.

--- SQL operation failed with errors.
>>create function GETCOLLATION(char(32) collate czech_ci) returns char(32)
+>language c parameter style sql external name 'getCollation'
+>library TEST107
+>deterministic no sql final call allow any parallelism state area size 1024 ;

*** ERROR[4069] Column  uses an unsupported collation.

--- SQL operation failed with errors.
>>
>>values(getCollation('ghi'));

*** ERROR[4450] Function TRAFODION."_UDF_".GETCOLLATION is not a built-in function or registered user-defined function.

*** ERROR[8822] The statement was not prepared.

>>
>>cqd query_cache 'reset';

--- SQL operation complete.
>>control query default ROUTINE_CACHE_SIZE reset;

--- SQL operation complete.
>>control query default QUERY_CACHE reset;

--- SQL operation complete.
>>
>>-----------------------------------------------------------------------------
>>-- UDRINFO fields SESSION_USER, CURRENT_USER, CURRENT_ROLE
>>-----------------------------------------------------------------------------
>>-- adding another number at the end of values() to prevent 
>>-- logsort from stripping trailing spaces
>>values(session_user_name(), 1);

SESSION_USER_NAME                                                                                                                 (EXPR)
--------------------------------------------------------------------------------------------------------------------------------  ------

DB__ROOT                                                                                                                               1

--- 1 row(s) selected.
>>values (validate_session_user_name(session_user));

STATUS                          
--------------------------------

PASS                            

--- 1 row(s) selected.
>>values (validate_session_user_name('xxxxxxxxxx'));

STATUS                          
--------------------------------

FAIL                            

--- 1 row(s) selected.
>>
>>-- adding another number at the end of values() to prevent 
>>-- logsort from stripping trailing spaces
>>values(current_user_name(),1);

CURRENT_USER_NAME                                                                                                                 (EXPR)
--------------------------------------------------------------------------------------------------------------------------------  ------

DB__ROOT                                                                                                                               1

--- 1 row(s) selected.
>>values (validate_current_user_name(current_user));

STATUS                          
--------------------------------

PASS                            

--- 1 row(s) selected.
>>values (validate_current_user_name('xxxxxxxxxx'));

STATUS                          
--------------------------------

FAIL                            

--- 1 row(s) selected.
>>
>>log;
