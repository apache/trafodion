-- ============================================================================
-- TEST009 - tests external tables for hive
--
-- @@@ START COPYRIGHT @@@
--
--  Licensed under the Apache License, Version 2.0 (the "License");
--  you may not use this file except in compliance with the License.
--  You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
--  Unless required by applicable law or agreed to in writing, software
--  distributed under the License is distributed on an "AS IS" BASIS,
--  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--  See the License for the specific language governing permissions and
--  limitations under the License.
--
-- @@@ END COPYRIGHT @@@
--
-- This tests the following commands:
--
--   create external table
--   drop external table
--
-- When local hadoop is executed, a set of hive tables in the hive default
-- schema are created.  This test assumes that the following hive tables 
-- exist:
--     customer
--     item
--     promotion
--
-- ============================================================================

obey TEST009(clean_up);
log LOG009 clear;
obey TEST009(set_up);
obey TEST009(create_db);
obey TEST009(test_hive1);
obey TEST009(test_hive2);
obey TEST009(test_hbase);
log;
obey TEST009(clean_up);
exit;

?section clean_up

-- remove messed up table
cleanup table "_HV_SCH_T009_".t009t1;
-- remove schemas from Trafodion
drop schema if exists "_HV_HIVE_" cascade;
drop schema if exists "_HV_SCH_T009_" cascade;
drop schema if exists hive_t009 cascade;

-- remove data from hdfs
sh regrhadoop.ksh fs -rm   /user/hive/exttables/t009t1/*;
sh regrhadoop.ksh fs -rm   /user/hive/exttables/t009t2/*;

-- drop hbase tables
drop schema if exists "_HB__ROW__" cascade;
drop schema if exists "_HB__CELL__" cascade;

-- remove table from hbase
drop hbase table "baseball";

-- remove special schemas
set parserflags 131072;
drop schema "_HBASESTATS_" cascade;
drop schema "_HIVESTATS_" cascade;
cleanup table "_HB__CELL__".t028tbl1;
drop schema "_HB__CELL__" cascade;
reset parserflags 131072;
 
?section create_db

-- The version of hive installed does not support special characters
-- TDB - when hive is upgraded to a new version, add tests where
--   the hive schema contains special characters
sh regrhive.ksh -v -f $REGRTSTDIR/TEST009_a.hive.sql &> $REGRRUNDIR/LOG009_a.hive.log;
sh regrhbase.ksh $REGRTSTDIR/TEST009_create_hbase_objects.hbase &> $REGRRUNDIR/LOG009_create_hbase_tables.log ;

-- make sure external schemas exist in Trafodion
execute get_hv_schemas;
execute get_hb_schemas;

?section set_up
prepare get_hv_schemas from
select schema_name from "_MD_".objects
where schema_name like '_HV_%' and object_type = 'PS';

prepare get_hb_schemas from
select schema_name from "_MD_".objects
where schema_name like '_HB_%' and object_type = 'PS';

?section test_hive1
-- create external tables for precreated tables
create external table customer for hive.hive.customer;
create external table item for hive.hive.item;
create external table promotion for hive.hive.promotion;

-- should create an schema called "_HV_HIVE_"
execute get_hv_schemas;

-- Verify tables were created
showddl trafodion."_HV_HIVE_".customer;
showddl trafodion."_HV_HIVE_".item;
showddl trafodion."_HV_HIVE_".promotion;

-- create external tables from hive schema sch_t009
create external table t009t1 for hive.sch_t009.t009t1;
create external table t009t2 for hive.sch_t009.t009t2;

execute get_hv_schemas;
showddl trafodion."_HV_SCH_T009_".t009t1;
showddl trafodion."_HV_SCH_T009_".t009t2;

select count(*) from hive.hive.customer;
select count(*) from hive.hive.item;
select count(*) from hive.hive.promotion;

select * from hive.sch_t009.t009t1;
select * from hive.sch_t009.t009t2;

-- fails since accesses to the external name are prohibited
select * from trafodion."_HV_SCH_T009_".t009t1;

set schema "_HV_HIVE_";

-- all these creates should fail, they are not supported yet
create table hive_customer like hive.hive.customer;
create table newtable1 like hive.hive.customer;
create table newtable2 like customer;
create table newtable3 (a int);
get tables;

-- test creates with a different default schema
create schema hive_t009;
set schema hive_t009;

-- these creates fail
create table hive_customer like hive.hive.customer;
create table newtable1 like hive.hive.customer;
create external table seabase.customer like hive.hive.customer;
create external table customer1 like hive.hive.customer;
create table t009t1 like "_HV_SCH_T009_".t009t1;
create table t009t2 as select * from "_HV_SCH_T009_".t009t2;

-- this create succeeds
create table t009t1 as select * from hive.sch_t009.t009t1;

get tables;
drop table t009t1;

drop external table "_HV_HIVE_".customer;
drop external table item for hive.hive.item;

?section test_hive2
-- drop data from the hive table and recreate with 4 columns
-- this causes the external table to be invalid

-- cleanup data from the old table, and create/load data with additional column
sh regrhadoop.ksh fs -rm   /user/hive/exttables/t009t1/*;
sh regrhive.ksh -v -f $REGRTSTDIR/TEST009_b.hive.sql &> $REGRRUNDIR/LOG009_b.hive.log;;

-- should fail - column mismatch
select count(*) from hive.sch_t009.t009t1;

sh sqlci -i "TEST009(select_stmts)";

-- drop and recreate external table
select catalog_name, schema_name, object_name from table(natablecacheentries('user','local')) order by 1,2,3;
drop external table t009t1 for hive.sch_t009.t009t1;
get tables in schema "_HV_SCH_T009_";
select row_id, catalog_name, schema_name, object_name from table(natablecacheentries('user','local')) order by 2,3,4;
create external table t009t1 for hive.sch_t009.t009t1;

-- select should now succeed
select count(*) from hive.sch_t009.t009t1;

?section select_stmts
log LOG009;
select * from hive.sch_t009.t009t1;
select * from hive.sch_t009.t009t2;

?section test_hbase
-- create external tables for precreated tables
create external table "baseball" for hbase."_ROW_"."baseball";
create external table "baseball" for hbase."_CELL_"."baseball";

-- should create schemas called "_HB__ROW__" and "_HB__CELL__"
execute get_hb_schemas;

-- Verify tables were created
showddl trafodion."_HB__ROW__"."baseball";
showddl trafodion."_HB__CELL__"."baseball";

select count(*) from hbase."_ROW_"."baseball";
select count(*) from hbase."_CELL_"."baseball";

select left(row_id, 10) as row_id, left(column_display(column_details, ('teams:team_number', 'games:visitor_team', 'games:game_time')), 100) as cols from hbase."_ROW_"."baseball";

-- fails since accesses to the external name are prohibited
select * from trafodion."_HB__ROW__"."baseball";

drop external table trafodion."_HB__ROW__"."baseball";
drop external table "baseball" for hbase."_CELL_"."baseball";

