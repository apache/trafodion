-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
-- properties of BEFORE triggers
-- conflict set - first trigger with a SIGNAL.

-- runs on cat1.schm and cat1.schm_alt
----------------------------------------

-- clean_up on all schemas

set schema CAT1.SCHM;
obey TEST_4_1_5(clean_up);
set schema CAT1.SCHM_ALT;
obey TEST_4_1_5(clean_up);

-- start logging
log   LOG_4_1_5 clear;

set schema CAT1.SCHM;
obey TEST_4_1_5(set_up);
obey TEST_4_1_5(tests);
obey TEST_4_1_5(clean_up);

-- switch schemas
set schema CAT1.SCHM_ALT;
obey TEST_4_1_5(set_up);
obey TEST_4_1_5(tests);
obey TEST_4_1_5(clean_up);

-- make trig temp tables partitioned
set schema CAT1.SCHM_ALT;
control query default TEMPORARY_TABLE_HASH_PARTITIONS $$TrigTempTablePartition1$$;
obey TEST_4_1_5(set_up);
obey TEST_4_1_5(tests);

-- end logging
LOG;

-- cleanup (last schema)
obey TEST_4_1_5(clean_up);

exit;
----------------------------------------

?section clean_up

drop trigger bt1;
drop trigger bt2;
delete from tab1b;

?section set_up

create trigger bt1 before insert on tab1b
	referencing new as my_new
	for each row
	SIGNAL SQLSTATE 's7777' ('Gotcha!');

?section tests

--------------------------------------------------------
-- TEST CASE
--------------------------------------------------------
-- This should fail with a Signal message.
insert into tab1b values (1,1);


create trigger bt2 before insert on tab1b
	referencing new as my_new
	for each row
	SET my_new.a = 99;


-- This too should fail with a Signal message,
insert into tab1b values (2,2);

-- tab1b should be empty!!
select * from tab1b order by a; 
--------------------------------------------------------
