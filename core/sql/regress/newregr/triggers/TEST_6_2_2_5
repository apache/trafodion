-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
-- conflict sets
-- RW-conflicting set
-- runs on cat1.schm and cat1.schm_alt
----------------------------------------

--CONTROL QUERY DEFAULT ATTEMPT_ESP_PARALLELISM 'OFF';

-- clean_up on all schemas

set schema CAT1.SCHM;
obey TEST_6_2_2_5(clean_up);
set schema CAT1.SCHM_ALT;
obey TEST_6_2_2_5(clean_up);

-- start logging
log   LOG_6_2_2_5 clear;

set schema CAT1.SCHM;
obey TEST_6_2_2_5(set_up);
obey TEST_6_2_2_5(tests);
obey TEST_6_2_2_5(clean_up);

-- switch schemas
set schema CAT1.SCHM_ALT;
obey TEST_6_2_2_5(set_up);
obey TEST_6_2_2_5(tests);

-- end logging
LOG;

-- cleanup (last schema)
obey TEST_6_2_2_5(clean_up);

exit;
----------------------------------------

?section clean_up
 
DROP TRIGGER rt1;
DROP TRIGGER rt2; 
DROP TRIGGER rt4; 
obey clearTables2;

?section set_up

INSERT INTO T1 VALUES (1,2);
INSERT INTO T1 VALUES (2,3);
INSERT INTO T1 VALUES (3,4);
INSERT INTO T4 VALUES (0);

---------------------------------
-- DEFINE TRIGGERS
---------------------------------

CREATE TRIGGER rt1
AFTER UPDATE ON T1
REFERENCING OLD AS oldR FOR EACH ROW
UPDATE T4 set a = oldR.b+1 ;

---------

CREATE TRIGGER rt2
AFTER UPDATE ON T1
REFERENCING OLD AS oldR FOR EACH ROW
UPDATE T4 set a = oldR.b+2 ;

--------

CREATE TRIGGER rt4
AFTER UPDATE ON T1
REFERENCING OLD AS oldR FOR EACH ROW
UPDATE T4 set a = oldR.b+3 ;


?section tests

------------------------------------------------------------------
--          TEST CASE
------------------------------------------------------------------

UPDATE T1 SET b=b+1;

SELECT * FROM T1 ORDER BY a,b; -- check result

SELECT * FROM T4 ORDER BY a; -- check result

------------------------------------------------------------------
--           END
------------------------------------------------------------------
