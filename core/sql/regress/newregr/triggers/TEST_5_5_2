-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
-- cascading triggers
-- cascading 'after' and 'before' triggers

-- runs on cat1.SCHM_ALT only
----------------------------------------

-- clean_up on all schemas
set schema CAT1.SCHM_ALT;
obey TEST_5_5_2(clean_up);

-- start logging
log   LOG_5_5_2 clear;

set schema CAT1.SCHM_ALT;
obey TEST_5_5_2(set_up);
obey TEST_5_5_2(tests);
obey TEST_5_5_2(clean_up);

-- end logging
LOG;

-- cleanup (last schema)
obey TEST_5_5_2(clean_up);

exit;
----------------------------------------


?section clean_up

DROP TRIGGER atrig552;
DROP TRIGGER btrig552;
obey clearTables;

?section set_up

INSERT INTO tab1A VALUES (1,2,3,4);
INSERT INTO tab1A VALUES (2,3,4,5);

---------------------------------
-- DEFINE TRIGGER atrig552
---------------------------------

CREATE TRIGGER atrig552
AFTER UPDATE OF (b) ON tab1A
REFERENCING NEW AS newR
FOR EACH ROW
WHEN (newR.b <11)
UPDATE tab1A SET c=c+1 WHERE a=newR.a;

---------------------------------
-- DEFINE TRIGGER btirg552
---------------------------------


CREATE TRIGGER btrig552
BEFORE UPDATE OF (c) 
ON tab1A
REFERENCING NEW AS newR
FOR EACH ROW
SET newR.b = newR.c;
?section tests

------------------------------------------------------------------
--          TEST CASE
------------------------------------------------------------------

UPDATE tab1A SET b=b+1;

SELECT * FROM tab1A; -- check result

------------------------------------------------------------------
--           END
------------------------------------------------------------------
