-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
-- HL_R2_Triggers_Spec.doc: SPJ enhancements to Triggers
-- CS with one trigger event that is cascading.
-- Result: Success

obey TEST_SPJC_FUNC_005(clean_up);
obey TEST_SPJC_FUNC_005(set_up);
log  LOG_SPJC_FUNC_005 clear;
obey TEST_SPJC_FUNC_005(tests);
log;
obey TEST_SPJC_FUNC_005(clean_up);
exit;

?section clean_up
set schema CAT1.SCHM;

drop trigger TRIG01_SPJC_FUNC_005;
drop trigger TRIG02_SPJC_FUNC_005;

drop table TAB01_SPJC_FUNC_005;
drop table TAB02_SPJC_FUNC_005;
drop table TAB03_SPJC_FUNC_005;

?section set_up
set schema CAT1.SCHM;

SET ENVVAR ALLOW_CS_IN_SQLCI 1;
CONTROL QUERY DEFAULT POS 'OFF';

create table TAB01_SPJC_FUNC_005(a int, b int, c int, d int);
create table TAB02_SPJC_FUNC_005(a int, b int, c int, d int);
create table TAB03_SPJC_FUNC_005(a int, b int, c int, d int);

INSERT INTO TAB01_SPJC_FUNC_005 VALUES (1, 2, 3, 4),
				(8, 6, 4, 2),
				(3, 6, 9, 12);

?section tests

------------------------------------------------------------------
-- TEST CASE 01: Cascading trigger
-- Result: Success
------------------------------------------------------------------

CREATE TRIGGER TRIG01_SPJC_FUNC_005 AFTER DELETE ON
TAB01_SPJC_FUNC_005
REFERENCING OLD ROW AS O
FOR EACH ROW
	INSERT INTO TAB02_SPJC_FUNC_005 VALUES (O.A, O.B, O.C, O.D);

CREATE TRIGGER TRIG02_SPJC_FUNC_005 AFTER INSERT ON
TAB02_SPJC_FUNC_005
REFERENCING NEW ROW AS N
FOR EACH ROW
	INSERT INTO TAB03_SPJC_FUNC_005 VALUES (N.A, N.B, N.C, N.D);
------------------------------------------------------------------

-- original table
select * from TAB01_SPJC_FUNC_005;

-- The tests

BEGIN
--	triggers an insert of old values into TAB02_SPJC_FUNC_005
	DELETE FROM TAB01_SPJC_FUNC_005 where a = 8;
END;


-- Result: TAB01_SPJC_FUNC_005 has two rows
select * from TAB01_SPJC_FUNC_005;

-- Result: TAB02_SPJC_FUNC_005 has one row
select * from TAB02_SPJC_FUNC_005;

-- Result: TAB03_SPJC_FUNC_005 has one row
select * from TAB03_SPJC_FUNC_005;
------------------------------------------------------------------
