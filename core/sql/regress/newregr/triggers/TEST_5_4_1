-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
-- cascading triggers
-- recursive 'after' triggers

-- runs on cat1.SCHM_ALT only
----------------------------------------

-- This CQD is needed (at least temporarily to avoid asserts in
-- compiler/generator).  kommoju, Fri Dec  8 16:20:27 PST 2006
--
--control query default ATTEMPT_ESP_PARALLELISM 'OFF';

-- clean_up on all schemas
set schema CAT1.SCHM_ALT;
obey TEST_5_4_1(clean_up);

-- start logging
log   LOG_5_4_1 clear;

set schema CAT1.SCHM_ALT;
obey TEST_5_4_1(set_up);
obey TEST_5_4_1(tests);
obey TEST_5_4_1(clean_up);

-- end logging
LOG;

-- cleanup (last schema)
obey TEST_5_4_1(clean_up);

exit;
----------------------------------------

?section clean_up

DROP TRIGGER atrig541;
obey clearTables;

?section set_up

INSERT INTO tab1A VALUES (1,1,1,1);
INSERT INTO tab1A VALUES (2,2,2,2);
INSERT INTO tab1A VALUES (3,3,3,3);

---------------------------------
-- DEFINE TRIGGER atrig541
---------------------------------

CREATE TRIGGER atrig541
AFTER UPDATE OF (b) ON tab1A
REFERENCING NEW AS newR 
FOR EACH ROW
WHEN (newR.b < (newR.a + 4))
UPDATE tab1A SET b=b+1 WHERE a = newR.a;
?section tests

------------------------------------------------------------------
--          TEST CASE
------------------------------------------------------------------

UPDATE tab1A SET b = b+1;

SELECT * FROM tab1A; -- check result

------------------------------------------------------------------
--           END
------------------------------------------------------------------
