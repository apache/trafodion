-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
-- HL_R2_Triggers_Spec.doc: SPJ enhancements to Triggers
-- Row/Statement trigger with a compound statement triggered
-- action that has a dynamic parameter.
-- Result: Error

obey TEST_SPJC_STX_015(clean_up);
obey TEST_SPJC_STX_015(set_up);
LOG LOG_SPJC_STX_015 clear;
obey TEST_SPJC_STX_015(tests);
LOG;
obey TEST_SPJC_STX_015(clean_up);
exit;

?section clean_up
set schema CAT1.SCHM;

drop trigger TRIG01_SPJC_STX_015;
drop trigger TRIG02_SPJC_STX_015;

drop table TAB01_SPJC_STX_015;
drop table TAB02_SPJC_STX_015;

?section set_up
set schema CAT1.SCHM;

SET ENVVAR ALLOW_CS_IN_SQLCI 1;
CONTROL QUERY DEFAULT POS 'OFF';

create table TAB01_SPJC_STX_015(a int, b int, c int, d int);
create table TAB02_SPJC_STX_015(a int, b int, c int, d int);

INSERT INTO TAB01_SPJC_STX_015 VALUES (1, 2, 3, 4),
						(8, 6, 4, 2),
						(3, 6, 9, 12);

set param ?t1p1 101;

?section tests

------------------------------------------------------------------
-- TEST CASE 01: Row trigger with a compound statement triggered action
-- that has a dynamic parameter.
-- Result: Error
------------------------------------------------------------------

CREATE TRIGGER TRIG01_SPJC_STX_015 AFTER UPDATE ON
TAB01_SPJC_STX_015
REFERENCING OLD ROW AS O, NEW ROW AS N
FOR EACH ROW
	BEGIN ATOMIC
		INSERT INTO TAB02_SPJC_STX_015 VALUES (:t1p1, O.B, O.C, O.D);
		IF (N.A > O.B) THEN
			INSERT INTO TAB02_SPJC_STX_015 VALUES (N.A, N.B, N.C, N.D);
		ELSEIF (N.A < O.B) THEN
			INSERT INTO TAB02_SPJC_STX_015 VALUES (N.A, O.B, N.C, O.D);
		ELSE
			INSERT INTO TAB02_SPJC_STX_015 VALUES
					(O.A + N.A, O.B + N.B, O.C + N.C, O.D + N.D);
			SIGNAL SQLSTATE 'S0213'('TRIG01_SPJC_STX_015');
		END IF;
	END;

------------------------------------------------------------------

------------------------------------------------------------------
--TEST CASE 02: Statement trigger with a compound statement triggered
--action that has a dynamic parameter.
-- Result: Error
------------------------------------------------------------------

CREATE TRIGGER TRIG02_SPJC_STX_015 AFTER DELETE ON
TAB01_SPJC_STX_015
REFERENCING OLD TABLE AS OT
FOR EACH STATEMENT
	BEGIN ATOMIC
		INSERT INTO TAB02_SPJC_STX_015
			SELECT * FROM TAB01_SPJC_STX_015
			WHERE TAB01_SPJC_STX_015.A = :t1p1;
	END;

------------------------------------------------------------------
