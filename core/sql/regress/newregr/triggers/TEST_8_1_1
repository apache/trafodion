-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
-- data change violation exception
-- runs on cat1.schm and cat1.schm_alt
----------------------------------------

-- clean_up on all schemas

--control query default ATTEMPT_ESP_PARALLELISM 'OFF';

set schema CAT1.SCHM;
obey TEST_8_1_1(clean_up);
set schema CAT1.SCHM_ALT;
obey TEST_8_1_1(clean_up);

-- start logging
log   LOG_8_1_1 clear;

set schema CAT1.SCHM;
obey TEST_8_1_1(set_up);
obey TEST_8_1_1(tests);
obey TEST_8_1_1(clean_up);

-- switch schemas
set schema CAT1.SCHM_ALT;
obey TEST_8_1_1(set_up);
obey TEST_8_1_1(tests);

-- end logging
LOG;

-- cleanup (last schema)
obey TEST_8_1_1(clean_up);

exit;
----------------------------------------

?section clean_up

DROP TRIGGER atrig811;
obey clearTables;

?section set_up

INSERT INTO tab1A VALUES (1,2,3,4);
INSERT INTO tab1A VALUES (2,3,4,5);
INSERT INTO tab1A VALUES (3,4,5,6);
INSERT INTO tab1B VALUES (0, 0);

---------------------------------
-- DEFINE TRIGGER atrig811
---------------------------------

CREATE TRIGGER atrig811
AFTER UPDATE ON tab1A
REFERENCING NEW AS newR 
FOR EACH ROW
UPDATE tab1B SET b = newR.b WHERE a = 0;
?section tests

------------------------------------------------------------------
--          TEST CASE
------------------------------------------------------------------

UPDATE tab1A SET b = b+1;

SELECT * FROM tab1B ORDER BY a; -- check result

------------------------------------------------------------------
--           END
------------------------------------------------------------------
