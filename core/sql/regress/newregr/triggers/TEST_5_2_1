-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
-- cascading triggers
-- 'after' triggers
-- runs on cat1.schm and cat1.schm_alt
----------------------------------------

-- This CQD is needed (at least temporarily to avoid asserts in
-- compiler/generator).  kommoju, Fri Dec  8 16:20:27 PST 2006
--
--control query default ATTEMPT_ESP_PARALLELISM 'OFF';

-- clean_up on all schemas

set schema CAT1.SCHM;
obey TEST_5_2_1(clean_up);
set schema CAT1.SCHM_ALT;
obey TEST_5_2_1(clean_up);

-- start logging
log   LOG_5_2_1 clear;

set schema CAT1.SCHM;
obey TEST_5_2_1(set_up);
obey TEST_5_2_1(tests);
obey TEST_5_2_1(clean_up);

-- switch schemas
set schema CAT1.SCHM_ALT;
obey TEST_5_2_1(set_up);
obey TEST_5_2_1(tests);

-- end logging
LOG;

-- cleanup (last schema)
obey TEST_5_2_1(clean_up);

exit;
----------------------------------------

?section clean_up

DROP TRIGGER atrig31;
DROP TRIGGER atrig32;
DROP TRIGGER atrig33;
obey clearTables;

?section set_up

INSERT INTO tab1A VALUES (1,2,3,4);
INSERT INTO tab1A VALUES (2,3,4,5);
INSERT INTO tab1A VALUES (3,4,5,6);
INSERT INTO tab1B VALUES (10,10);
INSERT INTO cat2.schm.tab2A VALUES (20,20);

---------------------------------
-- DEFINE TRIGGER atrig31
---------------------------------

CREATE TRIGGER atrig31
AFTER UPDATE ON tab1A
REFERENCING OLD AS oldR
FOR EACH ROW
INSERT INTO tab1B VALUES (oldR.a, oldR.b);


---------------------------------
-- DEFINE TRIGGER atrig32
---------------------------------

CREATE TRIGGER atrig32
AFTER INSERT ON tab1B
REFERENCING NEW AS newR
FOR EACH ROW
INSERT INTO cat2.schm.tab2A VALUES (newR.a, newR.b);

---------------------------------
-- DEFINE TRIGGER atrig33
---------------------------------

CREATE TRIGGER atrig33
AFTER INSERT ON cat2.schm.tab2A
FOR EACH ROW
UPDATE cat2.schm.tab2A SET b=b+1;

?section tests

------------------------------------------------------------------
--          TEST CASE
------------------------------------------------------------------

UPDATE tab1A SET b = b+10 WHERE a<3;

SELECT * FROM tab1A; -- check result

SELECT * FROM tab1B; -- check result

SELECT * FROM cat2.schm.tab2A; -- check result

------------------------------------------------------------------
--           END
------------------------------------------------------------------
