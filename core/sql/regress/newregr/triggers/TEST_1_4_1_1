-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
-- Using transition variables
-- Using transition variables in the trigger Body

-- runs on cat1.schm and cat1.schm_alt
----------------------------------------

--control query default ATTEMPT_ESP_PARALLELISM 'OFF';

-- clean_up on all schemas

set schema CAT1.SCHM;
obey TEST_1_4_1_1(clean_up);
set schema CAT1.SCHM_ALT;
obey TEST_1_4_1_1(clean_up);

-- start logging
log   LOG_1_4_1_1 clear;

set schema CAT1.SCHM;
obey TEST_1_4_1_1(set_up);
obey TEST_1_4_1_1(tests);
obey TEST_1_4_1_1(clean_up);

-- switch schemas
set schema CAT1.SCHM_ALT;
obey TEST_1_4_1_1(set_up);
obey TEST_1_4_1_1(tests);

-- end logging
LOG;

-- cleanup (last schema)
obey TEST_1_4_1_1(clean_up);

exit;
-----------------------------------------


?section clean_up

DROP TRIGGER trig1;
obey clearTables;

?section set_up

INSERT INTO tab1A VALUES (1,2,3,4);

CREATE TRIGGER trig1 AFTER UPDATE 
	ON tab1A
	REFERENCING NEW AS newrow, OLD AS oldrow
	FOR EACH ROW
		WHEN (newrow.b > oldrow.b)

		INSERT INTO tab1A VALUES (newrow.a +1, newrow.b, oldrow.c, oldrow.d); 
?section tests

------------------------------------------------------------------
-- 	TEST CASE
------------------------------------------------------------------
-- the following command should add another row to tab1A

UPDATE tab1A SET b=3, c=2;

--------------------------------------------------------
-- RESULT: tab1A: 
-- 1  3  2  4
-- 2  3  3  4
--------------------------------------------------------
SELECT * FROM tab1A;

--------------------------------------------------------
