-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
-- HL_R2_Triggers_Spec.doc: SPJ enhancements to Triggers
-- CS with multiple statements that are selectively executed using IF
-- statements.
-- Result: Success

obey TEST_SPJC_CSTA_006(clean_up);
obey TEST_SPJC_CSTA_006(set_up);
log  LOG_SPJC_CSTA_006 clear;
obey TEST_SPJC_CSTA_006(tests);
LOG;
obey TEST_SPJC_CSTA_006(clean_up);
exit;

?section clean_up
set schema CAT1.SCHM;


drop trigger TRIG01_SPJC_CSTA_006;

drop table TAB01_SPJC_CSTA_006;
drop table TAB02_SPJC_CSTA_006;

?section set_up
set schema CAT1.SCHM;

SET ENVVAR ALLOW_CS_IN_SQLCI 1;
CONTROL QUERY DEFAULT POS 'OFF';

CREATE TABLE TAB01_SPJC_CSTA_006(a int, b int, c int, d int);
CREATE TABLE TAB02_SPJC_CSTA_006(a int, b int, c int, d int);

INSERT INTO TAB01_SPJC_CSTA_006 VALUES (10, 11, 12, 13),
                (20, 21, 22, 23),
                (30, 31, 32, 33);

?section tests

------------------------------------------------------------------
-- TEST CASE 01: CS with multiple statements that are selectively
-- executed using IF statements.
-- Result: Success
------------------------------------------------------------------

CREATE TRIGGER TRIG01_SPJC_CSTA_006 AFTER UPDATE ON
TAB01_SPJC_CSTA_006
REFERENCING OLD ROW AS O, NEW ROW AS N
FOR EACH ROW
BEGIN ATOMIC
	IF (O.A < N.A) THEN
		INSERT INTO TAB02_SPJC_CSTA_006 VALUES(O.A, O.B, O.C, O.D);
	ELSEIF (O.A > N.A) THEN
		INSERT INTO TAB02_SPJC_CSTA_006 VALUES(N.A, N.B, N.C, N.D);
	ELSEIF (N.A IS NULL) THEN
		INSERT INTO TAB02_SPJC_CSTA_006 VALUES(NULL, NULL, O.A, O.B);
	END IF;
END;
------------------------------------------------------------------

UPDATE TAB01_SPJC_CSTA_006 SET A = A + 100 WHERE A = 10;

SELECT * FROM TAB01_SPJC_CSTA_006;

-- Result: TAB02_SPJC_CSTA_006 has the old row from TAB01_SPJC_CSTA_006
SELECT * FROM TAB02_SPJC_CSTA_006;

UPDATE TAB01_SPJC_CSTA_006 SET A = A - 5 WHERE A = 20;

-- Result: TAB02_SPJC_CSTA_006 has the new row from TAB01_SPJC_CSTA_006 and
-- the result of previous update (total of two rows)

SELECT * FROM TAB02_SPJC_CSTA_006;

UPDATE TAB01_SPJC_CSTA_006 SET A = NULL WHERE A = 30;

-- Result: TAB02_SPJC_CSTA_006 has {NULL, NULL, 30, 31} and the
-- previous two rows
SELECT * FROM TAB02_SPJC_CSTA_006;
------------------------------------------------------------------
