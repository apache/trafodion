-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
-- implicit defaults
-- Verifying that STATEMENT is the default granularity


obey TEST_1_1_4_1(clean_up);
obey TEST_1_1_4_1(set_up);
log   LOG_1_1_4_1 clear;
obey TEST_1_1_4_1(tests);
LOG;
obey TEST_1_1_4_1(clean_up);
exit;

?section clean_up
set schema CAT1.SCHM;
 
DROP TRIGGER trig41;


obey clearTables;

?section set_up
SET SCHEMA cat1.schm;

INSERT INTO tab1A VALUES (1,2,3,4);
INSERT INTO tab1A VALUES (11,12,13,14);
INSERT INTO tab1A VALUES (21,32,43,34);

CREATE TRIGGER trig41 AFTER UPDATE 
	ON tab1A
		INSERT INTO tab1B VALUES (100000, 100000);
?section tests

------------------------------------------------------------------
-- 	TEST CASE
------------------------------------------------------------------

-- NOTE:  the following statement should fire the trigger once 
-- (the trigger default granularity is STATEMENT)
UPDATE tab1A SET c=2, d=2;

-- RESULT : tab1B has ONLY 1 row
SELECT count(*) FROM tab1B;

--------------------------------------------------------
