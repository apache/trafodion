-- @@@ START COPYRIGHT @@@
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--   http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
-- @@@ END COPYRIGHT @@@
-- full correct syntax
-- AFTER INSERT using NEW TABLE and a WHEN clause containing a sub-query 


obey TEST_1_1_1_2(clean_up);
obey TEST_1_1_1_2(set_up);
log   LOG_1_1_1_2 clear;
obey TEST_1_1_1_2(tests);
LOG;
obey TEST_1_1_1_2(clean_up);
exit;

?section clean_up
set schema CAT1.SCHM;
drop trigger trig2;
drop trigger trig2a;
obey clearTables;

?section set_up
SET SCHEMA cat1.schm;
?section tests

------------------------------------------------------------------
-- 	TEST CASE
------------------------------------------------------------------
CREATE TRIGGER trig2 AFTER INSERT
	ON tab1A
	REFERENCING NEW AS newTab
	FOR EACH STATEMENT
		WHEN (5 > (SELECT count(*) FROM newtab 
			 WHERE newTab.a + newTab.b = newTab.c))
		
		UPDATE tab1A
		SET d= 100 WHERE a in 
			(SELECT a FROM newTab);

-- a variation that should work
CREATE TRIGGER TRIG2a AFTER INSERT 
	ON TAB1A 
	REFERENCING NEW AS NEWTAB 
	FOR EACH STATEMENT 
		WHEN (5 > 3) 
		UPDATE TAB1A 
		SET D = 100 WHERE A IN (SELECT b FROM NEWTAB);
-- select b ... instead of select a ... 

---------------------------------------------------------------------------------
