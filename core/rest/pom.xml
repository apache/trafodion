<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
 <!-- 
* @@@ START COPYRIGHT @@@                                                       
*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*
* @@@ END COPYRIGHT @@@
-->

  <modelVersion>4.0.0</modelVersion>
   <!--To build a release I do this:

    $ mvn clean site install assembly:single -Prelease
   -->

  <groupId>org.trafodion</groupId>
  <artifactId>rest</artifactId>
  <packaging>jar</packaging>
  <version>${env.TRAFODION_VER}</version>
  <name>rest</name>
  <url>http://wiki.trafodion.org</url>
  
  <developers>
    <developer>
      <id>matbrown</id>
      <name>Matt Brown</name>
      <email>mattbrown@hp.com</email>
      <timezone>-8</timezone>
      <organization>HP</organization>
      <organizationUrl>http://www.hp.com</organizationUrl>
    </developer>
  </developers>
  
  <build>
   <resources>
      <resource>
        <directory>src/main/resources/</directory>
        <includes>
          <include>rest-default.xml</include>
        </includes>
      </resource>
  </resources>
  <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <excludes>
          <exclude>rest-site.xml</exclude>
        </excludes>
      </testResource>
  </testResources>      
      
  <plugins>
    <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven.antrun.plugin.version}</version>
        <executions>
           <execution>
            <id>generate</id>
            <phase>generate-sources</phase>
            <configuration>
              <target>
                <property name="generated.sources"
                          location="${project.build.directory}/generated-sources"/>
                <exec executable="sh">
                    <arg line="${basedir}/src/saveVersion.sh ${project.version} ${generated.sources}/java"/>
                </exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>package</id>
            <phase>package</phase>
            <configuration>
              <target>
                <!-- Complements the assembly -->

                <mkdir dir="${project.build.directory}/${project.build.finalName}/${project.build.finalName}"/>
 
                <!-- Using Unix tar to preserve symlinks -->
				<echo file="${project.build.directory}/maketar.sh">
					which cygpath 2&gt; /dev/null
					if [ $? = 1 ]; then
						BUILD_DIR="${project.build.directory}"
					else
						BUILD_DIR=`cygpath --unix '${project.build.directory}'`
					fi

					cd $BUILD_DIR/${project.build.finalName}
					tar czf $BUILD_DIR/${project.build.finalName}.tar.gz ${project.build.finalName}
				</echo>
                <exec executable="sh" dir="${project.build.directory}" failonerror="yes">
                    <arg line="./maketar.sh"/>
                </exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>          
        </executions>
    </plugin>
    <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build.helper.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>packageInfo-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin> 
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <tarLongFileMode>gnu</tarLongFileMode>
          <appendAssemblyId>false</appendAssemblyId>
          <descriptors>
            <descriptor>src/assembly/all.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>tarball</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
    </plugin>
    <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <version>${xml.maven.plugin.version}</version>
        <inherited>false</inherited>
        <executions>
          <execution>
            <goals>
              <goal>transform</goal>
            </goals>
            <phase>pre-site</phase>
          </execution>
        </executions>
        <configuration>
          <transformationSets>
            <transformationSet>
              <dir>${basedir}/src/main/resources/</dir>
              <includes>
                <include>rest-default.xml</include>
              </includes>
              <stylesheet>${basedir}/src/main/xslt/configuration_to_asciidoc_chapter.xsl</stylesheet>
              <fileMappers>
                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                  <pattern>^(.*)\.xml$</pattern>
                  <replacement>$1.adoc</replacement>
                </fileMapper>
              </fileMappers>
              <outputDir>${basedir}/target/asciidoc</outputDir>
            </transformationSet>
          </transformationSets>
        </configuration>
    </plugin>
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${surefire.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>${surefire.provider}</artifactId>
            <version>${surefire.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <additionalClasspathElements>
             <additionalClasspathElement>${basedir}/target/test-classes/jdbcT4.jar</additionalClasspathElement>
          </additionalClasspathElements>
          <includes>
            <include>${integrationtest.include}</include>
          </includes>
          <excludes>
            <exclude>${unittest.include}</exclude>
            <exclude>**/*$*</exclude>
          </excludes>
          <redirectTestOutputToFile>${test.output.tofile}</redirectTestOutputToFile>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
    </plugin>
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <configuration>
            <skip>${surefire.skipFirstPart}</skip>
            <groups>${surefire.firstPartGroups}</groups>
            <testFailureIgnore>false</testFailureIgnore>
        </configuration>
        <executions>
            <execution>
                <id>secondPartTestsExecution</id>
                <phase>test</phase>
                <goals><goal>test</goal></goals>
                <configuration>
                    <skip>${surefire.skipSecondPart}</skip>
                    <testFailureIgnore>false</testFailureIgnore>
                    <groups>${surefire.secondPartGroups}</groups>
                </configuration>
            </execution>
        </executions>
    </plugin>
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven.resources.plugin.version}</version>
        <!--$NO-MVN-MAN-VER$ -->
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>copy-javadocs</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>site</phase>
            <configuration>
              <outputDirectory>target/site/apidocs</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/apidocs</directory>
                  <includes>
                    <include>**/**</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <escapeString>\</escapeString>
        </configuration>
    </plugin> 
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>${maven.site.plugin.version}</version>
        <inherited>false</inherited>
        <dependencies>
        </dependencies>
        <configuration>
          <siteDirectory>${basedir}/src/main/site</siteDirectory>
          <inputEncoding>UTF-8</inputEncoding>
          <outputEncoding>UTF-8</outputEncoding>
        </configuration>
    </plugin>     
    <!-- For AsciiDoc docs building -->
    <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>${asciidoctor.maven.plugin.version}</version> 
        <executions>
          <execution>
            <id>output-html</id> 
            <goals>
              <goal>process-asciidoc</goal> 
            </goals>
            <phase>site</phase>
            <configuration>
              <imagesDir>./images</imagesDir>
              <doctype>book</doctype>
              <attributes>
                <stylesheet>rest.css</stylesheet>
                <projectVersion>${project.version}</projectVersion>
                <buildDate>${maven.build.timestamp}</buildDate>
              </attributes>
              <backend>html5</backend>
              <sourceHighlighter>coderay</sourceHighlighter>
              <outputDirectory>target/site</outputDirectory>
            </configuration>
          </execution>
        </executions>
    </plugin> 
  </plugins>
  <pluginManagement>
  	<plugins>
  		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
  		<plugin>
  			<groupId>org.eclipse.m2e</groupId>
  			<artifactId>lifecycle-mapping</artifactId>
  			<version>1.0.0</version>
  			<configuration>
  				<lifecycleMappingMetadata>
  					<pluginExecutions>
  						<pluginExecution>
  							<pluginExecutionFilter>
  								<groupId>org.codehaus.mojo</groupId>
  								<artifactId>
  									build-helper-maven-plugin
  								</artifactId>
  								<versionRange>[1.5,)</versionRange>
  								<goals>
  									<goal>add-source</goal>
  								</goals>
  							</pluginExecutionFilter>
  							<action>
  								<ignore></ignore>
  							</action>
  						</pluginExecution>
  						<pluginExecution>
  							<pluginExecutionFilter>
  								<groupId>
  									org.apache.maven.plugins
  								</groupId>
  								<artifactId>
  									maven-antrun-plugin
  								</artifactId>
  								<versionRange>[1.6,)</versionRange>
  								<goals>
  									<goal>run</goal>
  								</goals>
  							</pluginExecutionFilter>
  							<action>
  								<ignore></ignore>
  							</action>
  						</pluginExecution>
  					</pluginExecutions>
  				</lifecycleMappingMetadata>
  			</configuration>
  		</plugin>
  	</plugins>
  </pluginManagement>
  </build>
  
  <properties>
  	<maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm</maven.build.timestamp.format>
  	<buildDate>${maven.build.timestamp}</buildDate>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	<compileSource>1.6</compileSource>
    
  	<!-- Dependencies -->
    <hadoop.version>2.4.0</hadoop.version>
  	<commons-cli.version>1.2</commons-cli.version>
  	<commons-codec.version>1.4</commons-codec.version>
  	<commons-io.version>2.1</commons-io.version>
  	<commons-lang.version>2.5</commons-lang.version>
  	<commons-logging.version>1.1.1</commons-logging.version>
 	<commons-math.version>2.1</commons-math.version>
  	<commons-configuration.version>1.6</commons-configuration.version>
  	<metrics-core.version>2.1.2</metrics-core.version>
  	<guava.version>11.0.2</guava.version>
  	<jackson.version>1.8.8</jackson.version>
  	<jasper.version>5.5.23</jasper.version>
  	<jaxb-api.version>2.1</jaxb-api.version>
    <jetty.version>9.2.10.v20150310</jetty.version>  
  	<jetty.jspapi.version>6.1.14</jetty.jspapi.version>
  	<jersey.version>1.8</jersey.version>
  	<junit.version>4.10</junit.version>
    <slf4j.version>1.6.6</slf4j.version>
  	<log4j.version>1.2.16</log4j.version>
  	<zookeeper.version>3.4.5</zookeeper.version>
  	<jython-standalone.version>2.5.3</jython-standalone.version>
  	<jettison.version>1.3.5</jettison.version>
  	<displaytag.version>1.1.1</displaytag.version>
  	<jdbct4.version>${project.version}</jdbct4.version>
   	
    <!-- Plugin Dependencies -->
    <maven.antrun.plugin.version>1.6</maven.antrun.plugin.version>
    <maven.site.plugin.version>3.3</maven.site.plugin.version>
    <maven.javadoc.plugin.version>2.9.1</maven.javadoc.plugin.version>
    <maven.resources.plugin.version>2.6</maven.resources.plugin.version>
    <maven.jxr.plugin.version>2.3</maven.jxr.plugin.version>
    <xml.maven.plugin.version>1.0</xml.maven.plugin.version>
    <maven.surefire.report.plugin.version>2.7.2</maven.surefire.report.plugin.version>
    <asciidoctor.maven.plugin.version>1.5.2</asciidoctor.maven.plugin.version>
    <maven.project.info.reports.plugin.version>2.1.2</maven.project.info.reports.plugin.version>
    <build.helper.maven.plugin.version>1.5</build.helper.maven.plugin.version>

    <package.version>${project.version}</package.version>
  	<final.name>${project.artifactId}-${project.version}</final.name>
  	
  	<!-- Test inclusion patterns used by failsafe configuration -->
    <unittest.include>**/Test*.java</unittest.include>
    <integrationtest.include>**/IntegrationTest*.java</integrationtest.include>
  	<surefire.provider>surefire-junit47</surefire.provider>
  	<surefire.version>2.17</surefire.version>
  	<test.output.tofile>true</test.output.tofile>
  	
    <!-- default: run small tests -->
    <surefire.skipFirstPart>false</surefire.skipFirstPart>
    <surefire.skipSecondPart>true</surefire.skipSecondPart>
	<surefire.firstPartGroups>org.trafodion.rest.SmallTests</surefire.firstPartGroups>
	<surefire.secondPartGroups>org.trafodion.rest.MediumTests, org.trafodion.rest.LargeTests</surefire.secondPartGroups>
  	
  </properties>
    
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

      <!-- General dependencies -->
  	<dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>${metrics-core.version}</version>
  	</dependency>
  	<dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
  	</dependency>
    <dependency>
	  <groupId>org.python</groupId>
	  <artifactId>jython-standalone</artifactId>
	  <version>${jython-standalone.version}</version>
    </dependency>
 	<dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>${commons-cli.version}</version>
  	</dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>${commons-configuration.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons-codec.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${commons-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>${commons-logging.version}</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <version>${hadoop.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty</artifactId>
        </exclusion>          
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty-util</artifactId>
        </exclusion>   
      </exclusions>                           
    </dependency>
    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
      <version>${zookeeper.version}</version>
      <exclusions>
        <exclusion>
          <groupId>jline</groupId>
          <artifactId>jline</artifactId>
        </exclusion>     
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion> 
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-continuation</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-http</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-io</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-security</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-util</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <!-- While jackson is also a dependency of both jersey and avro, these
         can bring in jars from different, incompatible versions. We force
         the same version with these dependencies -->
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-xc</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <!--If this is not in the runtime lib, we get odd
      "2009-02-27 11:38:39.504::WARN:  failed jsp
       java.lang.NoSuchFieldError: IS_SECURITY_ENABLED"
       exceptions out of jetty deploying webapps.
       St.Ack Thu May 20 01:04:41 PDT 2010
      -->
      <groupId>tomcat</groupId>
      <artifactId>jasper-compiler</artifactId>
      <version>${jasper.version}</version>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>jsp-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>ant</groupId>
          <artifactId>ant</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>tomcat</groupId>
      <artifactId>jasper-runtime</artifactId>
      <version>${jasper.version}</version>
      <scope>runtime</scope>
      <exclusions>
       <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>jsp-api</artifactId>
        </exclusion>          
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

     <!-- REST dependencies -->
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-core</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>${jaxb-api.version}</version>
      <exclusions>
        <exclusion>
          <groupId>javax.xml.stream</groupId>
          <artifactId>stax-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <version>${jettison.version}</version>
    </dependency>
    <!-- JDBCT4 dependencies -->    
    <dependency>    
      <groupId>org.trafodion.jdbc.t4.T4Driver</groupId>
      <artifactId>t4driver</artifactId>
      <version>${jdbct4.version}</version>
    </dependency>
 
  </dependencies>
  
  <profiles>
    <profile>
      <id>runSmallTests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <surefire.skipFirstPart>false</surefire.skipFirstPart>
        <surefire.skipSecondPart>true</surefire.skipSecondPart>
        <surefire.firstPartGroups>org.trafodion.rest.SmallTests</surefire.firstPartGroups>
        <surefire.secondPartGroups></surefire.secondPartGroups>
      </properties>
    </profile>
    <profile>
      <id>runMediumTests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <surefire.skipFirstPart>false</surefire.skipFirstPart>
        <surefire.skipSecondPart>true</surefire.skipSecondPart>
        <surefire.firstPartGroups>org.trafodion.rest.MediumTests</surefire.firstPartGroups>
        <surefire.secondPartGroups></surefire.secondPartGroups>
      </properties>
    </profile>
    <profile>
      <id>runLargeTests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <surefire.skipFirstPart>false</surefire.skipFirstPart>
        <surefire.skipSecondPart>true</surefire.skipSecondPart>
        <surefire.firstPartGroups>org.trafodion.rest.LargeTests</surefire.firstPartGroups>
        <surefire.secondPartGroups></surefire.secondPartGroups>
      </properties>
    </profile>
    <profile>
      <id>runAllTests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <surefire.skipFirstPart>false</surefire.skipFirstPart>
        <surefire.skipSecondPart>false</surefire.skipSecondPart>
        <surefire.firstPartGroups>org.trafodion.rest.SmallTests</surefire.firstPartGroups>
        <surefire.secondPartGroups>org.trafodion.rest.MediumTests, org.trafodion.rest.LargeTests</surefire.secondPartGroups>
      </properties>
    </profile>
  </profiles>
  
  <!-- See http://jira.codehaus.org/browse/MSITE-443 why the settings need to be here and not in pluginManagement. -->
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven.project.info.reports.plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>project-team</report>
              <report>mailing-list</report>
<!--   
              <report>cim</report>
              <report>issue-tracking</report>
              <report>license</report>
              <report>scm</report>
              <report>index</report>
-->
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
<!-- 
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <version>${maven.site.plugin.version}</version>
        <configuration>
          <inputEncoding>UTF-8</inputEncoding>
          <outputEncoding>UTF-8</outputEncoding>
          <templateFile>src/site/site.vm</templateFile>
        </configuration>
      </plugin>
 -->      
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
        <configuration>
          <docfilessubdirs>true</docfilessubdirs>
        </configuration>
        <reportSets>
          <reportSet>
            <id>default</id>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven.jxr.plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven.surefire.report.plugin.version}</version>
        <reportSets>
          <reportSet>
            <id>integration-tests</id>
            <reports>
              <report>report-only</report>
            </reports>
            <configuration>
              <outputName>failsafe-report</outputName>
              <reportsDirectories>
                <reportsDirectory>${project.build.directory}/failsafe-reports</reportsDirectory>
              </reportsDirectories>
            </configuration>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
</project>
