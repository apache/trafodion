<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="xdocbook.css" type="text/css"?>
<!-- 
* @@@ START COPYRIGHT @@@                                                       
*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*
* @@@ END COPYRIGHT @@@
-->

<!--Arbortext, Inc., 1988-2014, v.4002-->
<!DOCTYPE book PUBLIC "-//Apache Software Foundation (ASF)//DTD DocBook Extension//EN"
 "ess.dtd">
<book>
<title>Trafodion Command Interface Guide</title>
<bookinfo>
<title>Trafodion Command Interface Guide</title>
<edition>Trafodion Release 0.8.0 Beta</edition><pubsnumber>T824-080-001</pubsnumber>
<pubdate>June 2014</pubdate>
<abstract condition="hidden">
<para>Last updated: 5/28/2014</para>
</abstract>
<copyright><year>2015</year><holder> Apache Software Foundation (ASF),
</holder></copyright>
<legalnotice>
<!--WRITER'S NOTE: HP legal notice for open source release-->
<title>Legal Notice</title>
<para>The information contained herein is subject to change without
notice. This documentation is distributed on an “AS IS” basis, without
warranties or conditions of any kind, either express or implied. Nothing
herein should be construed as constituting an additional warranty.
HP shall not be liable for technical or editorial errors or omissions
contained herein.</para><para>NOTICE REGARDING OPEN SOURCE SOFTWARE:
Project Trafodion is licensed under the Apache License, Version 2.0
(the "License"); you may not use software from Project Trafodion except
in compliance with the License. You may obtain a copy of the License
at <ulink url="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</ulink
>. Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.</para>
<formalpara>
<title>Acknowledgements</title>
<para>Microsoft® and Windows® are U.S. registered trademarks of Microsoft
Corporation. Java® is a registered trademark of Oracle and/or its
affiliates.</para></formalpara>
</legalnotice>
</bookinfo>
<preface id="preface">
<title>About This Document</title>
<para>This guide describes how to use the Trafodion Command Interface
(TrafCI) on a client workstation to connect to and query a Trafodion
database. The TrafCI enables you to run SQL statements interactively
or from script files.</para>
<section>
<title>Intended Audience</title>
<para>This guide is intended for database administrators and support
personnel who are maintaining and monitoring a Trafodion database.</para>
</section>
<section>
<title>Document Organization</title>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="TI  inline table">
<colspec colwidth="0.62*"/>
<colspec colwidth="1.41*"/>
<tbody>
<row><entry><xref linkend="Chapter1" role="select:label title"/></entry>
<entry>Introduces the Trafodion Command Interface (TrafCI) and describes
its capabilities. </entry></row>
<row><entry><xref linkend="Chapter2" role="select:label title"/></entry>
<entry>Describes how to configure TrafCI on the client workstation.</entry>
</row>
<row><entry><xref linkend="Chapter3" role="select:label title"/></entry>
<entry>Describes how to launch, log in to, and exit TrafCI on a client
workstation. </entry></row>
<row><entry><xref linkend="Chapter4" role="select:label title"/></entry>
<entry>Describes how to run commands interactively in TrafCI.  </entry>
</row>
<row><entry><xref linkend="Chapter5" role="select:label title"/></entry>
<entry>Describes how to run script files in TrafCI. </entry></row>
<row><entry><xref linkend="i1006618" role="select:label title"/></entry>
<entry>Describes how to run TrafCI from Perl or Python. </entry></row>
<row><entry><xref linkend="i1008451" role="select:label title"/></entry>
<entry>Provides syntax, considerations, and examples for the interface
commands. </entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>New and Changed Information in This Edition</title>
<para>This manual is new.</para>
</section>
<section>
<title>Notation Conventions</title>
<section role="no.new.page">
<title>General Syntax Notation</title>
<para>This list summarizes the notation conventions for syntax presentation
in this manual.</para>
<variablelist>
<varlistentry><term>UPPERCASE LETTERS</term>
<listitem><para>Uppercase letters indicate keywords and reserved words.
 Type these items exactly as shown.  Items not enclosed in brackets
are required.  For example:</para><para>SELECT</para>
</listitem>
</varlistentry>
<varlistentry><term><replaceable>Italic Letters</replaceable></term>
<listitem><para>Italic letters, regardless of font, indicate variable
items that you supply.  Items not enclosed in brackets are required.
 For example:</para><para><replaceable>file-name</replaceable></para>
</listitem>
</varlistentry>
<varlistentry><term><computeroutput>Computer Type</computeroutput
></term>
<listitem><para>Computer type letters within text indicate case-sensitive
keywords and reserved words. Type these items exactly as shown. Items
not enclosed in brackets are required. For example:</para>
<programlisting>
myfile.sh
</programlisting>
</listitem>
</varlistentry>
<varlistentry condition="hidden"><term><userinput>Bold Text</userinput
></term>
<listitem><para>Bold text in an example indicates user input typed
at the terminal.  For example:</para>
<programlisting>
ENTER RUN CODE

?<userinput>123</userinput>
CODE RECEIVED:      123.00
</programlisting>
<para>The user must press the Return key after typing the input.</para>
</listitem>
</varlistentry>
<varlistentry><term>[  ]  Brackets</term>
<listitem><para>Brackets enclose optional syntax items. For example:</para>
<programlisting>
DATETIME [<replaceable>start-field</replaceable> TO] <replaceable
>end-field</replaceable>
</programlisting>
<para>A group of items enclosed in brackets is a list from which you
can choose one item or none. The items in the list can be arranged
either vertically, with aligned brackets on each side of the list,
or horizontally, enclosed in a pair of brackets and separated by vertical
lines. For example:</para>
<programlisting>
DROP SCHEMA <replaceable>schema</replaceable> [CASCADE]
                   [RESTRICT]
</programlisting>
<programlisting>
DROP SCHEMA <replaceable>schema</replaceable> [ CASCADE | RESTRICT ]
</programlisting>
</listitem>
</varlistentry>
<varlistentry><term>{  }  Braces</term>
<listitem><para>Braces enclose required syntax items. For example:</para>
<programlisting>
FROM { <replaceable>grantee</replaceable>[, <replaceable>grantee</replaceable
>]...}
</programlisting>
<para>A group of items enclosed in braces is a list from which you
are required to choose one item. The items in the list can be arranged
either vertically, with aligned braces on each side of the list, or
horizontally, enclosed in a pair of braces and separated by vertical
lines. For example:</para>
<programlisting>
INTERVAL { <replaceable>start-field</replaceable> TO <replaceable
>end-field</replaceable> }
         { <replaceable>single-field</replaceable> }
</programlisting>
<programlisting>
INTERVAL { <replaceable>start-field</replaceable> TO <replaceable
>end-field</replaceable>  | <replaceable>single-field</replaceable
> }
</programlisting>
</listitem>
</varlistentry>
<varlistentry><term>|  Vertical Line</term>
<listitem><para>A vertical line separates alternatives in a horizontal
list that is enclosed in brackets or braces. For example:</para>
<programlisting>
{<replaceable>expression</replaceable> | NULL}
</programlisting>
</listitem>
</varlistentry>
<varlistentry><term>…  Ellipsis</term>
<listitem><para>An ellipsis immediately following a pair of brackets
or braces indicates that you can repeat the enclosed sequence of syntax
items any number of times. For example:</para>
<programlisting>
ATTRIBUTE[S] <replaceable>attribute</replaceable> [, <replaceable
>attribute</replaceable>]...
</programlisting>
<programlisting>
{, <replaceable>sql-expression</replaceable>}...
</programlisting>
<para>An ellipsis immediately following a single syntax item indicates
that you can repeat that syntax item any number of times. For example:</para>
<programlisting>
<replaceable>expression-n</replaceable>…
</programlisting>
</listitem>
</varlistentry>
<varlistentry><term>Punctuation</term>
<listitem><para>Parentheses, commas, semicolons, and other symbols
not previously described must be typed as shown. For example:</para>
<programlisting>
DAY (<replaceable>datetime-expression</replaceable>)
</programlisting>
<programlisting>
@<replaceable>script-file</replaceable>
</programlisting>
<para>Quotation marks around a symbol such as a bracket or brace indicate
the symbol is a required character that you must type as shown. For
example:</para>
<programlisting>
"{" <replaceable>module-name</replaceable> [, <replaceable>module-name</replaceable
>]... "}"
</programlisting>
</listitem>
</varlistentry>
<varlistentry><term>Item Spacing</term>
<listitem><para>Spaces shown between items are required unless one
of the items is a punctuation symbol such as a parenthesis or a comma.
For example:</para>
<programlisting>
DAY (<replaceable>datetime-expression</replaceable>)
</programlisting>
<programlisting>
DAY(<replaceable>datetime-expression</replaceable>)
</programlisting>
<para>If there is no space between two items, spaces are not permitted.
In this example, no spaces are permitted between the period and any
other items:</para>
<programlisting>
<replaceable>myfile</replaceable>.sh
</programlisting>
</listitem>
</varlistentry>
<varlistentry><term>Line Spacing</term>
<listitem><para>If the syntax of a command is too long to fit on a
single line, each continuation line is indented three spaces and is
separated from the preceding line by a blank line. This spacing distinguishes
items in a continuation line from items in a vertical list of selections.
For example:</para>
<programlisting>
<replaceable>match-value</replaceable> [NOT] LIKE <replaceable>pattern</replaceable
> 

   [ESCAPE <replaceable>esc-char-expression</replaceable>]
</programlisting>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section>
<title>Publishing History</title>
<informaltable>
<tgroup cols="3">
<colspec colwidth="0.47*"/>
<colspec colwidth="1.52*"/>
<colspec colwidth="0.80*"/>
<thead>
<row><entry>Part Number</entry><entry>Product Version</entry><entry
>Publication Date</entry></row>
</thead>
<tbody>
<row><entry>T824-080-001</entry><entry>Trafodion Release 0.8.0 Beta</entry>
<entry>June 2014</entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>We Encourage Your Comments</title>
<para>The Trafodion community encourages your comments concerning
this document. We are committed to providing documentation that meets
your needs. Send any errors found, suggestions for improvement, or
compliments to:</para>
<para><email>trafodion-documentation@lists.launchpad.net</email></para>
<para>Include the document title, part number, and any comment, error
found, or suggestion for improvement you have concerning this document.</para>
</section>
</preface>
<chapter id="Chapter1">
<title>Introduction to the Trafodion Command Interface (TrafCI)</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
<secondary>description of</secondary></indexterm>
<para>The Trafodion Command Interface (TrafCI) is a command-line interface
that you download and install on a client workstation that has the
Trafodion JDBC Type 4 Driver installed. Operating systems that support
the JDBC driver include Windows and Linux. The JDBC driver connects
TrafCI on a client workstation to a Trafodion database.</para>
<figure id="NCI_within_Neo_platform_network">
<title>TrafCI Connected to a Trafodion Database</title>
<mediaobject><imageobject role="pdf"><imagedata contentwidth="6in"
fileref="img/VST101.png" role="pdf"/></imageobject></mediaobject>
</figure>
<para>TrafCI enables you to perform daily administrative and database
management tasks by running SQL statements or other commands interactively
or from script files. You can also run TrafCI from a Perl or Python
command line or from Perl or Python programs.</para>
</chapter>
<chapter id="Chapter2">
<title>Installing and Configuring TrafCI</title>
<itemizedlist>
<listitem><para><xref linkend="Installing-NCI"
role="select:quotedtitle page"/></para></listitem>
<listitem><para><xref linkend="Verifying-and-Setting-the-Java-Path"
role="select:quotedtitle page"/></para></listitem>
<listitem><para><xref linkend="i1006727" role="select:quotedtitle page"
/></para></listitem>
</itemizedlist>
<section id="Installing-NCI">
<title>Installing TrafCI</title>
<!--WRITER'S NOTE: Update this cross-reference to point to instructions on the wiki:-->
<para>To install TrafCI on a client workstation, follow the procedures
in the <citetitle>Trafodion Client Installation Guide</citetitle>.</para>
</section>
<section id="Verifying-and-Setting-the-Java-Path">
<title>Verifying and Setting the Java Path</title>
<para>To be able to launch and run TrafCI, you must have the Java
path set to the correct location. Follow these instructions:</para>
<itemizedlist>
<listitem><para><xref linkend="Setting-PATH-on-Win7"
role="select:quotedtitle page"/></para></listitem>
<listitem><para><xref linkend="i1006974" role="select:quotedtitle page"
/></para></listitem>
</itemizedlist>
<!--WRITER'S NOTE: Update this cross-reference to point to instructions on the wiki:-->
<note>
<para>To install the Java Runtime Environment (JRE), see the TrafCI
installation instructions in the <citetitle>Trafodion Client Installation
Guide</citetitle>.</para>
</note>
<section id="Setting-PATH-on-Win7">
<title>Setting the PATH on Windows</title>
<indexterm><primary>PATH</primary><secondary>Trafodion Command Interface
(TrafCI) setting</secondary><tertiary>Windows</tertiary></indexterm>
<procedure>
<step><para>Right-click the <guiicon>Computer</guiicon> icon on your
desktop, and then select <guilabel>Properties</guilabel>.</para><para
> The Control Panel > System and Security > System window appears.</para>
</step>
<step><para>In the left navigation bar, click the <guilabel>Advanced
system settings</guilabel> link.</para></step>
<step><para>In the System Properties dialog box, click the <guibutton
>Environment Variables</guibutton> button.</para></step>
<step><para>Under System variables, select the variable named <guilabel
>Path</guilabel>, and then click <guibutton>Edit</guibutton>:</para>
<mediaobject><imageobject role="pdf"><imagedata contentwidth="3.5in"
fileref="img/path2.png"/></imageobject></mediaobject>
</step>
<step><para>Place the cursor at the beginning of the Variable value
field and enter the path of the Java <literal>bin</literal> directory,
ending with a semicolon (;):</para>
<mediaobject><imageobject role="pdf"><imagedata
fileref="img/varval2.png"/></imageobject></mediaobject>
<para>For example:</para>
<programlisting>"C:\Program Files (x86)\Java\jre7\bin";</programlisting>
<note>
<para>Check that no space exists after the semicolon (;) in the path.
If there are spaces in the directory name, delimit the entire directory
path in double quotes (") before the semicolon.</para>
</note>
</step>
<step><para>Click <guibutton>OK</guibutton>.</para></step>
<step><para>Verify that the updated Path appears under System variables,
and click <guibutton>OK</guibutton>.</para></step>
<step><para>In the System Properties dialog box, click <guibutton
>OK</guibutton> to accept the changes.</para></step>
</procedure>
</section>
<section id="i1006974">
<title>Setting the PATH on Linux</title>
<indexterm><primary>PATH</primary><secondary>Trafodion Command Interface
(TrafCI) setting</secondary><tertiary>Linux</tertiary></indexterm>
<procedure>
<step><para>Open the user profile (<literal>.profile</literal> or <literal
>.bash_profile</literal> for the Bash shell) in the <literal>/home</literal
> directory. For example:</para>
<screen><command>vi .profile</command></screen>
</step>
<step><para>In the user profile, set the PATH environment variable
to include the path of the Java <literal>bin</literal> directory.
For example:</para>
<screen><command>export PATH=/opt/java1.7/jre/bin:$PATH </command
></screen>
<note>
<para>Place the path of the Java <literal>bin</literal> directory
before $PATH, and check that no space exists after the colon (:) in
the path. In the C shell, use the <literal>setenv</literal> command
instead of <literal>export</literal>.</para>
</note>
</step>
<step><para>To activate the changes, either log out and log in again
or execute the user profile. For example:</para>
<screen><command>. .profile</command></screen>
</step>
</procedure>
</section>
</section>
<section id="i1006727">
<title>Testing the Launch of TrafCI</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
<secondary>testing the launch of</secondary></indexterm><indexterm>
<primary>Installation procedures</primary><secondary>testing the launch
of TrafCI</secondary></indexterm>
<procedure>
<step><para>Launch TrafCI and verify that you can connect to the database.
For instructions, see <xref linkend="Chapter3" role="select:label page"
/>.</para>
<!--WRITER'S NOTE: Update this illustration to include the latest TrafCI screen capture without the data source:-->
<para>This window should appear:</para>
<mediaobject><imageobject role="pdf"><imagedata contentwidth="6in"
fileref="img/launch02.png" role="pdf"/></imageobject></mediaobject>
</step>
<step><para>If you cannot launch TrafCI or connect to the database,
verify that:</para>
<itemizedlist>
<listitem><para>The database platform is available and running, and
the port number is correct for the database platform<phrase
condition="hidden">, and you are authorized to log in to that database
platform. To obtain a user ID to log in to the database, see your
cluster security administrator</phrase>.</para></listitem>
<listitem><para>The Java path is set to the correct location. See <xref
linkend="Verifying-and-Setting-the-Java-Path"
role="select:quotedtitle page"/>.</para></listitem>
<!--WRITER'S NOTE: Update this cross-reference to point to instructions on the wiki:-->
<listitem><para>You installed the TrafCI and JDBC software files correctly.
See the <citetitle>Trafodion Client Installation Guide</citetitle
>.</para></listitem>
</itemizedlist>
</step>
</procedure>
</section>
</chapter>
<chapter id="Chapter3">
<title>Launching TrafCI</title>
<para>This chapter describes how to launch TrafCI from the Window
or Linux environment of a client workstation:</para>
<itemizedlist>
<listitem><para><xref linkend="i1004799" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1006229" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1008715" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1005070" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1009121"/></para></listitem>
</itemizedlist>
<para>For information about launching TrafCI from Perl or Python,
see <xref linkend="i1006618" role="select:label page"/>.</para>
<important>
<para>Before launching TrafCI, make sure that you have set the Java
path to the correct location. See <xref
linkend="Verifying-and-Setting-the-Java-Path"
role="select:quotedtitle page"/>.</para>
</important>
<section id="i1004799">
<title>Launching TrafCI on a Windows Client Workstation</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
<secondary>launching on a Windows client workstation</secondary>
</indexterm>
<procedure>
<step><para>Find the Windows launch file, <literal>trafci.cmd</literal
>, in the <literal>bin</literal> folder:</para>
<mediaobject><imageobject role="pdf"><imagedata contentwidth="6.0in"
fileref="img/winbin.png"/></imageobject></mediaobject>
</step>
<step><para>Double-click the <literal>trafci.cmd</literal> file.</para>
<para>TrafCI appears, prompting you to enter the host name or IP address
of the database platform, your user name, and password. See <xref
linkend="i1008715" role="select:quotedtitle page"/>.</para>
</step>
</procedure>
<section id="i1007549">
<title>Creating a Shortcut to trafci.cmd</title>
<indexterm><primary>trafci.cmd, creating a shortcut to</primary>
</indexterm>
<para>To enable a user to launch TrafCI from a shortcut icon on the
desktop:</para>
<procedure>
<step><para>Right-click the desktop and select <emphasis role="bold"
>New > Shortcut</emphasis>:</para>
<mediaobject><imageobject role="pdf"><imagedata contentwidth="4.0in"
fileref="img/shortct1.png"/></imageobject></mediaobject>
</step>
<step><para>Type the location of <literal>trafci.cmd</literal> within
double quotes (“) or click <emphasis role="bold">Browse</emphasis
> to locate that file, and then click <emphasis role="bold">Next</emphasis
>:</para>
<mediaobject><imageobject role="pdf"><imagedata contentwidth="4.0in"
fileref="img/shortct2.png"/></imageobject></mediaobject>
<!--WRITER'S NOTE: Update this cross-reference to point to instructions on the wiki:-->
<para>For the locations of the installed TrafCI software files, see
the <citetitle>Trafodion Client Installation Guide</citetitle>.</para>
</step>
<step><para>Type a name for the shortcut and click <emphasis role="bold"
>Finish</emphasis>:</para>
<mediaobject><imageobject role="pdf"><imagedata contentwidth="4.0in"
fileref="img/shortct3.png"/></imageobject></mediaobject>
</step>
<step><indexterm><primary>Launch parameters</primary><secondary>presetting
on Windows</secondary></indexterm><indexterm><primary>Login parameters</primary>
<secondary>presetting on Windows</secondary></indexterm><para>If desired,
specify optional launch parameters for the shortcut:</para>
<substeps>
<step><para>Right-click the shortcut icon and select <emphasis
role="bold">Properties</emphasis>:</para>
<mediaobject><imageobject role="pdf"><imagedata
fileref="img/shortct4.png"/></imageobject></mediaobject>
</step>
<step><para>Select the <emphasis role="bold">Shortcut</emphasis> tab.</para>
</step>
<step><para>In the Target box, insert a space after <literal>"...\Trafodion
Command Interface\bin\trafci.cmd"</literal> and add the optional launch
parameters:</para>
<mediaobject><imageobject role="pdf"><imagedata contentwidth="3.0in"
fileref="img/shortct5.png"/></imageobject></mediaobject>
<para>For more information, see <xref linkend="i1005070"
role="select:quotedtitle page"/>.</para>
</step>
<step><para>Click <emphasis role="bold">OK</emphasis>.</para></step>
</substeps>
</step>
<step><para>To launch TrafCI, double-click the shortcut icon.</para>
<para>TrafCI appears. If you did not set the optional launch parameters,
TrafCI prompts you to enter the host name or IP address of the database
platform, your user name, and password. See <xref linkend="i1008715"
role="select:quotedtitle page"/>.</para>
</step>
</procedure>
</section>
</section>
<section id="i1006229">
<title>Launching TrafCI on a Linux Client Workstation</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
<secondary>launching on a Linux client workstation</secondary>
</indexterm>
<para>In the terminal window, enter:</para>
<programlisting>./<replaceable>trafci‑installation‑directory</replaceable
>/trafci/bin/trafci.sh</programlisting>
<!--WRITER'S NOTE: Update this cross-reference to point to instructions on the wiki:-->
<para><replaceable>trafci-installation-directory</replaceable> is
the directory where you installed the TrafCI software files. For more
information, see the <citetitle>Trafodion Client Installation Guide</citetitle
>.</para>
<section id="i1005964">
<title>Setting the PATH of trafci.sh</title>
<indexterm><primary>Environment variables</primary><secondary>PATH</secondary>
</indexterm><indexterm><primary>trafci.sh, setting the path of</primary>
</indexterm>
<para>To enable a user to launch TrafCI anywhere on the client workstation:</para>
<procedure>
<step><para>Open the user profile (<literal>.profile</literal> or <literal
>.bash_profile</literal> for the Bash shell) in the <literal>/home</literal
> directory. For example:</para>
<programlisting>vi .profile</programlisting>
</step>
<step><indexterm><primary>User profile</primary><secondary>setting
the PATH</secondary></indexterm><indexterm><primary>PATH environment
variable</primary></indexterm><para>In the user profile, set the PATH
environment variable to include the path of the <literal>trafci.sh</literal
> file. For example:</para>
<programlisting>export PATH=/<replaceable>trafci‑installation‑directory</replaceable
>/trafci/bin/:...</programlisting>
<!--WRITER'S NOTE: Update this cross-reference to point to instructions on the wiki:-->
<para><replaceable>trafci-installation-directory</replaceable> is
the directory where you installed the TrafCI software files. For more
information, see the <citetitle>Trafodion Client Installation Guide</citetitle
>. Check that no space is after the colon (:) in the path.</para>
<note>
<para>In the C shell, use the <literal>setenv</literal> command instead
of <literal>export</literal>.</para>
</note>
</step>
<step><para>To activate the changes, either log out and log in again
or execute the user profile. For example:</para>
<programlisting>. .profile</programlisting>
</step>
<step><para>On the command line, execute the <literal>trafci.sh</literal
> file to launch TrafCI:</para>
<programlisting>trafci.sh</programlisting>
<para>TrafCI appears, prompting you to enter the host name or IP address
of the database platform, your user name, and password. See <xref
linkend="i1008715" role="select:quotedtitle page"/>. </para>
<note>
<para>To enable all users to launch TrafCI anywhere on the system,
create a symbolic link to the <literal>trafci.sh</literal> file in
the <literal>/usr/bin</literal> or <literal>/usr/local/bin</literal
> directory:<programlisting>ln -s ./<replaceable>trafci-installation-directory</replaceable
>/trafci/bin/trafci.sh /usr/bin/trafci.sh</programlisting></para>
</note>
</step>
</procedure>
</section>
<section id="i1006829">
<title>Presetting the Optional Launch Parameters</title>
<indexterm><primary>Login parameters</primary><secondary>presetting
on Linux or UNIX</secondary></indexterm><indexterm><primary>Launch
parameters</primary><secondary>presetting on Linux or UNIX</secondary>
</indexterm>
<para>To preset the optional launch parameters for each session, use
an alias in the shell command. For example:</para>
<programlisting>alias trafci='trafci.sh -h 16.123.456.78:23400 -u user1 -p xxxxxx'</programlisting>
<para>You can add the alias, <literal>trafci</literal>, to the user
profile, or you can enter it at a command prompt. For more information
about the optional launch parameters, see <xref linkend="i1005070"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="i1008715">
<title>Logging In to the Database Platform</title>
<itemizedlist>
<listitem><para><xref linkend="i1006238" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="log_param" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="Retrying-the-Login"
role="select:quotedtitle page"/></para></listitem>
</itemizedlist>
<note condition="hidden">
<para>You must be authorized to log in to the database platform. To
obtain a user ID to log in to the database, see your cluster security
administrator.</para>
</note>
<section id="i1006238">
<title>Logging In Without Using Login Parameters</title>
<note condition="hidden">
<para>If you launch TrafCI from within HPDM, the TrafCI session inherits
the connection attributes of the HPDM session.</para>
</note>
<para>If you launch TrafCI<phrase condition="hidden"> outside HPDM</phrase
> and do not specify login parameters on the command line, follow
these steps:</para>
<procedure>
<step><indexterm><primary>Logging in</primary><secondary>default method</secondary>
</indexterm><para>After you launch TrafCI, TrafCI shows the welcome
banner and prompts you to enter the host name or IP address of the
database platform:</para>
<programlisting>Host Name/IP Address: _</programlisting>
<indexterm><primary>Host name</primary></indexterm><para>Enter a host
name:</para>
<programlisting><replaceable>host-name</replaceable>[.<replaceable
>domain-name</replaceable>][:<replaceable>port-number</replaceable
>]</programlisting>
<itemizedlist>
<listitem><para>If you do not specify the domain name, TrafCI uses
the domain of the client workstation. </para></listitem>
<listitem><indexterm><primary>Port number, default</primary></indexterm>
<para>If you do not specify a port number, TrafCI uses the default
port number, which is 23400.</para></listitem>
</itemizedlist>
<indexterm><primary>IP address</primary></indexterm><para>Or enter
an IP address:</para>
<programlisting><replaceable>IP-address</replaceable>[:<replaceable
>port-number</replaceable>]</programlisting>
</step>
<step><para>Enter your directory-service (or LDAP) user name.</para>
<para>User names are case-insensitive.</para>
</step>
<step><para>Enter your password.</para><para>Passwords are case-sensitive.</para>
</step>
<!--WRITER'S NOTE: Data sources are no longer supported.-->
<step condition="hidden"><para>Enter the name of a data source that
is available and running (that is, started).</para><para>If you do
not enter a data source, TrafCI tries to connect to <indexterm><primary
>Admin_Load_DataSource</primary></indexterm><literal>Admin_Load_DataSource</literal
> by default. If <literal>Admin_Load_DataSource</literal> (or any
data source that you specify) is not started, TrafCI returns an error
and prompts you to close the session. If you specify a data source
that does not exist, TrafCI returns a warning and connects to <indexterm>
<primary>TDM_Default_DataSource</primary></indexterm><literal>TDM_Default_DataSource</literal
> instead.</para>
</step>
<step><para>After you finish logging in to the database platform,
the SQL prompt appears:</para>
<programlisting>Connected to Trafodion

SQL></programlisting>
<para>At the prompt, you can enter an SQL statement or an interface
command. For more information, see <xref linkend="Chapter4"
role="select:label page"/>.</para>
</step>
</procedure>
<note>
<para>TrafCI allows you to reenter the login values, with a maximum
of three retries, before it closes the session. For more information,
see <xref linkend="Retrying-the-Login" role="select:quotedtitle page"
/>.</para>
</note>
</section>
<section id="log_param">
<title>Using Login Parameters</title>
<indexterm><primary>Logging in</primary><secondary>using login parameters</secondary>
</indexterm><indexterm><primary>Login parameters</primary><secondary
>specifying on the command line</secondary></indexterm>
<para>To avoid entering a host name, user name, or password each time
you launch TrafCI, use these login parameters:</para>
<itemizedlist>
<listitem><para><literal>‑h</literal> or <literal>‑host</literal></para>
</listitem>
<listitem><para><literal>‑u</literal> or <literal>‑user</literal></para>
</listitem>
<listitem><para><literal>‑p</literal> or <literal>‑password</literal
></para></listitem>
<listitem condition="hidden"><para><literal>‑dsn</literal></para>
</listitem>
</itemizedlist>
<para condition="hidden">To ensure that a specific role is applied
to the session, use the <literal>-r</literal> or <literal>-role</literal
> parameter. If you omit the <literal>-r</literal> or <literal>-role</literal
> parameter, TrafCI applies your default primary role to the session
and does not prompt you for a role name.</para>
<note condition="hidden">
<para>If you launch TrafCI from within HPDM, the TrafCI session inherits
the connection attributes of the HPDM session<phrase>, including the
role</phrase>.</para>
</note>
<para>For example, on Windows, in the Command Prompt window, enter:</para>
<programlisting>cd <replaceable>trafci‑installation‑directory</replaceable
>\Trafodion Command Interface\bin

trafci.cmd -h 16.123.456.78:23400 -u user1 ‑p xxxxxx</programlisting>
<para>For example, on Linux or UNIX, in the terminal window, enter:</para>
<programlisting>cd <replaceable>trafci‑installation‑directory</replaceable
>/trafci/bin

./trafci.sh -h 16.123.456.78:23400 -u user1 -p xxxxxx</programlisting>
<para>TrafCI launches and prompts you to enter an SQL statement or
an interface command:</para>
<programlisting>Welcome to Apache Trafodion Command Interface 
Copyright(C) 2015 Apache Software Foundation (ASF)

Connected to Trafodion

SQL></programlisting>
<para>For more information about the login parameters, see <xref
linkend="Launch_and_Login_Parameters" role="select:label page"/>.</para>
<tip>
<para>You can include these parameters in a shortcut to the <literal
>trafci.cmd</literal> file or in a launch file for the <literal>trafci.sh</literal
> file. For more information, see <xref linkend="i1007549"
role="select:quotedtitle page"/> or <xref linkend="i1006829"
role="select:quotedtitle page"/>, respectively.</para>
</tip>
</section>
<section id="Retrying-the-Login">
<title>Retrying the Login</title>
<para>TrafCI allows you to reenter the login values, with a maximum
of three retries, before it closes the session.</para>
<para>TrafCI applies the retry logic as follows:</para>
<itemizedlist>
<listitem><para>If you specify an invalid host name, TrafCI prompts
you to reenter the host name. For example:</para>
<screen><computeroutput>trafci –h dd 

Welcome to Apache Trafodion Command Interface 
Copyright(C) 2015 Apache Software Foundation

Unknown Host: dd

Host Name/IP Address: </computeroutput><userinput>172.16.1.1
</userinput><computeroutput>
User Name: user1
Password: 

Connected to Trafodion

SQL></computeroutput></screen>
</listitem>
<listitem><para>If you specify an invalid user name or password, TrafCI
prompts you to reenter the user name and password. For example, if
you specify an invalid password, TrafCI prompts only for your user
name and password. After three unsuccessful retries, the session is
terminated:</para>
<screen><computeroutput>trafci –h 172.16.1.1 –u user1 –p x
 
Welcome to Apache Trafodion Command Interface 
Copyright(C) 2015 Apache Software Foundation

*** ERROR[8837] CLI Authentication : User: user1 : invalid username or password [2014-03-12 16:23:44]

User Name: </computeroutput><userinput>user1</userinput><computeroutput
>
Password: </computeroutput><computeroutput>

*** ERROR[8837] CLI Authentication : User: user1 : invalid username or password [2014-03-12 16:25:28]

User Name: </computeroutput><userinput>user1</userinput><computeroutput
>
Password: </computeroutput><computeroutput>

*** ERROR[8837] CLI Authentication : User: user1 : invalid username or password [2014-03-12 16:26:36]

Press any key to close this session
</computeroutput></screen>
</listitem>
<listitem><para>	If all the login parameters that you specify are
invalid, TrafCI prompts you to enter the host name. When you enter
a valid host name or IP address, TrafCI prompts you to enter a user
name and password.</para></listitem>
<listitem><para>The retry logic applies to the CONNECT and RECONNECT
commands. For the RECONNECT command, the retry logic applies only
when no prior connection has been established (<literal>-noconnect</literal
>). This example shows the CONNECT command with a valid user name
and host name. TrafCI prompts only for the user name and password:</para>
<screen><computeroutput>SQL></computeroutput><userinput>connect user1/xxx@172.16.1.1</userinput
><computeroutput>

com.hp.jdbc.HPT4Exception: *** ERROR[8837] CLI Authentication : User: user1 :  invalid username or password [2014-03-12 16:35:15]

User Name: </computeroutput><userinput>user1</userinput><computeroutput
>
Password: </computeroutput><userinput>abc</userinput><computeroutput
>

Connected to Trafodion

SQL></computeroutput></screen>
</listitem>
<listitem><para>TrafCI does not prompt you to reenter the login values
in these cases:</para>
<itemizedlist>
<listitem condition="hidden"><para>If the login fails with an error
stating that the data source was not started.</para></listitem>
<listitem><para>When you include the <literal>-q</literal> or <literal
>-version</literal> parameter on the command line. (The <literal>-s</literal
> parameter permits login retries.)</para></listitem>
<listitem><para>For a session started using redirected or piped input.</para>
</listitem>
</itemizedlist>
<para>In these cases, TrafCI returns an error message and closes the
session. You must re-launch the TrafCI session to connect to the Trafodion
database.</para>
</listitem>
</itemizedlist>
</section>
</section>
<section id="i1005070">
<title>Using Optional Launch Parameters</title>
<indexterm><primary>Launch parameters</primary><secondary>descriptions
of</secondary></indexterm>
<para>To customize how you launch and log in to TrafCI, use the optional
parameters described in <xref linkend="Launch_and_Login_Parameters"
role="select:label"/> on the command line:</para>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>trafci{.sh | .cmd} [<replaceable>optional-parameter</replaceable
>]...</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>optional-parameter</replaceable></term>
<listitem><para>is one of the launch or login parameters. For details,
see <xref linkend="Launch_and_Login_Parameters" role="select:label"
/>.</para></listitem>
</varlistentry>
</variablelist>
<table frame="topbot" id="Launch_and_Login_Parameters">
<title>Launch and Login Parameters</title>
<tgroup cols="2" colsep="0" rowsep="0">
<colspec colname="col1"/>
<colspec colname="col2"/>
<thead>
<row rowsep="1" valign="bottom"><entry align="left" valign="bottom"
>Launch or Login Parameter</entry><entry align="left" valign="bottom"
>Description</entry></row>
</thead>
<tbody>
<row><entry><indexterm><primary>-h parameter</primary></indexterm
><indexterm><primary>-host parameter</primary></indexterm><simplelist>
<member><literal>{-h | -host} <replaceable>host-name</replaceable
>[:<replaceable>port-number</replaceable>]</literal></member>
<member><literal>{-h | -host} <replaceable>IP-address</replaceable
><literal>[:</literal><replaceable>port-number</replaceable>]</literal
></member>
</simplelist></entry><entry>Specifies the host name or IP address
of the database platform to which you want the client to connect.
The <replaceable>host-name</replaceable> should include the domain
name of the database platform if it is different from the domain of
the client workstation. If you do not specify a port number, TrafCI
uses the default port number, which is <phrase>23400</phrase>. For
an example, see <xref linkend="log_param" role="select:quotedtitle page"
/>.</entry></row>
<row><entry><indexterm><primary>-u parameter</primary></indexterm
><indexterm><primary>-user parameter</primary></indexterm><literal
>{-u | ‑user} <replaceable>username</replaceable></literal> </entry>
<entry>Specifies the user name for logging in to the database platform.
The <replaceable>username</replaceable> is case-insensitive. For an
example, see <xref linkend="log_param" role="select:quotedtitle page"
/>.</entry></row>
<row><entry><indexterm><primary>-r parameter</primary></indexterm
><indexterm><primary>-role parameter</primary></indexterm><literal
>{‑</literal><literal>r| ‑</literal><literal>role} <replaceable>role-name</replaceable
></literal> </entry><entry><para>Reserved for future use.</para><para
condition="hidden">Specifies the role to be applied to the TrafCI
session. A role can be granted to a user, and the role has privileges
defined for it. Some users are assigned to multiple roles. Using this
parameter, you can apply a specific role to the session.</para><para
condition="hidden"><replaceable>role-name</replaceable> is the role
name, such as DB__USERADMIN. <replaceable>role-name</replaceable> is
case-insensitive.</para><para condition="hidden">If you omit <replaceable
>role-name</replaceable> when specifying the <literal>-r</literal
> or <literal>-role</literal> parameter, TrafCI prompts you to enter
the role name. Enter a role name, or press <guibutton>Enter</guibutton
> to use your default primary role.</para><para condition="hidden"
>If you omit the <literal>-r</literal> or <literal>-role</literal
> parameter, TrafCI uses your default primary role and does not prompt
you for a role name.</para><note condition="hidden">
<para>If you launch TrafCI from within HPDM, the TrafCI session inherits
the connection attributes of the HPDM session, including the role.</para>
</note></entry></row>
<row><entry><indexterm><primary>-p parameter</primary></indexterm
><indexterm><primary>-password parameter</primary></indexterm><literal
>{-p | -password} <replaceable>password </replaceable></literal></entry>
<entry><para>Specifies the password of the user for logging in to
the database platform. <replaceable>password</replaceable> is case-sensitive.</para
><para>For an example, see <xref linkend="log_param"
role="select:quotedtitle page"/>.</para></entry></row>
<row condition="hidden"><entry><indexterm><primary>-dsn parameter</primary>
</indexterm><literal>-dsn <replaceable>data-source-name</replaceable
></literal></entry><entry>Specifies the name of a data source. If <literal
>Admin_Load_DataSource</literal> (or any data source that you specify)
is not started, TrafCI returns an error and prompts you to close the
session. If you specify a data source that does not exist, TrafCI
returns a warning and connects to <literal>TDM_Default_DataSource</literal
> instead. For an example, see <xref linkend="log_param"
role="select:quotedtitle page"/>.<note>
<para>Please avoid using this parameter, as it will be removed in
a future release.</para>
</note></entry></row>
<row><entry><indexterm><primary>-q parameter</primary><secondary>description
of</secondary></indexterm><indexterm><primary>-sql parameter</primary>
</indexterm><literal>{-q | -sql} "<replaceable>command</replaceable
>"</literal></entry><entry>Specifies that an SQL statement or an interface
command be run when launching TrafCI. You cannot specify this parameter
at the same time as the <literal>‑s</literal> or <literal>‑script</literal
> parameter. For more information, see <xref linkend="i1005076"
role="select:quotedtitle page"/>.</entry></row>
<row><entry><indexterm><primary>-s parameter</primary><secondary>description
of</secondary></indexterm><indexterm><primary>-script parameter</primary>
</indexterm><literal>{-s | -script} <replaceable>script-file-name</replaceable
></literal></entry><entry>Specifies that a script file be run when
launching TrafCI in interactive mode. You cannot specify this parameter
at the same time as the <literal>‑q</literal> or <literal>‑sql</literal
> parameter. For more information, see <xref linkend="i1005079"
role="select:quotedtitle page"/>.</entry></row>
<row><entry><indexterm><primary>-noconnect</primary><secondary>description
of</secondary></indexterm><literal>-noconnect</literal></entry><entry
>Launches an TrafCI session without connecting to the database. For
more information, see <xref linkend="i1009120"
role="select:quotedtitle page"/></entry></row>
<row><entry><indexterm><primary>-version</primary><secondary>description
of</secondary></indexterm><literal>-version</literal></entry><entry
>Displays the build version of TrafCI and the Trafodion JDBC Type
4 Driver. Upon completion of the display, the client exits. If any
other parameters are included with the <literal>-version</literal
> parameter, they are ignored. For more information, see <xref
linkend="version" role="select:quotedtitle page"/>.</entry></row>
<row><entry><indexterm><primary>-help</primary><secondary>description
of</secondary></indexterm><literal>-help</literal></entry><entry>Displays
a list of accepted arguments with descriptions and then exits. For
more information, see <xref linkend="version"
role="select:quotedtitle page"/>.</entry></row>
</tbody>
</tgroup>
</table>
<section id="i1005076">
<title>Running a Command When Launching TrafCI</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
<secondary>launching and running a command</secondary></indexterm>
<para>To execute an SQL statement or an interface command when launching
TrafCI, use the <literal>‑q</literal> or <literal>‑sql</literal> command-line
parameter. This parameter enables you to run a single command on the
command line without having to enter commands in TrafCI. </para>
<note>
<para>You cannot specify this parameter at the same time as the <literal
>‑s</literal> or <literal>‑script</literal> parameter.</para>
</note>
<para>When using <literal>‑q</literal> or <literal>‑sql</literal>,
you must enclose the command in double quotes. The SQL terminator
is not required at the end of an SQL statement and is disallowed after
an interface command. </para>
<para>Although you can run any of the interface commands with <literal
>‑q</literal> or <literal>‑sql</literal>, the @, OBEY, and PRUN commands
are the most useful.</para>
<section>
<title>Example of Running an SQL Statement With ‑q or ‑sql</title>
<indexterm><primary>SQL statement</primary><secondary>running when
launching TrafCI</secondary></indexterm><indexterm><primary>-q parameter</primary>
<secondary>examples of</secondary></indexterm><indexterm><primary
>CREATE SCHEMA statement, example of</primary></indexterm>
<para>Use <literal>‑q</literal> or <literal>‑sql</literal> with the
CREATE SCHEMA statement to create a schema when launching TrafCI:</para>
<itemizedlist>
<listitem><para>On Windows, in the Command Prompt window, enter:</para>
<programlisting><literal>cd </literal><replaceable>trafci-installation-directory</replaceable
><literal>\Trafodion Command Interface\bin</literal></programlisting>
<programlisting><literal>trafci.cmd ‑q "create schema persnl"</literal
></programlisting>
</listitem>
<listitem><para>On Linux or UNIX, in the terminal window, enter:</para>
<programlisting>cd <replaceable>trafci‑installation‑directory</replaceable
>/trafci/bin</programlisting>
<programlisting>./trafci.sh ‑q "create schema persnl"
</programlisting>
</listitem>
</itemizedlist>
<note condition="hidden"><indexterm><primary>Schema</primary><secondary
>names (reserved)</secondary></indexterm><indexterm><primary>Reserved
schema names</primary></indexterm><indexterm><primary>HP_ prefix in
schema names</primary></indexterm>
<para>Schema names that begin with HP_ are reserved for use by HP.
For more information about reserved schema names, see the <citetitle
>Trafodion SQL Reference Manual</citetitle>.</para>
</note>
<para>After you enter the SQL statement, TrafCI launches and prompts
you to log in by default (if you did not specify <literal>‑h</literal
>, <literal>‑u</literal>, and <literal>‑p</literal><phrase
condition="hidden">, and <literal>‑dsn</literal></phrase> on the command
line), runs the SQL statement, and then returns to the command prompt:</para>
<programlisting>Host Name/IP Address: 16.123.456.78:23400
User Name: user1
Password:

--- SQL operation complete.

C:\Program Files (x86)\Apache Software Foundation\Apache Trafodion Command Interface\bin>_</programlisting>
</section>
<section>
<title>Example of Running an Interface Command With ‑q or ‑sql</title>
<indexterm><primary>-q parameter</primary><secondary>examples of</secondary>
</indexterm>
<para>Use <literal>‑q</literal> or <literal>‑sql</literal> with the
PRUN command to run multiple script files simultaneously from the
command line:</para>
<itemizedlist>
<listitem><para>On Windows, in the Command Prompt window, enter:</para>
<programlisting><literal>cd </literal><replaceable>trafci-installation-directory</replaceable
><literal>\Trafodion Command Interface\bin</literal></programlisting>
<programlisting><literal>trafci.cmd ‑q "prun"</literal></programlisting>
</listitem>
<listitem><para>On Linux, in the terminal window, enter:</para>
<programlisting>cd <replaceable>trafci‑installation‑directory</replaceable
>/trafci/bin</programlisting>
<programlisting>./trafci.sh ‑q "prun"</programlisting>
</listitem>
</itemizedlist>
<para>After you enter the interface command, TrafCI launches and prompts
you to log in by default (if you did not specify <literal>‑h</literal
>, <literal>‑u</literal>, and <literal>‑p</literal><phrase
condition="hidden">, and <literal>‑dsn</literal></phrase> on the command
line), and runs the command. The parallel run (PRUN) operation prompts
you to enter settings and then executes the script files. At the end
of the PRUN operation, TrafCI returns to the command prompt. For more
information about the PRUN operation, see <xref linkend="i1005218"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="i1005079">
<title>Running a Script File When Launching TrafCI</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
<secondary>launching and running a script file</secondary></indexterm>
<indexterm><primary>Script file</primary><secondary>running when launching
TrafCI</secondary></indexterm>
<para>To run a script file when launching TrafCI, use the <literal
>‑s</literal> or <literal>‑script</literal> command-line parameter.</para>
<note>
<para>You cannot specify this parameter at the same time as the <literal
>‑q</literal> or <literal>‑sql</literal> parameter.</para>
</note>
<para>After you launch TrafCI with <literal>‑s</literal> or <literal
>‑script</literal>, TrafCI executes the script file in interactive
mode. TrafCI remains open until you enter the EXIT, QUIT, or DISCONNECT
command. To quit the interface immediately after executing a script
file, include the EXIT, QUIT, or DISCONNECT command at the end of
the script file.</para>
<section>
<title>Example of a Script File</title>
<indexterm><primary>SET commands, in a script file</primary></indexterm>
<para>You can create a script file that contains SET commands that
customize a session when you launch TrafCI:</para>
<mediaobject><imageobject role="pdf"><imagedata
fileref="img/launchs1.png"/></imageobject></mediaobject>
<para>For more information, see <xref linkend="i1004228"
role="select:quotedtitle page"/>.</para>
</section>
<section>
<title>Example of Running a Script File With -s or -script</title>
<indexterm><primary>-s parameter</primary><secondary>examples of</secondary>
</indexterm>
<itemizedlist>
<listitem><para>On Windows, in the Command Prompt window, enter:</para>
<programlisting><literal>cd </literal><replaceable>trafci-installation-directory</replaceable
><literal>\Trafodion Command Interface\bin</literal></programlisting>
<programlisting><literal>trafci.cmd ‑s settings.txt</literal></programlisting>
<para>Specify the full path of the script file if it is outside the
directory of <literal>trafci.cmd</literal>.</para>
</listitem>
<listitem><para>On Linux, in the terminal window, enter:</para>
<programlisting>cd <replaceable>trafci‑installation‑directory</replaceable
>/trafci/bin</programlisting>
<programlisting>./trafci.sh ‑s settings.txt</programlisting>
<para>Specify the full path of the script file if it is outside the
directory of <literal>trafci.sh</literal>.</para>
</listitem>
</itemizedlist>
<para>TrafCI launches and prompts you to log in by default (if you
did not specify <literal>‑h</literal>, <literal>‑u</literal>, and <literal
>‑p</literal><phrase condition="hidden">, and <literal>‑dsn</literal
></phrase> on the command line), and runs the commands in the script
file:</para>
<programlisting>Welcome to Apache Trafodion Command Interface 
Copyright(C) 2015 Apache Software Foundation

Host Name/IP Address: 16.123.456.78:23400
User Name: user1
Password:

Connected to Trafodion

SQL>SET IDLETIMEOUT 0

SQL>SET SQLPROMPT *

*SET TIME ON

14:14:57 *SET TIMING ON

2:14:57 PM *SET SQLTERMINATOR .</programlisting>
</section>
</section>
<section id="i1009120">
<title>Launching TrafCI Without Connecting to the Database</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
</indexterm>
<para>To start TrafCI without connecting to a Trafodion database,
use the <literal>-noconnect</literal> option. See <xref
linkend="Commands-That-Can-Be-Run-Without-a-Connection"
role="select:label page"/> for a list of interface commands that can
be run without a connection.</para>
<section>
<title>Example of Launching TrafCI With -noconnect</title>
<indexterm><primary>-noconnect</primary><secondary>examples of</secondary>
</indexterm>
<itemizedlist>
<listitem><para>On Windows, in the Command Prompt window, enter:</para>
<programlisting><literal>cd </literal><replaceable>trafci-installation-directory</replaceable
><literal>\Trafodion Command Interface\bin</literal></programlisting>
<programlisting><literal>trafci.cmd ‑noconnect</literal></programlisting>
</listitem>
<listitem><para>On Linux, in the terminal window, enter:</para>
<programlisting>cd <replaceable>trafci‑installation‑directory</replaceable
>/trafci/bin</programlisting>
<programlisting>./trafci.sh ‑noconnect</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="version">
<title>Running TrafCI With -version</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
</indexterm>
<para>To display the build version of TrafCI and the Trafodion JDBC
Type 4 Driver, use the <literal>-version</literal> option. If other
parameters are included with the <literal>-version</literal> parameter,
they are ignored.</para>
<section>
<title>Example of Running TrafCI With -version</title>
<indexterm><primary>-version</primary><secondary>examples of</secondary>
</indexterm>
<itemizedlist>
<listitem><para>On Windows, in the Command Prompt window, enter:</para>
<programlisting><literal>cd </literal><replaceable>trafci-installation-directory</replaceable
><literal>\Trafodion Command Interface\bin</literal></programlisting>
<programlisting><literal>trafci.cmd ‑version</literal></programlisting>
</listitem>
<listitem><para>On Linux, in the terminal window, enter:</para>
<programlisting>cd <replaceable>trafci‑installation‑directory</replaceable
>/trafci/bin</programlisting>
<!--WRITER'S NOTE: Updated based on the current behavior (2/4/2014):-->
<programlisting>./trafci.sh ‑version

Welcome to Apache Trafodion Command Interface 
Copyright(C) 2015 Apache Software Foundation

Trafodion JDBC Type 4 Driver    : Traf_JDBC_Type4_Build_40646
Trafodion Command Interface     : TrafCI_Build_40646</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<!--WRITER'S NOTE: Verify with Anu that -help is supported in beta version:-->
<section id="helpoption">
<title>Running TrafCI With -help</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
</indexterm>
<para>To display a list of acceptable list of parameters, including
proper usage information, use the <literal>-help</literal> option.
After displaying this information the application exits. </para>
<section>
<title>Example of Running TrafCI With -help</title>
<indexterm><primary>-help</primary><secondary>examples of</secondary>
</indexterm>
<itemizedlist>
<listitem><para>On Windows, in the Command Prompt window, enter:</para>
<programlisting><literal>cd </literal><replaceable>trafci-installation-directory</replaceable
><literal>\Trafodion Command Interface\bin</literal></programlisting>
<programlisting><literal>trafci ‑help</literal></programlisting>
</listitem>
<listitem><para>On Linux, in the terminal window, enter:</para>
<programlisting>cd <replaceable>trafci‑installation‑directory</replaceable
>/trafci/bin</programlisting>
<programlisting>./trafci.sh ‑help</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
</section>
<section id="i1009121">
<title>Exiting TrafCI</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
<secondary>exiting, quitting, or disconnecting</secondary></indexterm>
<para>To exit TrafCI, enter one of these commands at a prompt:</para>
<itemizedlist>
<listitem><para>EXIT</para></listitem>
<listitem><para>QUIT</para></listitem>
</itemizedlist>
<para>For example: </para>
<programlisting>SQL>quit</programlisting>
<para>These commands are not case-sensitive and do not require a terminator
before you press Enter. After you enter one of these commands, TrafCI
immediately quits running and disappears from the screen.</para>
</section>
</chapter>
<chapter id="Chapter4">
<title>Running Commands Interactively in TrafCI</title>
<para>After launching TrafCI, you can run SQL statements and interface
commands in the command-line interface.</para>
<itemizedlist>
<listitem><para><xref linkend="i1004442" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1004399" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1004560" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1006598" role="select:quotedtitle page"
/></para></listitem>
</itemizedlist>
<section id="i1004442">
<title>User Interface</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
<secondary>description of</secondary></indexterm>
<itemizedlist>
<listitem><para><xref linkend="i1005602" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1005606" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1005610" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1005615" role="select:quotedtitle page"
/></para></listitem>
</itemizedlist>
<section id="i1005602">
<title>Product Banner</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
<secondary>product banner</secondary></indexterm><indexterm><primary
>Product banner</primary></indexterm><indexterm condition="hidden">
<primary>Data source connection</primary></indexterm>
<para>After you launch TrafCI and connect to the database platform,
the product banner appears in the command-line interface:</para>
<!--WRITER'S NOTE: Update this illustration to exclude the data source:-->
<mediaobject><imageobject role="pdf"><imagedata contentwidth="6in"
fileref="img/VST401.png" role="pdf"/></imageobject></mediaobject>
</section>
<section id="i1005606">
<title>Interface Prompt</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
<secondary>prompt</secondary></indexterm><indexterm><primary>Standard
prompt</primary><secondary>description of</secondary></indexterm>
<indexterm><primary>Prompt</primary></indexterm><indexterm><primary
>SQL prompt</primary><secondary>description of</secondary></indexterm>
<para>The standard prompt is <literal>SQL></literal>. You can change
the prompt, <literal>SQL></literal>, to something else by using the
SET SQLPROMPT or SET PROMPT command. For more information, see the <xref
linkend="i1004585" role="select:quotedtitle page"/>.</para>
</section>
<section id="i1005610">
<title>Breaking the Command Line</title>
<indexterm><primary>Command line, breaking</primary></indexterm>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
<secondary>breaking across lines</secondary></indexterm>
<para>You cannot break an interface command over multiple lines. Each
interface command must be entered on one line. If you accidentally
break an interface command across more than one line, enter the SQL
terminator and then reenter the command on one line.</para>
<indexterm><primary>SQL statement</primary><secondary>breaking across
lines</secondary></indexterm>
<para>You can continue any SQL statement over multiple lines, breaking
that statement at any point except within a word, a numeric literal,
or a multicharacter operator (for example, &lt;=). To break a string
literal in a DML statement, use a concatenation operator (||). For
more information, see the concatenation operator in the <citetitle
>Trafodion SQL Reference Manual</citetitle>. </para>
<indexterm><primary>SQL statement</primary><secondary>terminating</secondary>
</indexterm>
<para>To terminate an SQL statement that spans multiple lines, use
the SQL terminator for the session. You can also include several SQL
statements on the same command line provided that each one is terminated
by the SQL terminator. For more information, see <xref
linkend="i1004589" role="select:quotedtitle page"/>.</para>
</section>
<section id="i1005615">
<title>Case Sensitivity</title>
<indexterm><primary>Case sensitivity</primary></indexterm><indexterm>
<primary>Trafodion Command Interface (TrafCI)</primary><secondary
>case sensitivity</secondary></indexterm>
<para>In the command-line interface, you can enter SQL statements
and interface commands in uppercase, lowercase, or mixed-case characters.
All parts of statements and commands are case-insensitive except for
parts that you enclose in single-quotes (') or double-quotes (").</para>
</section>
</section>
<section id="i1004399">
<title>Using the Interface Commands</title>
<para>The interface commands allow you to customize TrafCI (for example,
by using SET commands) or return information about the interface settings
or database objects (for example, by using SHOW commands):</para>
<itemizedlist>
<listitem><para><xref linkend="Showing-Session-Attributes"
role="select:quotedtitle page"/></para></listitem>
<listitem><para><xref linkend="i1006792" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1004585" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1004589" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1004593" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1004597" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="Limiting-Result-Set"
role="select:quotedtitle page"/></para></listitem>
<listitem condition="hidden"><para><xref
linkend="Showing-Info-DB-Objects" role="select:quotedtitle page"/></para>
</listitem>
<listitem><para><xref linkend="Displaying-Executed-Commands"
role="select:quotedtitle page"/></para></listitem>
<listitem><para><xref linkend="Editing-Reexecuting"
role="select:quotedtitle page"/></para></listitem>
<listitem><para><xref linkend="Clearing-Interface"
role="select:quotedtitle page"/></para></listitem>
<listitem><para><xref linkend="Obtaining-Help"
role="select:quotedtitle page"/></para></listitem>
</itemizedlist>
<para>For more information about the interface commands, see <xref
linkend="i1008451" role="select:label page"/>.</para>
<note>
<para>Each interface command must be entered on one line. If you accidentally
break an interface command across more than one line, enter the SQL
terminator and then reenter the command on one line.</para>
</note>
<section id="Showing-Session-Attributes">
<title>Showing the Session Attributes</title>
<para>To display the attributes and settings of the current TrafCI
session, use the ENV, SHOW SESSION, or SESSION command. For example,
this SESSION command displays the session attributes:</para>
<!--WRITER'S NOTE: Updated output based on current behavior (2/4/2014):-->
<programlisting>SQL>session

COLSEP          " "
<phrase condition="hidden">DATASOURCE      TDM_Default_DataSource
</phrase>HISTOPT         DEFAULT [No expansion of script files]
IDLETIMEOUT     0 min(s) [Never Expires]
LIST_COUNT      0 [All Rows]
LOG FILE        c:\session.txt
LOG OPTIONS     APPEND,CMDTEXT ON
MARKUP          RAW
PROMPT          SQL>
SCHEMA          SEABASE
SERVER          sqws135.houston.hp.com:23400
SQLTERMINATOR   ;
STATISTICS      OFF
TIME            OFF
TIMING          OFF
USER            user1

SQL></programlisting>
<para>For more information, see the <xref linkend="ENV"
role="select:quotedtitle page"/> or <xref linkend="SESSION"
role="select:quotedtitle page"/>.</para>
</section>
<section id="i1006792">
<title>Setting and Showing the Idle Timeout Value for the Session</title>
<indexterm><primary>Idle timeout value</primary></indexterm><indexterm>
<primary>Timeout, idle session</primary></indexterm><indexterm><primary
>Session</primary></indexterm><indexterm><primary>SET IDLETIMEOUT
command</primary><secondary>example of</secondary></indexterm>
<para>The idle timeout value of a session determines when the session
expires after a period of inactivity. To set the idle timeout value
of a session, enter the SET IDLETIMEOUT command. For example, this
SET IDLETIMEOUT 0 command sets the idle timeout to an infinite amount
of time so that the session never expires:</para>
<programlisting>SQL>set idletimeout 0

SQL></programlisting>
<indexterm><primary>SHOW IDLETIMEOUT command</primary><secondary>example
of</secondary></indexterm>
<para>To show the idle timeout value that is in effect for the session,
enter the SHOW IDLETIMEOUT command. For example, this SHOW IDLETIMEOUT
command displays an idle timeout of zero minutes, which means that
the session never expires:</para>
<programlisting>SQL>show idletimeout
IDLETIMEOUT 0 min(s) [Never Expires]

SQL></programlisting>
<para>For more information, see the <xref linkend="i1008731"
role="select:quotedtitle page"/> and the <xref linkend="i1009114"
role="select:quotedtitle page"/>.</para>
</section>
<section id="i1004585">
<title>Customizing the Standard Prompt</title>
<indexterm><primary>Standard prompts</primary><secondary>customizing</secondary>
</indexterm>
<para>To change the standard prompt in the command-line interface,
use one or both of these commands:</para>
<itemizedlist>
<listitem><para><xref linkend="SET-PROMPT"
role="select:quotedtitle page"/></para></listitem>
<listitem><para><xref linkend="i1004724" role="select:quotedtitle page"
/></para></listitem>
</itemizedlist>
<section id="i1004720">
<title>SET PROMPT Command</title>
<indexterm><primary>SET PROMPT command</primary><secondary>example
of</secondary></indexterm>
<para>The SET PROMPT command changes the default prompt to a specified
character or string. For example, this SET PROMPT command changes
the prompt to the current user (<literal>user1</literal>) and <literal
>ENTER></literal>:</para>
<programlisting>SQL>set prompt "%USER ENTER>"

user1 ENTER></programlisting>
<para>For more information, see the <xref linkend="SET-PROMPT"
role="select:quotedtitle page"/>.</para>
</section>
<section id="i1004724">
<title>SET TIME Command</title>
<indexterm><primary>SET TIME command</primary><secondary>examples
of</secondary></indexterm><indexterm><primary>Standard prompts</primary>
<secondary>displaying the current time</secondary></indexterm>
<para>The SET TIME ON command causes the current time of the client
workstation to be displayed in the prompt:</para>
<programlisting>SQL ENTER>set time on

20:32:26 SQL ENTER></programlisting>
<para>The SET TIME OFF command removes the current time from the prompt:</para>
<programlisting>20:32:26 SQL ENTER>set time off

SQL ENTER></programlisting>
<para>For more information, see the <xref linkend="i1005242"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="i1004589">
<title>Setting and Showing the SQL Terminator</title>
<indexterm><primary>SQL terminator</primary><secondary>setting</secondary>
</indexterm><indexterm><primary>SET SQLTERMINATOR command</primary>
<secondary>example of</secondary></indexterm><indexterm><primary>INSERT
statement, example of</primary></indexterm>
<para>The SQL terminator symbolizes the end of an SQL statement. By
default, the SQL terminator is a semicolon (;).</para>
<para>To change the SQL terminator, enter the SET SQLTERMINATOR command.
For example, this SET SQLTERMINATOR command sets the SQL terminator
to a period (.):</para>
<programlisting>SQL>set sqlterminator .

SQL>insert into sales.custlist
+>(select * from invent.supplier
+>where suppnum=8).

--- 1 row(s) inserted.

SQL></programlisting>
<indexterm><primary>SQL terminator</primary><secondary>showing</secondary>
</indexterm>
<para>To show the SQL terminator that is in effect for the session,
enter the SHOW SQLTERMINATOR command. For example, this SHOW SQLTERMINATOR
command displays <literal>SQLTERMINATOR .</literal>, where the period
(.) is the SQL terminator for the session:</para>
<programlisting>SQL>show sqlterminator
SQLTERMINATOR .

SQL></programlisting>
<para>For more information, see the <xref linkend="i1005238"
role="select:quotedtitle page"/> and the <xref linkend="i1005270"
role="select:quotedtitle page"/>.</para>
</section>
<section id="i1004593">
<title>Displaying the Elapsed Time</title>
<indexterm><primary>Elapsed time, displaying</primary></indexterm>
<indexterm><primary>SQL statement</primary><secondary>displaying the
elapsed time</secondary></indexterm><indexterm><primary>SET TIMING
command</primary><secondary>examples of</secondary></indexterm>
<para>By default, TrafCI does not display the elapsed time of an SQL
statement after the statement executes. To display the elapsed time
after each SQL statement executes, enter the SET TIMING ON command:</para>
<programlisting>SQL>set timing on

SQL>select suppname, street, city, state, postcode
+>from invent.supplier
+>where suppnum=3;

SUPPNAME          STREET               CITY           STATE        POSTCODE
----------------- -------------------- -------------- ------------ ----------
HIGH DENSITY INC  7600 EMERSON         NEW YORK       NEW YORK     10230

--- 1 row(s) selected.

Elapsed :00:00:00.111

SQL></programlisting>
<para>To prevent the elapsed time from being displayed after each
SQL statement executes, enter the SET TIMING OFF command:</para>
<programlisting>SQL>set timing off

SQL>/

SUPPNAME          STREET               CITY           STATE        POSTCODE
----------------- -------------------- -------------- ------------ ----------
HIGH DENSITY INC  7600 EMERSON         NEW YORK       NEW YORK     10230

--- 1 row(s) selected.

SQL></programlisting>
<para>For more information, see the <xref linkend="i1005246"
role="select:quotedtitle page"/>.</para>
</section>
<section id="i1004597">
<title>Setting and Showing the Current Schema</title>
<indexterm><primary>Default schema</primary></indexterm><indexterm>
<primary>SET SCHEMA statement, example of</primary></indexterm>
<indexterm><primary>Schema</primary><secondary>setting the current
schema</secondary></indexterm>
<para>By default, the schema of the session is USR. The SQL statement,
SET SCHEMA, allows you to set the schema for the TrafCI session. For
example, this SET SCHEMA statement changes the default schema to PERSNL
for the session:</para>
<programlisting>SQL>set schema persnl;

--- SQL operation complete.

SQL>delete from employee
+>where first_name='TIM' and
+>last_name='WALKER';

--- 1 row(s) deleted.

SQL></programlisting>
<para>The schema that you specify with SET SCHEMA remains in effect
until the end of the session or until you execute another SET SCHEMA
statement.</para>
<para>If you execute this statement in a script file, it affects not
only the SQL statements in the script file but all subsequent SQL
statements that are run in the current session. If you set the schema
in a script file, reset the default schema for the session at the
end of the script file.</para>
<para>For more information about the SET SCHEMA statement, see the <citetitle
>Trafodion SQL Reference Manual</citetitle>.</para>
<indexterm><primary>SHOW SCHEMA command</primary><secondary>example
of</secondary></indexterm><indexterm><primary>Schema</primary>
<secondary>showing the current schema</secondary></indexterm>
<para>The SHOW SCHEMA command displays the current schema for the
session. For example, this SHOW SCHEMA command displays <literal>SCHEMA PERSNL</literal
>, where PERSNL is the name of the current schema for the session:</para>
<programlisting>SQL>show schema
SCHEMA PERSNL

SQL></programlisting>
<para>For more information, see the <xref linkend="i1005258"
role="select:quotedtitle page"/>.</para>
</section>
<section id="Limiting-Result-Set">
<title>Limiting the Result Set of a Query</title>
<para>To set the maximum number of rows to be returned by SELECT statements
that are executed in the session, enter the SET LIST_COUNT command.
For example, this SET LIST_COUNT command limits the result set of
queries to 20 rows:</para>
<programlisting>SQL>set list_count 20</programlisting>
<para>To show the limit that is in effect for the session, enter the
SHOW LIST_COUNT command. For example, this SHOW LIST_COUNT command
shows that the number of rows returned by SELECT statements is unlimited:<programlisting
>SQL>show list_count
LISTCOUNT 0 [All Rows]</programlisting></para>
<para>For more information, see the <xref linkend="SET-LIST-COUNT"
role="select:quotedtitle page"/> and the <xref linkend="SHOW-LIST-COUNT"
role="select:quotedtitle page"/>.</para>
</section>
<section condition="hidden" id="Showing-Info-DB-Objects">
<title>Showing Information About SQL Database Objects</title>
<itemizedlist>
<listitem><para><xref linkend="i1005377" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1004959" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1009685" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1009772" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1009892" role="select:quotedtitle page"
/></para></listitem>
</itemizedlist>
<section id="i1005377">
<title>Showing the Schemas</title>
<indexterm><primary>SHOW SCHEMAS command</primary><secondary>example
of</secondary></indexterm><indexterm><primary>Schema</primary>
<secondary>showing all schemas in the default catalog</secondary>
</indexterm>
<para>The SHOW SCHEMAS command displays the schemas that exist in
the default catalog:</para>
<programlisting>SQL>show schemas

SCHEMA NAMES
--------------------------------------------------------------------------------
HP_DEFINITION_SCHEMA   HP_TRANSPORTER         HP_USTAT               PUBLIC_ACCESS_SCHEMA
HP_INFORMATION_SCHEMA  

SQL></programlisting>
<para>For more information, see the <xref linkend="i1005262"
role="select:quotedtitle page"/>.</para>
</section>
<section id="i1004959">
<title>Showing the Tables in a Schema</title>
<indexterm><primary>Tables</primary><secondary>showing all tables
in a schema</secondary></indexterm><indexterm><primary>SHOW TABLES
command</primary><secondary>example of</secondary></indexterm>
<para>The SHOW TABLES command displays the tables that exist in the
current schema. For example, this SHOW TABLES command displays all
the tables in the current schema, PERSNL:</para>
<programlisting>SQL>show schema
SCHEMA PERSNL

SQL>show tables

TABLE NAMES
----------------------------------------------------------------
DEPT      EMPLOYEE  JOB       PROJECT

SQL></programlisting>
<para>For more information, see the <xref linkend="i1005274"
role="select:quotedtitle page"/>.</para>
</section>
<section id="i1009685">
<title>Showing the Dependent Objects of a Table</title>
<indexterm><primary>Indexes, showing all indexes of a table</primary>
</indexterm><indexterm><primary>SHOW TABLE command</primary><secondary
>example of</secondary></indexterm>
<para>The SHOW TABLE command displays information about the indexes,
materialized views, or synonyms of a specified table. For example,
this SHOW TABLE command with the INDEXES option displays information
about each index of the EMPLOYEE table:</para>
<programlisting>SQL>show table persnl.employee, indexes

COLUMN NAME                     ORDER INDEX TYPE UNIQUE CARDINALITY POSITION 
------------------------------- ----- ---------- ------ ----------- -------- 

Index 1 :EMPLOYEE
-----------------
EMPNUM                          ASC   Other      Yes              0        1 

Index 2 :XEMPDEPT
-----------------
DEPTNUM                         ASC   Other      No               0        1 

Index 3 :XEMPNAME
-----------------
LAST_NAME                       ASC   Other      No               0        1 
FIRST_NAME                      ASC   Other      No               0        2 


SQL></programlisting>
<para>For more information, see the <xref linkend="i1009180"
role="select:quotedtitle page"/>.</para>
</section>
<section id="i1009772">
<title>Showing the Views in a Schema</title>
<indexterm><primary>Views</primary><secondary>showing all views in
a schema</secondary></indexterm><indexterm><primary>SHOW VIEWS command</primary>
<secondary>example of</secondary></indexterm>
<para>The SHOW VIEWS command displays the views that exist in the
current schema. For example, this SHOW VIEWS command displays all
the views in the current schema, INVENT:</para>
<programlisting>SQL>set schema invent;

--- SQL operation complete.

SQL>show schema
SCHEMA INVENT

SQL>show views

VIEW NAMES
----------------------------------------------------------------
VIEW207   VIEW207N  VIEWCS    VIEWCUST  

SQL></programlisting>
<para>For more information, see the <xref linkend="i1009184"
role="select:quotedtitle page"/>.</para>
<indexterm><primary>Materialized views</primary><secondary>showing
all materialized views in a schema</secondary></indexterm><indexterm>
<primary>SHOW MVS command</primary><secondary>example of</secondary>
</indexterm>
<para>The SHOW MVS command displays the materialized views that exist
in the current schema. For example, this SHOW MVS command displays
all the materialized views in the current schema, PERSNL:</para>
<programlisting>SQL>set schema persnl;

--- SQL operation complete.

SQL>show schema
SCHEMA PERSNL

SQL>show mvs;

MATERIALIZED VIEW NAMES
-------------------------------------------------------------
mvemp1  mvemp2  mvemp3  mvjobdesc

SQL></programlisting>
<para>For more information, see the <xref linkend="i1011926"
role="select:quotedtitle page"/>.</para>
</section>
<section id="i1009892">
<title>Showing the Synonyms in a Schema</title>
<indexterm><primary>Synonyms</primary><secondary>showing all synonyms
in a schema</secondary></indexterm><indexterm><primary>SHOW SYNONYMS
command</primary><secondary>example of</secondary></indexterm>
<para>The SHOW SYNONYMS command displays the synonyms that exist in
the current schema. For example, this SHOW SYNONYMS command displays
all the synonyms in the current schema, SALES:</para>
<programlisting>SQL>set schema sales;

--- SQL operation complete.

SQL>show schema
SCHEMA SALES

SQL>show synonyms

SYNONYM NAMES
-------------------------------------------------------------
CUST  DTLS  ORDR  PRTS  

SQL></programlisting>
<para>For more information, see the <xref linkend="i1012014"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="Displaying-Executed-Commands">
<title>Displaying Executed Commands</title>
<para>To display commands that were recently executed in the TrafCI
session, enter the HISTORY command. The HISTORY command associates
each command with a number that you can use to reexecute or edit the
command with the FC command. See <xref linkend="Editing-Reexecuting"
role="select:quotedtitle page"/>.</para>
<para>For example, this HISTORY command displays a maximum of 100
commands that were entered in the session:</para>
<programlisting>SQL>history
1>      set idletimeout 0
2>      set schema persnl;
3>      select * from project;

SQL></programlisting>
<para>To save the session history in a user-specified file, enter
the SAVEHIST command. For example, this SAVEHIST command saves the
session history in a file named <literal>history.txt</literal> in
the local directory where you are running TrafCI:<programlisting>SQL>savehist history.txt</programlisting
></para>
<para>For more information, see the <xref linkend="i1013406"
role="select:quotedtitle page"/> and the <xref linkend="SAVEHIST"
role="select:quotedtitle page"/>.</para>
</section>
<section id="Editing-Reexecuting">
<title>Editing and Reexecuting a Command</title>
<para>To edit and reexecute a command in the history buffer of an
TrafCI session, enter the FC command. To display the commands in the
history buffer, use the HISTORY command. See <xref
linkend="Displaying-Executed-Commands" role="select:quotedtitle page"
/>.</para>
<para>For example, this FC command and its delete (D) editing command
correct a SELECT statement that was entered incorrectly:</para>
<programlisting>SQL>fc
SQL>selecct * from employee;
....    d
SQL>select * from employee;
....</programlisting>
<para>Pressing Enter executes the corrected SELECT statement.</para>
<para>For more information, see the <xref linkend="i1011597"
role="select:quotedtitle page"/>.</para>
</section>
<section id="Clearing-Interface">
<title>Clearing the Interface Window</title>
<para>After entering commands in TrafCI, you can clear the interface
window by using the CLEAR command. For example, this CLEAR command
clears the interface window so that only the prompt appears at the
top of the window:</para>
<programlisting>SQL>clear</programlisting>
<para>For more information, see the <xref linkend="CLEAR-Command"
role="select:quotedtitle page"/>.</para>
</section>
<!--WRITER'S NOTE: Verify with Anu that the help is working in the beta version.-->
<section id="Obtaining-Help">
<title>Obtaining Help</title>
<para>To display help text for an interface command that is supported
in TrafCI, enter the HELP command. For example, this HELP command
displays syntax and examples of the FC command:</para>
<programlisting>SQL>help fc</programlisting>
<para>For more information, see the <xref linkend="HELP"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="i1004560">
<title>Running SQL Statements</title>
<indexterm><primary>SQL statement</primary><secondary>running in TrafCI</secondary>
</indexterm>
<para>In TrafCI, you can run SQL statements interactively. <phrase
>TrafCI supports all the SQL statements, SQL utilities, and other
SQL-related commands that the Trafodion database engine supports.
For more information about those SQL statements, see the <citetitle
>Trafodion SQL Reference Manual</citetitle>.</phrase></para>
<para>This subsection shows examples of:</para>
<itemizedlist>
<listitem><para><xref linkend="i1006242" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1006246" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1006983" role="select:quotedtitle page"
/></para></listitem>
<listitem condition="hidden"><para><xref linkend="CREATE-TRIGGER"
role="select:quotedtitle page"/></para></listitem>
</itemizedlist>
<para>To run SQL statements from script files in TrafCI, see <xref
linkend="Chapter5" role="select:label page"/>.</para>
<section id="i1006242">
<title>Executing an SQL Statement</title>
<indexterm><primary>SELECT statement, example of</primary></indexterm>
<para>For example, you can query the EMPLOYEE table and return an
employee’s salary by executing this SELECT statement in TrafCI:</para>
<programlisting>SQL>select salary
+>from persnl.employee
+>where jobcode=100;

SALARY     
---------- 
 175500.00 
 137000.10 
 139400.00 
 138000.40 
  75000.00 
  90000.00 
 118000.00 
  80000.00 
  70000.00 
  90000.00 
  56000.00 

--- 11 row(s) selected.

SQL></programlisting>
<para>If the SQL statement executes successfully, TrafCI returns a
message indicating that the SQL operation was successful, followed
by the standard prompt. If a problem occurs during the execution of
the SQL statement, TrafCI returns an error message.<indexterm><primary
>Error messages</primary></indexterm></para>
</section>
<section id="i1006246">
<title>Repeating an SQL Statement</title>
<indexterm><primary>SQL statement</primary><secondary>repeating</secondary>
</indexterm><indexterm><primary>/ command</primary><secondary>example
of</secondary></indexterm>
<para>To run a previously executed SQL statement, use the /, RUN,
or REPEAT command.</para>
<programlisting>SQL>/

SALARY     
---------- 
 175500.00 
 137000.10 
 139400.00 
 138000.40 
  75000.00 
  90000.00 
 118000.00 
  80000.00 
  70000.00 
  90000.00 
  56000.00 

--- 11 row(s) selected.

SQL></programlisting>
<para>For more information, see the <xref linkend="i1005310"
role="select:quotedtitle page"/>, <xref linkend="i1008105"
role="select:quotedtitle page"/>, or <xref linkend="i1014853"
role="select:quotedtitle page"/>.</para>
</section>
<section id="i1006983">
<title>Preparing and Executing SQL Statements</title>
<indexterm><primary>SQL statement</primary><secondary>preparing and
executing</secondary></indexterm>
<para>You can prepare, or compile, an SQL statement by using the PREPARE
statement and later execute the prepared SQL statement by using the
EXECUTE statement.</para>
<itemizedlist>
<listitem><para><xref linkend="i1007115" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1007119" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1007123" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1007127" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1007131" role="select:quotedtitle page"
/></para></listitem>
</itemizedlist>
<section id="i1007115">
<title>Preparing an SQL Statement</title>
<indexterm><primary>PREPARE statement, examples of</primary></indexterm>
<para>Use the PREPARE statement to compile an SQL statement for later
execution with the EXECUTE statement. You can also use the PREPARE
statement to check the syntax of an SQL statement without executing
the statement. For example, this PREPARE statement compiles a SELECT
statement named <literal>empsal</literal> and detects a syntax error:</para>
<programlisting>SQL>prepare empsal from
+>select salary from employee
+>where jobcode = 100;

SQL></programlisting>
<para>You can then correct the syntax of the SQL statement and prepare
it again:</para>
<programlisting>SQL>prepare empsal from 
+>select salary from persnl.employee 
+>where jobcode = 100;  

--- SQL command prepared.</programlisting>
<para>To specify a parameter to be supplied later, either in a SET
PARAM statement or in the USING clause of an EXECUTE statement, use
one of these types of parameters in the SQL statement: <itemizedlist>
<listitem><para>Named parameter, which is represented by <literal
>?</literal><replaceable>param-name</replaceable></para></listitem>
<listitem><para>Unnamed parameter, which is represented by a question
mark (<literal>?</literal>) character</para></listitem>
</itemizedlist></para>
<para>For example, this prepared SELECT statement specifies unnamed
parameters for salary and job code:</para>
<programlisting>SQL>prepare findemp from
+>select * from persnl.employee
+>where salary > <emphasis role="bold">?</emphasis> and jobcode = <emphasis
role="bold">?</emphasis>;

--- SQL command prepared.</programlisting>
<para>This PREPARE statement prepares another SELECT statement named <literal
>empcom</literal>, which has one named parameter, <literal>?</literal
><replaceable>dn</replaceable>, for the department number, which appears
twice in the statement:</para>
<programlisting>SQL>prepare empcom from
+>select first_name, last_name, deptnum
+>from persnl.employee
+>where deptnum &lt;> <emphasis role="bold">?dn</emphasis> and salary &lt;=
+>(select avg(salary)
+>from persnl.employee
+>where deptnum = <emphasis role="bold">?dn</emphasis>);

--- SQL command prepared.</programlisting>
<para>For the syntax of the PREPARE statement, see the <citetitle
>Trafodion SQL Reference Manual</citetitle>.</para>
</section>
<section id="i1007119">
<title>Setting Parameters</title>
<indexterm><primary>Parameters, SQL</primary><secondary>setting</secondary>
</indexterm><indexterm><primary>SQL parameters</primary><secondary
>setting</secondary></indexterm>
<para>In an TrafCI session, you can set a parameter of an SQL statement
(either prepared or not) by using the SET PARAM command.</para>
<note>
<para>The parameter name is case-sensitive. If you specify it in lowercase
in the SET PARAM command, you must specify it in lowercase in other
statements, such as DML statements or EXECUTE.</para>
</note>
<indexterm><primary>SET PARAM command</primary><secondary>examples
of</secondary></indexterm>
<para>For example, this SET PARAM command sets a value for the parameter
named <literal>?sal</literal>, which you can apply to one of the unnamed
parameters in the prepared <literal>findemp</literal> statement or
to a named parameter with an identical name in an SQL statement:</para>
<programlisting>SQL>set param ?sal 40000.00</programlisting>
<para>This SELECT statement uses <literal>sal</literal> as a named
parameter:</para>
<programlisting>SQL>select last_name 
+>from persnl.employee 
+>where salary = <emphasis role="bold">?sal</emphasis>;</programlisting>
<para>This SET PARAM command sets a value for the parameter named <literal
>dn</literal>, which you can apply to the named parameter, <literal
>?dn</literal>, in the prepared <literal>empcom</literal> statement
or to a named parameter with an identical name in an SQL statement:</para>
<programlisting>SQL>set param ?dn 1500</programlisting>
<para>For the syntax of the SET PARAM command, see the <xref
linkend="i1009147" role="select:quotedtitle page"/>.</para>
</section>
<section id="i1007123">
<title>Displaying the Parameters of the Session</title>
<indexterm><primary>Parameters, SQL</primary><secondary>displaying</secondary>
</indexterm><indexterm><primary>SQL parameters</primary><secondary
>displaying</secondary></indexterm><indexterm><primary>SHOW PARAM
command</primary><secondary>example of</secondary></indexterm>
<para>To determine what parameters you have set in the current session,
use the SHOW PARAM command. For example, this SHOW PARAM command displays
the recent SET PARAM settings:</para>
<programlisting>SQL>show param
dn 1500
sal 40000.00

SQL></programlisting>
<para>For the syntax of the SHOW PARAM command, see the <xref
linkend="i1010250" role="select:quotedtitle page"/>.</para>
</section>
<section id="i1007127">
<title>Resetting the Parameters</title>
<indexterm><primary>Parameters, SQL</primary><secondary>resetting</secondary>
</indexterm><indexterm><primary>SQL parameters</primary><secondary
>resetting</secondary></indexterm><indexterm><primary>RESET PARAM
command</primary><secondary>examples of</secondary></indexterm>
<indexterm><primary>SET PARAM command</primary><secondary>examples
of</secondary></indexterm>
<para>To change the value of a parameter, specify the name of the
parameter in the RESET PARAM command and then use the SET PARAM command
to change the setting. For example, suppose that you want to change
the salary parameter to 80000.00:</para>
<programlisting>SQL>reset param ?sal

SQL>set param ?sal 80000.00

SQL></programlisting>
<para>Entering the RESET PARAM command without specifying a parameter
name clears all parameter settings in the session. For example:</para>
<programlisting>SQL>reset param

SQL>show param

SQL></programlisting>
<para>To use the parameters that you had set before, you must reenter
them in the session:</para>
<programlisting>SQL>set param ?dn 1500

SQL>set param ?sal 80000.00

SQL>show param
dn 1500
sal 80000.00

SQL></programlisting>
<para>For the syntax of the RESET PARAM command, see the <xref
linkend="i1014280" role="select:quotedtitle page"/>.</para>
</section>
<section id="i1007131">
<title>Executing a Prepared SQL Statement</title>
<indexterm><primary>EXECUTE statement, examples of</primary></indexterm>
<para>To execute a prepared SQL statement, use the EXECUTE statement.</para>
<para>For example, this EXECUTE statement executes the prepared <literal
>empsal</literal> statement, which does not have any parameters:</para>
<programlisting>SQL>execute empsal;

SALARY     
---------- 
 137000.10 
  90000.00 
  75000.00 
 138000.40 
  56000.00 
 136000.00 
  80000.00 
  70000.00 
 175500.00 
  90000.00 
 118000.00 

--- 11 row(s) selected.

SQL></programlisting>
<para>This EXECUTE statement executes the prepared <literal>empcom</literal
> statement, which has one named parameter, <literal>?dn</literal
>, which was set by SET PARAM for the department number:</para>
<programlisting>SQL>execute empcom;

FIRST_NAME      LAST_NAME            DEPTNUM 
--------------- -------------------- ------- 
ALAN            TERRY                   3000 
DAVID           TERRY                   2000 
PETE            WELLINGTON              3100 
JOHN            CHOU                    3500 
MANFRED         CONRAD                  4000 
DINAH           CLARK                   9000 
DAVE            FISHER                  3200 
GEORGE          FRENCHMAN               4000 
KARL            HELMSTED                4000 
JOHN            JONES                   4000 
JOHN            HUGHES                  3200 
WALTER          LANCASTER               4000 
MARLENE         BONNY                   4000 
BILL            WINN                    2000 
MIRIAM          KING                    2500 
GINNY           FOSTER                  3300 
MARIA           JOSEF                   4000 
HERB            ALBERT                  3300 
RICHARD         BARTON                  1000 
XAVIER          SEDLEMEYER              3300 
DONALD          TAYLOR                  3100 
LARRY           CLARK                   1000 
JIM             HERMAN                  3000 
GEORGE          STRICKER                3100 
OTTO            SCHNABL                 3200 
TIM             WALKER                  3000 
TED             MCDONALD                2000 
PETER           SMITH                   3300 
MARK            FOLEY                   4000 
HEIDI           WEIGL                   3200 
ROCKY           LEWIS                   2000 
SUE             CRAMER                  1000 
MARTIN          SCHAEFFER               3200 
HERBERT         KARAJAN                 3200 
JESSICA         CRINER                  3500 

--- 35 row(s) selected.

SQL></programlisting>
<para>This EXECUTE statement executes the prepared <literal>findemp</literal
> statement, which has two unnamed parameters: <literal>?sal</literal
>, which was set by SET PARAM for the salary, and a parameter that
was not set in advance for the job code:</para>
<programlisting>SQL>execute findemp using ?sal, 100;

EMPNUM FIRST_NAME      LAST_NAME      DEPTNUM JOBCODE SALARY
------ --------------- -------------- ------- ------- --------
   213 ROBERT          WHITE             1500     100 90000.00
    23 JERRY           HOWARD            1000     100  137000.10
     1 ROGER           GREEN             9000     100  175500.00
    29 JANE            RAYMOND           3000     100  136000.00
    32 THOMAS          RUDLOFF           2000     100  138000.40
    43 PAUL            WINTER            3100     100   90000.00
    65 RACHEL          MCKAY             4000     100  118000.00

--- 7 row(s) selected.

SQL></programlisting>
<para>For the syntax of the EXECUTE statement, see the <citetitle
>Trafodion SQL Reference Manual</citetitle>.</para>
</section>
</section>
</section>
<section condition="hidden" id="CREATE-TRIGGER">
<title>Executing CREATE TRIGGER Statements</title>
<indexterm><primary>CREATE TRIGGER statement, example of</primary>
</indexterm>
<para>To execute CREATE TRIGGER statements using TrafCI, you must
specify a “/” in the first column on a new line at the end of the
CREATE TRIGGER statement.</para>
<programlisting>SQL>create trigger handlecheckout
+>  after insert on checkout
+>  referencing new as newr
+>  for each row
+>     begin atomic   
+>       update member set dues = dues + 10  
+>       where memberid = newr.memberid;
+>       update book set ischecked = 1
+>       where bookid = newr.bookid;
+>     end;
+>  / 
</programlisting>
<para>For the syntax of the CREATE TRIGGER statement, see the <citetitle
>Trafodion SQL Reference Manual</citetitle>.</para>
</section>
<section id="i1006598">
<title>Logging Output</title>
<indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
<secondary>logging output</secondary></indexterm>
<para>To log an TrafCI session, use the SPOOL or LOG command. The
SPOOL and LOG commands record into a log file the commands that you
enter in the command-line interface and the output of those commands. </para>
<itemizedlist>
<listitem><para><xref linkend="i1005551" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1005555" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1005559" role="select:quotedtitle page"
/></para></listitem>
</itemizedlist>
<section id="i1005551">
<title>Starting the Logging Process</title>
<indexterm><primary>Spooling</primary><see>Logging output</see>
</indexterm><indexterm><primary>Logging output</primary><secondary
>starting</secondary></indexterm>
<para>To start logging, enter one of these commands:</para>
<itemizedlist>
<listitem><para>SPOOL ON or LOG ON</para></listitem>
<listitem><para>SPOOL <replaceable>log-file</replaceable> or LOG <replaceable
>log-file</replaceable></para></listitem>
</itemizedlist>
<para>For more information, see the <xref linkend="i1005420"
role="select:quotedtitle page"/> and the <xref linkend="i1005290"
role="select:quotedtitle page"/>.</para>
<section>
<title>SPOOL ON or LOG ON Command</title>
<para>The SPOOL ON or LOG ON command logs information about a session
in the <literal>sqlspool.lst</literal> file, which TrafCI stores in
the <literal>bin</literal> directory:</para>
<itemizedlist>
<listitem><para>On Windows: </para>
<programlisting><replaceable>trafci‑installation‑directory</replaceable
><literal>\Trafodion Command Interface\bin\sqlspool.lst</literal></programlisting>
<para><replaceable>trafci-installation-directory</replaceable> is
the directory where you installed the TrafCI software files.</para>
</listitem>
<listitem><para>On Linux:</para>
<programlisting>    <replaceable>trafci‑installation‑directory</replaceable
>/trafci/bin/sqlspool.lst</programlisting>
<para><replaceable>trafci-installation-directory</replaceable> is
the directory where you installed the TrafCI software files.</para>
</listitem>
</itemizedlist>
<indexterm><primary>SPOOL command</primary><secondary>examples of</secondary>
</indexterm>
<para>For example, this SPOOL ON command starts logging the session
in the <literal>sqlspool.lst</literal> file:</para>
<programlisting>SQL>spool on</programlisting>
</section>
<section>
<title>SPOOL <replaceable>log-file</replaceable> or LOG <replaceable
>log-file</replaceable> Command</title>
<para>The SPOOL <replaceable>log-file</replaceable> and LOG <replaceable
>log-file</replaceable> commands record information about a session
in a log file that you specify. If you specify a directory for the
log file, the directory must exist as specified. Otherwise, an error
occurs when you try to run the SPOOL or LOG command. If you do not
specify a directory for the log file, TrafCI uses the <literal>bin</literal
> directory.</para>
<para>For example, this SPOOL <replaceable>log-file</replaceable> command
starts logging the session in the <literal>persnl_updates.log</literal
> file in the <literal>C:\log</literal> directory:</para>
<programlisting>SQL>spool C:\log\persnl_updates.log</programlisting>
</section>
<section>
<title>Using the CLEAR Option</title>
<indexterm><primary>CLEAR option</primary></indexterm>
<para>The CLEAR option clears the contents of an existing log file
before logging new information to the file. If you omit CLEAR, TrafCI
appends new information to existing information in the log file.</para>
<para>For example, this SPOOL <replaceable>log-file</replaceable> CLEAR
command clears existing information from the specified log file and
starts logging the session in the log file:</para>
<programlisting>SQL>spool C:\log\persnl_updates.log clear</programlisting>
</section>
<section>
<title>Logging Concurrent the TrafCI Sessions</title>
<indexterm><primary>Logging output</primary><secondary>concurrent
sessions</secondary></indexterm>
<para>If you plan to run two or more TrafCI sessions concurrently
on the same workstation, use the SPOOL <replaceable>log-file</replaceable
> or LOG <replaceable>log-file</replaceable> command and specify a
unique name for each log file. Otherwise, each session writes information
to the same log file, making it difficult to determine which information
belongs to each session.</para>
</section>
</section>
<section id="i1005555">
<title>Stopping the Logging Process</title>
<indexterm><primary>Logging output</primary><secondary>stopping</secondary>
</indexterm>
<para>To stop logging, enter one of these commands:</para>
<itemizedlist>
<listitem><para>SPOOL OFF</para></listitem>
<listitem><para>LOG OFF</para></listitem>
</itemizedlist>
<para>For example, this SPOOL OFF command stops logging in an TrafCI
session:</para>
<programlisting>SQL>spool off</programlisting>
</section>
<section id="i1005559">
<title>Viewing the Contents of a Log File</title>
<indexterm><primary>Logging output</primary><secondary>viewing a log
file</secondary></indexterm><indexterm><primary>Log files</primary>
<secondary>TrafCI session</secondary></indexterm>
<para>The log file is an ASCII text file that contains all the lines
in TrafCI from the time you start logging to the time you stop logging.
The logged lines include prompts, entered commands, output from commands,
and diagnostic messages.</para>
<indexterm><primary>Transaction, example of</primary></indexterm>
<para>For example, this log file contains information from when you
started logging to when you stopped logging:</para>
<screen>================================================================================
Spooling started at May 29, 2014 4:52:23 PM
================================================================================

SQL>set transaction isolation level serializable;

--- SQL operation complete.

SQL>begin work;

--- SQL operation complete.

SQL>delete from employee where empnum=32;

-- 1 row(s) deleted.

SQL>insert into employee
(empnum, first_name, last_name, deptnum, salary)
values(51, 'JERRY', 'HOWARD', 1000, 137000.00);

-- 1 row(s) inserted.

SQL>update dept
set manager=50
where deptnum=1000;

--- 1 row(s) updated.

SQL>commit work;

--- SQL operation complete.

SQL>log off</screen>
<para condition="hidden"><indexterm><primary>Error messages</primary>
</indexterm>For information about error messages that might appear
in the log file, see the <citetitle>Trafodion Messages Manual</citetitle
>.</para>
</section>
</section>
</chapter>
<chapter id="Chapter5">
<title>Running Scripts in TrafCI</title>
<para>In TrafCI, you can run script files.</para>
<itemizedlist>
<listitem><para><xref linkend="i1004228" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1004259" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1005077" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1004602" role="select:quotedtitle page"
/></para></listitem>
</itemizedlist>
<section id="i1004228">
<title>Creating a Script File</title>
<indexterm><primary>Script file</primary><secondary>creating</secondary>
</indexterm>
<para>A script file that you run in TrafCI must be an ASCII text file
that contains only these elements:</para>
<itemizedlist>
<listitem><para><xref linkend="i1004448" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1004452" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1004456" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="SectionHeaders"
role="select:quotedtitle page"/></para></listitem>
</itemizedlist>
<para>For an example, see <xref linkend="i1005636"
role="select:quotedtitle page"/>.</para>
<note>
<para>You cannot use shell commands in a script file that you run
in TrafCI. To create shell scripts that run TrafCI, see <xref
linkend="i1006618" role="select:label page"/>.</para>
</note>
<section id="i1004448">
<title>SQL Statements</title>
<para>Script files support any of the various SQL statements that
you can run in TrafCI. For more information about SQL statements,
see the <citetitle>Trafodion SQL Reference Manual</citetitle>.</para>
</section>
<section id="i1004452">
<title>Interface Commands</title>
<indexterm><primary>Interface commands</primary><secondary>using in
a script file</secondary></indexterm>
<para>Most interface commands are supported in script files except
the FC command. For a list of the interface commands, see <xref
linkend="i1008451" role="select:label page"/>.</para>
</section>
<section id="i1004456">
<title>Comments</title>
<indexterm><primary>Comments</primary></indexterm><indexterm><primary
>Script file</primary><secondary>comments</secondary></indexterm>
<para>You can include comments anywhere in a script file. SQL also
supports comments. Comments are useful for documenting the functionality
of the script file and for debugging. When debugging, use comments
to disable specific statements or commands without removing them from
the script file. </para>
<para>To denote a comment in a script file, use two hyphens before
the comment:</para>
<programlisting>-- <replaceable>comment</replaceable></programlisting>
<para>The end of the line marks the end of the comment.</para>
</section>
<section id="SectionHeaders">
<title>Section Headers</title>
<para>To create sections of commands within a script file, put a section
header at the beginning of each section:</para>
<programlisting>?SECTION <replaceable>section-name</replaceable></programlisting>
<para>The <replaceable>section-name</replaceable> cannot begin with
a number or an underscore. Each section name in a script file should
be unique because TrafCI executes the first section that it finds
that matches the section name in the @ or OBEY command. For more information,
see the<xref linkend="i1005200" role="select:quotedtitle page"/> or
the <xref linkend="i1005214" role="select:quotedtitle page"/>.</para>
</section>
<section id="i1005636">
<title>Example of a Script File</title>
<indexterm><primary>Script file</primary><secondary>example of</secondary>
</indexterm><indexterm><primary>CREATE SCHEMA statement, example of</primary>
</indexterm><indexterm><primary>CREATE TABLE statement, example of</primary>
</indexterm><indexterm><primary>SET SCHEMA statement, example of</primary>
</indexterm>
<para>This script file creates tables in the inventory schema:</para>
<mediaobject><imageobject role="pdf"><imagedata contentwidth="5.0in"
fileref="img/script.png"/></imageobject></mediaobject>
</section>
</section>
<section id="i1004259">
<title>Running a Script File</title>
<indexterm><primary>Script file</primary><secondary>running one file
at a time</secondary></indexterm><indexterm><primary>OBEY command</primary>
</indexterm><indexterm><primary>@ command</primary><secondary>example
of</secondary></indexterm>
<para>To run a script file in TrafCI, use the @ or OBEY command. The
@ and OBEY commands run one script file at a time in TrafCI. To run
a script file when launching TrafCI, see <xref linkend="i1005079"
role="select:quotedtitle page"/>.</para>
<para>For example, this @ command runs a script file, <literal>sch_invent.sql</literal
>, that creates tables in the inventory schema:</para>
<programlisting>@C:\ddl_scripts\sch_invent.sql</programlisting>
<note>
<para>If the script file is outside the directory of the <literal
>trafci.cmd</literal> or <literal>trafci.sh</literal> file (by default,
the <literal>bin</literal> directory), you must specify the full path
of the script file in the @ or OBEY command.</para>
</note>
<programlisting>SQL>@C:\ddl_scripts\sch_invent.sql

SQL>-- CREATE SCHEMA

SQL>CREATE SCHEMA INVENT;

--- SQL operation complete.

SQL>-- CREATE TABLES/VIEWS in SCHEMA INVENT

SQL>SET SCHEMA INVENT;

--- SQL operation complete.

SQL>CREATE TABLE INVENT.supplier (
+>                         suppnum         NUMERIC (4) UNSIGNED
+>                                         NO DEFAULT
+>                                         NOT NULL
+>                        ,suppname        CHARACTER (18)
+>                                         NO DEFAULT
+>                                         NOT NULL
+>                        ,street          CHARACTER (22)
+>                                         NO DEFAULT
+>                                         NOT NULL
+>                        ,city            CHARACTER (14)
+>                                         NO DEFAULT
+>                                         NOT NULL
+>                        ,state           CHARACTER (12)
+>                                         NO DEFAULT
+>                                         NOT NULL
+>                        ,postcode        CHARACTER (10)
+>                                         NO DEFAULT
+>                                         NOT NULL
+>                        ,PRIMARY KEY     (suppnum)
+>          );

--- SQL operation complete.</programlisting>
<para>For more information about the @ and OBEY commands, see the <xref
linkend="i1005200" role="select:quotedtitle page"/> and the <xref
linkend="i1005214" role="select:quotedtitle page"/>.</para>
</section>
<section id="i1005077">
<title>Logging Output</title>
<indexterm><primary>Logging output</primary><secondary>script file
execution</secondary></indexterm>
<para>To log output of an TrafCI session while running one script
file at a time, use the SPOOL or LOG command. When you run an OBEY
or @ command, TrafCI displays each command in the script file, the
output for each command, and diagnostic messages in TrafCI. The SPOOL
or LOG command captures this output as it appears in TrafCI and logs
it in a log file.</para>
<para>For more information, see <xref linkend="i1006598"
role="select:quotedtitle page"/>.</para>
</section>
<section id="i1004602">
<title>Running Scripts in Parallel</title>
<indexterm><primary>Script file</primary><secondary>running multiple
files in parallel</secondary></indexterm>
<para>In TrafCI, the @ and OBEY commands allow you to run only one
script file at a time. However, the PRUN command allows you to run
multiple script files simultaneously.</para>
<note condition="hidden">
<para>The PRUN command can be run in non-interactive mode. The PRUN
command allows options to be specified on the command line, which
enables PRUN to be run in script and/or obey files.</para>
</note>
<indexterm><primary>Data definition language (DDL) statements, running
simultaneously</primary></indexterm><indexterm><primary>Database,
creating</primary></indexterm>
<para>The PRUN command is most useful for running sets of data definition
language (DDL) statements simultaneously, which speeds up the process
of creating large databases. Put all dependent or related DDL statements
in the same script file. For more information on running scripts in
parallel using the PRUN command, see the <xref linkend="i1005218"
role="select:quotedtitle page"/>.</para>
</section>
</chapter>
<chapter id="i1006618">
<title>Running TrafCI From Perl or Python</title>
<para>You can execute SQL statements in Perl or Python by invoking
the TrafCI Perl or Python wrapper script. To use the Perl or Python
wrapper script, see:</para>
<itemizedlist>
<listitem><para><xref linkend="i1004519" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1007255" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1004583" role="select:quotedtitle page"
/></para></listitem>
</itemizedlist>
<para>These instructions assume that you installed the TrafCI product.
For more information, see <xref linkend="Chapter2"
role="select:label page"/>.</para>
<section id="i1004519">
<title>Setting the Login Environment Variables</title>
<indexterm><primary>Login environment variables</primary><secondary
>description of</secondary></indexterm>
<para>Before launching TrafCI from Perl or Python, set these login
environment variables:</para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="TI  inline table">
<thead>
<row><entry>Environment Variable</entry><entry>Description </entry>
</row>
</thead>
<tbody>
<row><entry><indexterm><primary>Environment variables</primary>
<secondary>TRAFCI_PERL_JSERVER</secondary></indexterm><indexterm>
<primary>TRAFCI_PERL_JSERVER environment variable</primary></indexterm
><literal>TRAFCI_PERL_JSERVER=<replaceable>JavaServer_jar_path</replaceable
></literal></entry><entry>Specifies the Perl JavaServer JAR location.</entry>
</row>
<row><entry><indexterm><primary>Environment variables</primary>
<secondary>TRAFCI_PYTHON_JSERVER</secondary></indexterm><indexterm>
<primary>TRAFCI_PYTHON_JSERVER environment variable</primary>
</indexterm><literal>TRAFCI_PYTHON_JSERVER=<replaceable>Jython_jar_path</replaceable
></literal></entry><entry>Specifies the Jython JAR file location.</entry>
</row>
<row><entry><indexterm><primary>Environment variables</primary>
<secondary>TRAFCI_PERL_JSERVER_PORT</secondary></indexterm><indexterm>
<primary>TRAFCI_PERL_JSERVER_PORT environment variable</primary>
</indexterm><literal>TRAFCI_PERL_JSERVER_PORT=<replaceable>port_number</replaceable
></literal></entry><entry>Specifies the port on which the JavaServer
is listening.</entry></row>
</tbody>
</tgroup>
</informaltable>
<para>The <phrase>Trafodion Command Interface Installer Wizard</phrase
> can attempt to automatically download and install both the Perl
JavaServer and Jython open source extensions. If you wish to download
and install them manually, refer to the instructions in the README
in the samples directory.</para>
<para>To set the login environment variables, see the instructions
for the operating system of the client workstation:</para>
<itemizedlist>
<listitem><para><xref linkend="i1005138" role="select:quotedtitle page"
/></para></listitem>
<listitem><para><xref linkend="i1006996" role="select:quotedtitle page"
/></para></listitem>
</itemizedlist>
<note>
<para>The Perl and Python wrapper scripts do not require these environment
variables:<itemizedlist>
<listitem><para><literal>TRAFCI_SERVER</literal></para></listitem>
<listitem><para><literal>TRAFCI_USER</literal></para></listitem>
<listitem><para><literal>TRAFCI_PASSWORD</literal></para></listitem>
<listitem condition="hidden"><para><literal>TRAFCI DATASOURCE</literal
></para></listitem>
</itemizedlist></para>
</note>
<section id="i1005138">
<title>Setting the Login Environment Variables on Windows</title>
<para>You can set the login environment variables for the session
at command prompts, or you can set the login environment variables
for the system or user by including them in the System Properties.</para>
<section>
<title>Setting Login Environment Variables on the Command Line</title>
<indexterm><primary>Login environment variables</primary><secondary
>setting on a Windows command line</secondary></indexterm>
<para>At each command prompt, enter one of these commands:</para>
<programlisting>set <literal>TRAFCI_PERL_JSERVER=</literal><replaceable
>absolute-path-of-JavaServer.jar</replaceable>
set <literal>TRAFCI_PYTHON_JSERVER=</literal><replaceable>absolute-path-of-Jython.jar</replaceable
>
set <literal>TRAFCI_PERL_JSERVER_PORT=</literal><replaceable>portnumber</replaceable
></programlisting>
</section>
<section>
<title>Setting Login Environment Variables in the System Properties</title>
<indexterm><primary>Login environment variables</primary><secondary
>setting in Windows System Properties</secondary></indexterm>
<procedure id="i1005280">
<step><para>Right-click the <emphasis role="bold">Computer</emphasis
> icon on your desktop, and then select <emphasis role="bold">Properties</emphasis
>:</para>
<mediaobject><imageobject role="pdf"><imagedata fileref="img/mycomp.png"/>
</imageobject></mediaobject>
</step>
<step><para>In the Control Panel, click the <emphasis role="bold"
>Advanced system settings</emphasis>.</para></step>
<step><para>In the System Properties dialog box, click the <emphasis
role="bold">Advanced</emphasis> tab.</para></step>
<step><para>Click the <emphasis role="bold">Environment Variables</emphasis
> button:</para>
<mediaobject><imageobject role="pdf"><imagedata contentwidth="3.5in"
fileref="img/sysprop.png"/></imageobject></mediaobject>
</step>
<step id="i1007008" pagebreak="yes"><para>In the Environment Variables
dialog box, click <emphasis role="bold">New</emphasis> under System
or User variables, whichever you prefer.</para>
<mediaobject><imageobject role="pdf"><imagedata fileref="img/envvar.png"/>
</imageobject></mediaobject>
</step>
<step><para>In the New User Variable dialog box, type the name of
the login environment variable for the Variable Name and the required
value for the Variable Value, and then click <emphasis role="bold"
>OK</emphasis>:</para>
<mediaobject><imageobject role="pdf"><imagedata contentwidth="4in"
fileref="img/logvar_new.png" role="pdf"/></imageobject></mediaobject>
</step>
<step id="i1005284"><para>Verify that the environment variable appears
under System or User variables.</para></step>
<step><para>Repeat <xref linkend="i1007008" role="select:label"/> to <xref
linkend="i1005284" role="select:label"/> for each login environment
variable.</para></step>
<step><para>After adding all three environment variables, click <emphasis
role="bold">OK</emphasis> in the Environment Variables and System
Properties dialog boxes to accept the changes.</para></step>
</procedure>
</section>
</section>
<section id="i1006996">
<title>Setting the Login Environment Variables on Linux or UNIX</title>
<para>You can set the login environment variables for the session
at command prompts, or you can set the login environment variables
for each user by including the variables in the user profile on a
Linux or UNIX client workstation.</para>
<section pagebreak="yes">
<title>Setting Login Environment Variables on the Command Line</title>
<indexterm><primary>Login environment variables</primary><secondary
>setting on a Linux or UNIX command line</secondary></indexterm>
<para>At each command prompt in any shell except the C shell, enter
one of these commands:</para>
<programlisting>export <literal>TRAFCI_PERL_JSERVER=</literal><replaceable
>absolute-path-of-JavaServer.jar</replaceable>
export <literal>TRAFCI_PYTHON_JSERVER=</literal><replaceable>absolute-path-of-Jython.jar</replaceable
>
export TRAFCI_PERL_JSERVER_PORT=<replaceable>portnumber</replaceable
></programlisting>
<para>At each command prompt in the C shell, enter one of these commands:</para>
<programlisting>setenv <literal>TRAFCI_PERL_SERVER=</literal><replaceable
>absolute-path-of-JavaServer.jar</replaceable>
setenv <literal>TRAFCI_PYTHON_JSERVER=</literal><replaceable>absolute-path-of-Jython.jar</replaceable
>
setenv <literal>TRAFCI_PERL_JSERVER_PORT=</literal><replaceable>portnumber</replaceable
></programlisting>
</section>
<section>
<title>Setting Login Environment Variables in the User Profile</title>
<indexterm><primary>User profile</primary><secondary>setting login
environment variables</secondary></indexterm><indexterm><primary>Login
environment variables</primary><secondary>setting in the user profile</secondary>
</indexterm>
<para>To set the login environment variables in the user profile:</para>
<procedure>
<step><para>Open the user profile (<literal>.profile</literal> or <literal
>.bash_profile</literal> for the Bash shell) in the <literal>/home</literal
> directory. For example:</para>
<programlisting>vi .profile</programlisting>
</step>
<step><para>Add these <literal>export</literal> commands (or <literal
>setenv</literal> commands for the C shell) to the user profile. For
example:</para>
<programlisting>export <literal>TRAFCI_PERL_JSERVER=</literal><replaceable
>absolute-path-of-JavaServer.jar</replaceable>
export <literal>TRAFCI_PYTHON_JSERVER=</literal><replaceable>absolute-path-of-Jython.jar</replaceable
>
export <literal>TRAFCI_PERL_JSERVER_PORT=</literal><replaceable>portnumber</replaceable
></programlisting>
</step>
<step><para>To activate the changes, either log out and log in again
or execute the user profile. For example:</para>
<programlisting>. .profile</programlisting>
</step>
</procedure>
</section>
</section>
</section>
<section id="i1007255">
<title>Perl and Python Wrapper Scripts</title>
<indexterm><primary>Perl wrapper script, description of</primary>
</indexterm><indexterm><primary>trafci.pl, description of</primary>
</indexterm><indexterm><primary>Python wrapper script, description
of</primary></indexterm><indexterm><primary>trafci.py, description
of</primary></indexterm>
<para>The Perl or Python wrapper scripts enable you to run SQL statements
and script files using a single connection or multiple connections
within Perl or Python programs. The Perl wrapper script is <literal
>trafci.pl</literal>, and the Python wrapper script is <literal>trafci.py</literal
>. By default, these wrapper scripts are located in the <literal>bin</literal
> directory:</para>
<itemizedlist>
<listitem><para>On Windows:</para>
<programlisting><replaceable>trafci‑installation‑directory</replaceable
><literal>\Trafodion Command Interface\bin</literal></programlisting>
<para><replaceable>trafci-installation-directory</replaceable> is
the directory where you installed the TrafCI software files.</para>
</listitem>
<listitem><para>On Linux or UNIX:</para>
<programlisting><replaceable>trafci‑installation‑directory</replaceable
>/trafci/bin</programlisting>
<para><replaceable>trafci-installation-directory</replaceable> is
the directory where you installed the TrafCI software files.</para>
</listitem>
</itemizedlist>
</section>
<section id="i1004583">
<title>Launching TrafCI From the Perl or Python Command Line</title>
<indexterm><primary>Python command line, invoking TrafCI</primary>
</indexterm><indexterm><primary>Perl command line, invoking TrafCI</primary>
</indexterm><indexterm><primary>Trafodion Command Interface (TrafCI)</primary>
<secondary>launching from a Perl or Python command line</secondary>
</indexterm>
<para>You can launch the Perl or Python wrapper scripts as shown below:</para>
<itemizedlist>
<listitem><para>Perl Wrapper Script:</para>
<programlisting>perl trafci.pl <replaceable>perl-script-filename</replaceable
></programlisting>
<indexterm><primary>Perl program, running</primary></indexterm><para
>To run a Perl program, enter the <literal>perl</literal> command
at a command prompt. For example:</para>
<programlisting>>perl trafci.pl example.pl</programlisting>
</listitem>
<listitem><para>Python Wrapper Script:</para>
<programlisting>python trafci.py <replaceable>python-script-filename</replaceable
></programlisting>
<indexterm><primary>Python program, running</primary></indexterm><para
>To run a Python program, enter the <literal>python</literal> command
at a command prompt. For example:</para>
<programlisting>>python trafci.py example.py</programlisting>
</listitem>
</itemizedlist>
<section id="i1005875">
<title>Example of a Perl Program (sample.pl)</title>
<programlisting>use lib 'C:\\Program Files (x86)\\Apache Software Foundation\\Apache Trafodion Command Interface\\lib\\perl';
use Session;

# create a new session 
$sess = Session->new();
 
# connect to the database
$sess->connect("user1","password","16.123.456.78","23400");
 
$retval=$sess->execute(" set schema TRAFODION.CI_SAMPLE ");
print $retval;
$retval=$sess->execute("select * from employee");
print $retval;
$retval=$sess->execute("get statistics");
print $retval;
 
print "\n\nSession 1:  Disconnecting first session. \n\n";
$sess->disconnect();
</programlisting>
</section>
<section id="i1005879">
<title>Example of a Python Program (sample.py)</title>
<programlisting>import os
import sys
## Modify this path 
sys.path.append("C:\\Program Files (x86)\\Apache Software Foundation\\Apache Trafodion Command Interface\\lib\\python")
import Session

# create a new session
sess = Session.Session()

# Connect to the database
x=sess.__connect__("user1","password","16.123.456.78","23400")

# Execute sample queries
#    __execute takes the query string as argument

setSchema     = "set schema TRAFODION.CI_SAMPLE";
selectTable   = "select * from employee"
getStats      = "get statistics"

#Contruct a list of SQL statements to be executed
queryList = [setSchema, selectTable, getStats]
print "\n";    
         
for query in queryList:
   print sess.__execute__(query)
   
# disconnect the session
sess.__disconnect__()
del sess
sess=None
</programlisting>
</section>
</section>
</chapter>
<appendix id="i1008451">
<title>Interface Commands</title>
<indexterm><primary>Interface commands</primary><secondary>descriptions
of</secondary></indexterm>
<para>TrafCI supports these commands in the command-line interface
or in script files that you run from the command-line interface.</para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="3" tgroupstyle="TI  inline table">
<colspec colwidth="0.64*"/>
<colspec colwidth="1.18*"/>
<colspec colwidth="1.16*"/>
<thead>
<row><entry>Command</entry><entry>Description</entry><entry>Syntax</entry>
</row>
</thead>
<tbody>
<row><entry>@ </entry><entry>Runs the SQL statements and interface
commands contained in a specified script file.</entry><entry>See the <xref
linkend="i1005200" role="select:quotedtitle page"/>.</entry></row>
<row><entry>/ </entry><entry>Runs the previously executed SQL statement.</entry>
<entry>See the <xref linkend="i1005310" role="select:quotedtitle page"
/>.</entry></row>
<row condition="hidden"><entry>ADD LIBRARY</entry><entry>Uploads a
JAR file from the client workstation to the Trafodion database platform
and then creates a new library object for the JAR file in the specified
database schema.</entry><entry>See the <xref
linkend="ADD-LIBRARY-Command" role="select:quotedtitle page"/>.</entry>
</row>
<row><entry>ALIAS</entry><entry>Maps a string to any interface or
SQL command.</entry><entry>See the <xref linkend="ALIAS-Command"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>CLEAR</entry><entry>Clears the command console so that
only the prompt appears at the top of the screen.</entry><entry>See
the <xref linkend="CLEAR-Command" role="select:quotedtitle page"/>.</entry>
</row>
<row><entry>CONNECT</entry><entry>Creates a new connection to the
Trafodion database from a current or existing TrafCI session.</entry>
<entry>See the <xref linkend="CONNECT-Command"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>DELAY</entry><entry>Allows the TrafCI session to be in
sleep mode for the specified interval.</entry><entry><xref
linkend="DELAY-Command" role="select:quotedtitle page"/></entry></row>
<row><entry>DISCONNECT</entry><entry>Terminates the connection to
the Trafodion database.</entry><entry>See the <xref linkend="i1005204"
role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>DROP JAR</entry><entry>Deletes a JAR
file on the Trafodion database platform.</entry><entry>See the <xref
linkend="DROP_JAR_Command" role="select:quotedtitle page"/>.</entry>
</row>
<row><entry>ENV</entry><entry>Displays attributes of the current TrafCI
session.</entry><entry>See the <xref linkend="ENV"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>EXIT</entry><entry>Disconnects from and exits the command-line
interface.</entry><entry>See the <xref linkend="i1014724"
role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>EXPORT WMS</entry><entry>Exports and
saves the WMS configuration to a script file</entry><entry>See the <xref
linkend="EXPORT-WMS-Command" role="select:quotedtitle page"/>.</entry>
</row>
<row><entry>FC</entry><entry>Edits and reexecutes a previous command.
This command is restricted to the command-line interface and is disallowed
in script files.</entry><entry>See the <xref linkend="i1011597"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>GET STATISTICS</entry><entry>Returns formatted statistics
for the last executed SQL statement. </entry><entry>See the <xref
linkend="get-statistics" role="select:quotedtitle page"/>.</entry></row>
<row><entry>GOTO</entry><entry>Jumps to a point the command history
specified by the <xref linkend="LABEL" role="select:quotedtitle page"
/>.</entry><entry>See the <xref linkend="GOTO"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>HELP</entry><entry>Displays help text for the interface
commands.</entry><entry>See the <xref linkend="LOCALHOST"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>HISTORY</entry><entry>Displays recently executed commands.</entry>
<entry>See the <xref linkend="i1013406" role="select:quotedtitle page"
/>.</entry></row>
<row><entry>IF...THEN</entry><entry>Allows the conditional execution
of actions specified within the IF...THEN conditional statement.</entry>
<entry>See the <xref linkend="IF_THEN" role="select:quotedtitle page"
/>.</entry></row>
<row><entry>LABEL</entry><entry>Marks a point in the command history
that you can jump to by using the GOTO command.</entry><entry>See
the <xref linkend="LABEL" role="select:quotedtitle page"/>.</entry>
</row>
<row condition="hidden"><entry>LIST JAR</entry><entry>Displays information
about a JAR file (or multiple JAR files) on the Trafodion database
platform.</entry><entry>See the <xref linkend="LIST_JAR_Command"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>LOCALHOST </entry><entry>Executes client machine commands.</entry>
<entry>See the <xref linkend="LOCALHOST" role="select:quotedtitle page"
/>.</entry></row>
<row><entry>LOG</entry><entry>Logs commands and output from TrafCI
to a log file.</entry><entry>See the <xref linkend="i1005420"
role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>MODIFY LIBRARY</entry><entry>Uploads
a JAR file from the client workstation to the Trafodion database platform
and then alters the specified library object to point to the new JAR
file.</entry><entry>See the <xref linkend="MODIFY-LIBRARY-Command"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>OBEY</entry><entry>Runs the SQL statements and interface
commands contained in a specified script file.</entry><entry>See the <xref
linkend="i1005214" role="select:quotedtitle page"/>.</entry></row>
<row><entry>PRUN</entry><entry>Runs script files in parallel. </entry>
<entry>See the <xref linkend="i1005218" role="select:quotedtitle page"
/>.</entry></row>
<row><entry>QUIT</entry><entry>Disconnects from and exits TrafCI.</entry>
<entry>See the <xref linkend="i1011680" role="select:quotedtitle page"
/>.</entry></row>
<row><entry>RECONNECT</entry><entry>Creates a new connection to the
Trafodion database using the login credentials of the last successful
connection.</entry><entry>See the <xref linkend="RECONNECT-Command"
/>.</entry></row>
<row condition="hidden"><entry>REMOVE LIBRARY</entry><entry>Drops
the specified library object from the database schema and then removes
the library’s corresponding JAR file from the Trafodion database.</entry>
<entry>See the <xref linkend="REMOVE-LIBRARY-Command"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>REPEAT</entry><entry>Reexecutes a command. </entry><entry
>See the <xref linkend="i1014853" role="select:quotedtitle page"/>.</entry>
</row>
<row><entry>RESET LASTERROR</entry><entry>Resets the last error code
to 0.</entry><entry>See the <xref linkend="RESET-LASTERROR"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>RESET PARAM</entry><entry>Clears all parameter values
or a specified parameter value in the current session.</entry><entry
>See the <xref linkend="i1014280" role="select:quotedtitle page"/>.</entry>
</row>
<row><entry>RUN</entry><entry>Runs the previously executed SQL statement.</entry>
<entry>See the <xref linkend="i1008105" role="select:quotedtitle page"
/>.</entry></row>
<row><entry>SAVEHIST</entry><entry>Saves the session history in a
user-specified file.</entry><entry>See the <xref linkend="SAVEHIST"
role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>SCHEDULE</entry><entry>Displays or
modifies the time during which automated UPDATE STATISTICS operations
are run by the scheduler.</entry><entry>See the <xref
linkend="SCHEDULE_command" role="select:quotedtitle page"/>.</entry>
</row>
<row><entry>SESSION</entry><entry>Displays attributes of the current
TrafCI session.</entry><entry>See the <xref linkend="SESSION"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SET COLSEP</entry><entry>Sets the column separator and
allows you to control the formatting of the result displayed for SQL
queries.</entry><entry>See the <xref linkend="SET-COLSEP"
role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>SET CONNECTOPT ROLE</entry><entry>Changes
the role during an TrafCI session.</entry><entry>See the <xref
linkend="SET-CONNECTOPT-ROLE" role="select:quotedtitle page"/>.</entry>
</row>
<row><entry>SET FETCHSIZE</entry><entry>Changes the default fetchsize
used by JDBC.</entry><entry>See the<xref linkend="SET-FETCHSIZE"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SET HISTOPT</entry><entry>Sets the history option and
controls how commands are added to the history buffer.</entry><entry
>See the <xref linkend="SET-HISTOPT" role="select:quotedtitle page"
/>.</entry></row>
<row><entry>SET IDLETIMEOUT</entry><entry>Sets the idle timeout value
for the current session.</entry><entry>See the <xref linkend="i1008731"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SET LIST_COUNT</entry><entry>Sets the maximum number of
rows to be returned by SELECT statements that are executed after this
command.</entry><entry>See the <xref linkend="SET-LIST-COUNT"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SET MARKUP</entry><entry>Sets the markup format and controls
how results are displayed by TrafCI.</entry><entry>See the<xref
linkend="SET-MARKUP" role="select:quotedtitle page"/>.</entry></row>
<row><entry>SET PARAM</entry><entry>Sets a parameter value in the
current session.</entry><entry>See the <xref linkend="i1009147"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SET PROMPT</entry><entry>Sets the prompt of the current
session to a specified string or to a session variable.</entry><entry
>See the <xref linkend="SET-PROMPT" role="select:quotedtitle page"
/>.</entry></row>
<row><entry>SET SQLPROMPT</entry><entry>Sets the SQL prompt of the
current session to a specified string. The default is SQL.</entry>
<entry>See the <xref linkend="i1008424" role="select:quotedtitle page"
/>.</entry></row>
<row><entry>SET SQLTERMINATOR</entry><entry>Sets the SQL statement
terminator of the current session to a specified string. The default
is a semicolon (;).</entry><entry>See the <xref linkend="i1005238"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SET STATISTICS</entry><entry>Automatically retrieves the
statistics information for a query being executed.</entry><entry>See
the <xref linkend="set-statistics" role="select:quotedtitle page"
/>.</entry></row>
<row><entry>SET TIME</entry><entry>Causes the local time of the client
workstation to be displayed as part of the interface prompt.</entry>
<entry>See the <xref linkend="i1005242" role="select:quotedtitle page"
/>.</entry></row>
<row><entry>SET TIMING</entry><entry>Causes the elapsed time to be
displayed after each SQL statement executes.</entry><entry>See the<xref
linkend="i1005246" role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW ACTIVITYCOUNT</entry><entry>Functions as an alias
of <xref linkend="SHOW-RECCOUNT" role="select:quotedtitle page"/>.</entry>
<entry>See the <xref linkend="SHOW-ACTIVITYCOUNT"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW ALIAS</entry><entry>Displays all or a set of aliases
available in the current TrafCI session.</entry><entry>See the <xref
linkend="SHOW-ALIAS" role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW ALIASES</entry><entry>Displays all the aliases available
in the current TrafCI session.</entry><entry>See the <xref
linkend="SHOW-ALIASES" role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW CATALOG</entry><entry>Displays the current catalog
of the TrafCI session.</entry><entry>See the <xref
linkend="show-catalog" role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>SHOW CATALOGS</entry><entry>Displays
all or a set of the catalogs that exist in the database instance.</entry>
<entry>See the <xref linkend="show-catalogs"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW COLSEP</entry><entry>Displays the value of the column
separator for the current TrafCI session.</entry><entry>See the <xref
linkend="SHOW-COLSEP"/>.</entry></row>
<row><entry>SHOW ERRORCODE</entry><entry>Functions as an alias for
the <xref linkend="SHOW-LASTERROR" role="select:quotedtitle page"
/>.</entry><entry>See the <xref linkend="SHOW-ERRORCODE"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW FETCHSIZE</entry><entry>Displays the fetch size value
for the current TrafCI session.</entry><entry>See the <xref
linkend="SHOW_FETCHSIZE" role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW HISTOPT</entry><entry>Displays the value that has
been set for the history option of the current setting.</entry><entry
>See the <xref linkend="SHOW-HISTOPT" role="select:quotedtitle page"
/>.</entry></row>
<row><entry>SHOW IDLETIMEOUT</entry><entry>Displays the idle timeout
value of the current session.</entry><entry>See the <xref
linkend="i1009114" role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>SHOW INDEXES</entry><entry>Displays
the indexes and their associated tables and materialized views in
the current schema of the TrafCI session.</entry><entry>See the <xref
linkend="SHOW_INDEXES_Command" role="select:quotedtitle page"/>.</entry>
</row>
<row><entry>SHOW LASTERROR</entry><entry>Displays the last error of
the statement that was executed.</entry><entry>See the <xref
linkend="SHOW-LASTERROR" role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW LIST_COUNT</entry><entry>Displays the maximum number
of rows to be returned by SELECT statements in the current session.</entry>
<entry>See the <xref linkend="SHOW-LIST-COUNT"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW MARKUP</entry><entry>Displays the value that has
been set for the markup option for the current TrafCI session.</entry>
<entry>See the <xref linkend="SHOW-MARKUP"
role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>SHOW MVGROUPS</entry><entry>Displays
all or a set of the materialized view groups in the current schema
of the TrafCI session.</entry><entry>See the <xref linkend="i1015887"
role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>SHOW MVS</entry><entry>Displays all
or a set of the materialized views in the current schema of the TrafCI
session.</entry><entry>See the <xref linkend="i1011926"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW PARAM</entry><entry>Displays the parameters that
are set in the current session.</entry><entry>See the <xref
linkend="i1010250" role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW PREPARED</entry><entry>Displays the prepared statements
in the current TrafCI session.</entry><entry>See the <xref
linkend="SHOW-PREPARED" role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>SHOW PROCEDURES</entry><entry>Displays
the procedures (Stored Procedures in Java) in the current schema of
the TrafCI session.</entry><entry>See the <xref
linkend="SHOW-PROCEDURES" role="select:quotedtitle page"/>.</entry>
</row>
<row><entry>SHOW RECCOUNT</entry><entry>Displays the record count
of the previous executed SQL statement.</entry><entry>See the <xref
linkend="SHOW-RECCOUNT" role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW REMOTEPROCESS</entry><entry>Displays the process
name of the DCS server that is handling the current connection.</entry>
<entry>See the <xref linkend="SHOW-REMOTEPROCESS"
role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>SHOW ROLE</entry><entry>Displays the
role in which you are currently logged on during an TrafCI session.</entry>
<entry>See the <xref linkend="SHOW-ROLE" role="select:quotedtitle page"
/>.</entry></row>
<row><entry>SHOW SCHEMA</entry><entry>Displays the current schema
of the TrafCI session.</entry><entry>See the <xref linkend="i1005258"
role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>SHOW SCHEMAS</entry><entry>Displays
all or a set of the schemas that exist in the default catalog of the
current session.</entry><entry>See the <xref linkend="i1005262"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW SESSION</entry><entry>Displays attributes of the
current TrafCI session.</entry><entry>See the <xref linkend="SESSION"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW SQLPROMPT</entry><entry>Displays the value of the
SQL prompt for the current session.</entry><entry>See the <xref
linkend="i1005266" role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW SQLTERMINATOR</entry><entry>Displays the SQL statement
terminator of the current session.</entry><entry>See the <xref
linkend="i1005270" role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW STATISTICS</entry><entry>Displays if statistics has
been enabled or disabled for the current session</entry><entry>See
the <xref linkend="show-statistics" role="select:quotedtitle page"
/></entry></row>
<row condition="hidden"><entry>SHOW SYNONYMS</entry><entry>Displays
all or a set of the synonyms in the current schema of the TrafCI session.</entry>
<entry>See the <xref linkend="i1012014" role="select:quotedtitle page"
/>.</entry></row>
<row condition="hidden"><entry>SHOW TABLE</entry><entry>Displays information
about the dependent objects (indexes, materialized views, or synonyms)
of a specified table.</entry><entry>See the <xref linkend="i1009180"
role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>SHOW TABLES</entry><entry>Displays
all or a set of the tables that exist in the current schema of the
TrafCI session.</entry><entry>See the <xref linkend="i1005274"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW TIME</entry><entry>Displays the setting for the local
time in the SQL prompt.</entry><entry>See the <xref linkend="i1005278"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SHOW TIMING</entry><entry>Displays the setting for the
elapsed time. </entry><entry>See the <xref linkend="i1005282"
role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>SHOW TRIGGERS</entry><entry>Displays
the names of the triggers associated with the specified table in the
current schema.</entry><entry>See the <xref
linkend="SHOW_TRIGGERS_Command" role="select:quotedtitle page"/>.</entry>
</row>
<row condition="hidden"><entry>SHOW VIEWS</entry><entry>Displays all
or a set of the views that exist in the current schema of the TrafCI
session.</entry><entry>See the <xref linkend="i1009184"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>SPOOL</entry><entry>Logs commands and output from TrafCI
to a log file.</entry><entry>See the <xref linkend="i1005290"
role="select:quotedtitle page"/>.</entry></row>
<row condition="hidden"><entry>UPLOAD JAR</entry><entry>Uploads a
JAR file (or multiple JAR files) from the client workstation to the
Trafodion database platform.</entry><entry>See the <xref
linkend="UPLOAD_JAR_Command" role="select:quotedtitle page"/>.</entry>
</row>
<row><entry>VERSION</entry><entry>Displays the build versions of the
platform, database connectivity services, JDBC Type 4 Driver, and
TrafCI.</entry><entry>See the <xref linkend="VERSION-Command"
role="select:quotedtitle page"/>.</entry></row>
</tbody>
</tgroup>
</informaltable>
<section id="i1005200" pagebreak="yes">
<title>@ Command</title>
<para><indexterm><primary>@ command</primary><secondary>syntax of</secondary>
</indexterm>The @ command executes the SQL statements and interface
commands contained in a specified script file. The @ command is executed
the same as the OBEY command. For more information on syntax and considerations,
see the <phrase><xref linkend="i1005214" role="select:quotedtitle page"
/></phrase>.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>@{<replaceable>script-file</replaceable
> | <replaceable>wild-card-pattern</replaceable>} [(<replaceable>section-name</replaceable
>)]
</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>script-file</replaceable></term>
<listitem><para>is the name of an ASCII text file that contains SQL
statements, interface commands, and comments. If the script file exists
outside the local directory where you launch TrafCI (by default, the <literal
>bin</literal> directory), specify the full directory path of the
script file.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>wild-card-pattern</replaceable></term>
<listitem><para>is a character string used to search for script files
with names that match the character string. <replaceable>wild-card-pattern</replaceable
> matches a string, depending on the operating system for case-sensitivity,
unless you enclose it within double quotes. To look for similar values,
specify only part of the characters of <replaceable>wild-card-pattern</replaceable
> combined with these <indexterm><primary>Wild-card characters</primary>
</indexterm>wild-card characters:</para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="DL1  desc list">
<colspec colwidth="0.16*"/>
<colspec colwidth="1.84*"/>
<tbody>
<row><entry>*</entry><entry>Use an asterisk (*) to indicate zero or
more characters of any type. For example, <literal>*art*</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal>.</entry></row>
<row><entry>?</entry><entry>Use a question mark (?) to indicate any
single character. For example, <literal>boo?</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. </entry></row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</varlistentry>
<varlistentry><term>(<replaceable>section-name</replaceable>)</term>
<listitem><para>is the name of a section within the <replaceable>script-file</replaceable
> to execute. If you specify <replaceable>section-name</replaceable
>, the @ command executes the commands between the header line for
the specified section and the header line for the next section (or
the end of the script file). If you omit <replaceable>section-name</replaceable
>, the @ command executes the entire script file. <phrase>For more
information, see <xref linkend="SectionHeaders"
role="select:quotedtitle page"/>.</phrase></para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>Space is disallowed between the @ sign and the first
character of the script name.</para></listitem>
<listitem><para>For additional considerations, see the <xref
linkend="i1005214" role="select:quotedtitle page"/>.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This @ command runs the script file from the local
directory (the same directory where you are running TrafCI):</para>
<programlisting>SQL>@ddl.sql</programlisting>
</listitem>
<listitem><para>This @ command runs the script file in the specified
directory on a Windows workstation:</para>
<programlisting>SQL>@c:\my_files\ddl.sql</programlisting>
</listitem>
<listitem><para>This @ command runs the script file in the specified
directory on a Linux or UNIX workstation:</para>
<programlisting>SQL>@./my_files/ddl.sql</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="i1005310" pagebreak="yes">
<title>/ Command</title>
<para><indexterm><primary>/ command</primary><secondary>syntax of</secondary>
</indexterm>The / command executes the previously executed SQL statement.
This command does not repeat an interface command.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>/</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line.</para>
</listitem>
<listitem><para>The command does not require an SQL terminator.</para>
</listitem>
</itemizedlist>
</section>
<section>
<title>Example</title>
<para>This / command executes the previously executed SELECT statement:</para>
<programlisting>SQL>select count(*) from persnl.employee;

(EXPR)               
-------------------- 
                  62 

--- 1 row(s) selected.

SQL>/

(EXPR)               
-------------------- 
                  62 

--- 1 row(s) selected.

SQL></programlisting>
</section>
</section>
<section condition="hidden" id="ADD-LIBRARY-Command" pagebreak="yes">
<title>ADD LIBRARY Command</title>
<para><indexterm><primary>ADD LIBRARY command</primary></indexterm
>The ADD LIBRARY command uploads a JAR file from the client workstation
to the Trafodion database platform and then creates a new library
object for the JAR file in the specified database schema.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>ADD LIBRARY [[<replaceable>catalog-name</replaceable
>.]<replaceable>schema-name</replaceable>.]<replaceable>library-name</replaceable
> [<replaceable>jar-file-directory</replaceable>]<replaceable>jar-file-name</replaceable
> </programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term>[[<replaceable>catalog-name</replaceable>.]<replaceable
>schema-name</replaceable>.]<replaceable>library-name</replaceable
></term>
<listitem><para>specifies the name of the library object to be created.
The name must be unique among the libraries in the schema and must
not exceed 128 characters. The library name is not case-sensitive.
If you do not fully qualify the library name with catalog and schema
names, TrafCI uses the current catalog and schema.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>jar-file-directory</replaceable></term>
<listitem><para>is the directory of the JAR file on the client workstation.
If you omit the directory, TrafCI searches for the JAR file in the
same location as the TrafCI Windows launch file, <filename>trafci.cmd</filename
>, in <filename class="directory">C:\Program Files (x86)\Apache Software Foundation\Apache Trafodion
Command Interface\bin</filename>.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>jar-file-name</replaceable></term>
<listitem><para>is the name of the JAR file to be uploaded.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>To run this command, you must have these privileges: </para>
<itemizedlist>
<listitem><para>You must have the CREATE_LIBRARY privilege for the
SQL_OPERATIONS component. For more information, see the component
privileges in the <citetitle>HP Database Manager (HPDM) User Guide</citetitle
> or the GRANT COMPONENT PRIVILEGE statement in the <citetitle>Trafodion
SQL Reference Manual</citetitle>.</para></listitem>
<listitem><para>You must either be the owner of the schema where you
will create the library or have the CREATE_LIBRARY privilege for the
schema. The schema owner can grant such a schema-level privilege to
other users or roles. For more information, see grant or revoke privileges
for schemas in the <citetitle>HP Database Manager (HPDM) User Guide</citetitle
> or the GRANT SCHEMA statement in the <citetitle>Trafodion SQL Reference
Manual</citetitle>.</para></listitem>
</itemizedlist>
</listitem>
<listitem><para>The JAR file that you select for the library must
contain valid Java bytecode<phrase condition="hidden"> and must not
be used by another library in the catalog</phrase>.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>This command uploads a JAR file in the <filename class="directory"
>c:\myjars</filename> directory to the Trafodion database platform
and then creates a library named PAYROLL for the JAR file in the <phrase
>TRAFODION</phrase>.PERSNL schema:</para>
<programlisting>SQL>add library <phrase>trafodion</phrase>.persnl.payroll c:\myjars\Payroll.jar</programlisting>
</section>
</section>
<section id="ALIAS-Command" pagebreak="yes">
<title>ALIAS Command</title>
<para><indexterm><primary>ALIAS command</primary></indexterm>The ALIAS
command allows you to map a string to any interface or SQL command.
The syntax of the interface or SQL command is checked only when the
mapped string is executed. This command replaces only the first token
of a command string, which allows the rest of the tokens to be treated
as parameters.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>ALIAS <emphasis role="italic">value</emphasis
> AS <emphasis role="italic">command</emphasis> <emphasis role="italic"
>SQL-terminator</emphasis></programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>value</replaceable></term>
<listitem><para>is a case-insensitive string without spaces. <replaceable
>Value</replaceable> cannot be an interface command.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>command</replaceable></term>
<listitem><para>is an interface command or SQL command.</para>
</listitem>
</varlistentry>
<varlistentry><term><replaceable>SQL-terminator</replaceable></term>
<listitem><para>is the default terminator (;) or a string value defined
for the statement terminator by the <phrase><xref linkend="i1005238"
role="select:quotedtitle page"/></phrase>. <phrase>For more information,
see <xref linkend="i1004589" role="select:quotedtitle page"/>.</phrase
></para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>The ALIAS command lasts only for the duration of the
session.</para></listitem>
<listitem><para>An alias on an alias is not supported.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command creates an alias named .OS to perform
the LOCALHOST (LH) command:</para>
<programlisting>SQL> ALIAS .OS AS LH;
</programlisting>
</listitem>
<listitem><para>This command executes the new ALIAS with the ls option:<programlisting
>SQL>.OS ls

trafci-perl.pl
trafci-python.py
trafci.cmd
trafci.pl
trafci.py
trafci.sh
</programlisting></para></listitem>
<listitem><para>This command creates an alias named .GOTO to perform
the GOTO command:<programlisting>SQL> ALIAS .GOTO AS GOTO;

SQL> .GOTO mylabel

GOTO statement executed, ignoring all commands until a 'LABEL
MYLABEL' command is encountered.</programlisting></para></listitem>
<listitem><para>This command creates an alias named USE to perform
the SET SCHEMA operation, uses the alias to set the schema to <phrase
>TRAFODION</phrase>.USR, and checks the current schema to verify that
the alias worked correctly:<programlisting>SQL> ALIAS USE AS "SET SCHEMA";

SQL> USE <phrase>TRAFODION</phrase>.USR;

SQL> SHOW SCHEMA
     SCHEMA USR</programlisting></para></listitem>
</itemizedlist>
</section>
</section>
<section id="CLEAR-Command" pagebreak="yes">
<title>CLEAR Command</title>
<para><indexterm><primary>CLEAR command</primary></indexterm>The CLEAR
command clears the interface window so that only the prompt appears
at the top of the window. CLEAR does not clear the log file or reset
the settings of the session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>CLEAR</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line. The command does not
require an SQL terminator.</para>
</section>
<section>
<title>Example</title>
<para>This CLEAR command clears the interface window:</para>
<programlisting>SQL>clear</programlisting>
<para>After the CLEAR command executes, the interface window appears
with only the prompt showing:</para>
<programlisting>SQL></programlisting>
</section>
</section>
<section id="CONNECT-Command" pagebreak="yes">
<title>CONNECT Command</title>
<para><indexterm><primary>CONNECT command</primary></indexterm>The
CONNECT command creates a new connection to the database from the
current or existing TrafCI session. </para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>CONNECT [<emphasis role="italic">username </emphasis
>[/<emphasis role="italic">password</emphasis>][@<emphasis role="italic"
>hostname</emphasis>]<phrase condition="hidden">[,<emphasis
role="italic">dsnName</emphasis>]</phrase>]</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>username</replaceable></term>
<listitem><para>specifies the user name for logging in to the database
platform. If the user name is not specified, TrafCI prompts for the
user name. If the user name contains spaces or special characters,
such as a period (.), hyphen (-), or underscore (_), put the name
within double quotes. For example: <literal>"sq.user-1"</literal>.</para>
</listitem>
</varlistentry>
<varlistentry><term><replaceable>password</replaceable></term>
<listitem><para>specifies the password of the user for logging in
to the database platform. If the password is not specified, TrafCI
prompts for the password. If the password contains spaces or special
characters, such as @ or a single quote ('), put the password within
double quotes. For example: <literal>"Tr@f0d!0n"</literal>.</para>
</listitem>
</varlistentry>
<varlistentry><term><replaceable>hostname</replaceable></term>
<listitem><para>specifies the host name or IP address of the database
platform to which you want the client to connect. If the hostname
is not specified, the value is automatically used from the current
TrafCI session. If TrafCI was invoked with the <literal>-noconnect</literal
> launch parameter, you are prompted for a <replaceable>hostname</replaceable
> value.</para></listitem>
</varlistentry>
<varlistentry condition="hidden"><term><replaceable>dsnName</replaceable
></term>
<listitem><para>specifies the name of a data source. If the <replaceable
>dsnName</replaceable> is not specified, the value is automatically
used from the current TrafCI session. If TrafCI was invoked with the <literal
>-noconnect</literal> launch parameter, you are prompted for a <replaceable
>dsnName</replaceable> value.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If TrafCI was invoked with the <literal>-noconnect</literal
> launch parameter, TrafCI prompts you for the values.</para></listitem>
<listitem><para>If the user name or password contains space or special
characters, you must put the name or password within double quotes.</para>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command creates a new connection to the Trafodion
database from the current or existing TrafCI session:</para>
<programlisting>SQL>connect
User Name: user1
Password:

Connected to Trafodion</programlisting>
</listitem>
<listitem><para>This command creates a new connection to the Trafodion
database from the current or existing TrafCI session:</para>
<programlisting>SQL>connect user1/password

Connected to Trafodion</programlisting>
</listitem>
<listitem><para>This command creates a new connection to the Trafodion
database from the current or existing TrafCI session:</para>
<programlisting>SQL>connect user1/password@host0101

Connected to Trafodion</programlisting>
</listitem>
<listitem><para>This command creates a new connection to the Trafodion
database from the current or existing TrafCI session:</para>
<programlisting>SQL>connect user2
Password:

Connected to Trafodion</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="DELAY-Command" pagebreak="yes">
<title>DELAY Command</title>
<para><indexterm><primary>DELAY command</primary></indexterm>The DELAY
command allows the TrafCI session to be in sleep mode for the specified
interval.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>DELAY <emphasis role="italic">time</emphasis
> [sec[ond][s] | min[ute][s]]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>time</replaceable></term>
<listitem><para>is an integer.</para>
<!--WRITER'S NOTE: What are the boundaries of this integer?-->
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>If seconds or minutes are not specified, the default
is seconds.</para></listitem>
<listitem><para>The maximum delay limit is 3600 seconds. You can override
this value by setting <literal>trafci.maxDelayLimit</literal> in _JAVA_OPTIONS.
The unit is seconds for <literal>trafci.maxDelayLimit</literal>.</para>
</listitem>
<listitem><para>This command does not require an SQL terminator.</para>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This DELAY command puts the TrafCI session to sleep
for 5 seconds before executing the next command:<programlisting>SQL>delay 5 secs

SQL> show views</programlisting></para></listitem>
<listitem><para>This DELAY command puts TrafCI session to sleep for
5 minutes before executing the next command, which is to exit the
session:<programlisting>SQL>delay 5 mins

SQL> exit</programlisting></para></listitem>
</itemizedlist>
</section>
</section>
<section id="i1005204" pagebreak="yes">
<title>DISCONNECT Command</title>
<para><indexterm><primary>DISCONNECT command</primary></indexterm
>The DISCONNECT command terminates the connection from the database,
not from TrafCI.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>DISCONNECT [WITH][<emphasis role="italic"
>status</emphasis>][IF{<emphasis role="italic">condition</emphasis
>}]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>status</replaceable></term>
<listitem><para>is any 1-byte integer. <replaceable>status</replaceable
> is a shell return value, and the range of allowable values is platform
dependent.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>condition</replaceable></term>
<listitem><para>is the same as the condition parameter defined for
the <phrase><xref linkend="IF_THEN" role="select:quotedtitle page"
/></phrase>. <phrase>See <xref linkend="Condition_parameter"
role="select:quotedtitle page"/>.</phrase></para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>After you disconnect from the Trafodion database,
you can still run these interface commands:<table frame="topbot"
id="Commands-That-Can-Be-Run-Without-a-Connection">
<title>Interface Commands That Can Be Run Without a Connection</title>
<tgroup cols="4" colsep="0" rowsep="0">
<colspec colname="col1" colwidth="0.88*"/>
<colspec colname="COLSPEC0" colwidth="1.00*"/>
<colspec colname="COLSPEC1" colwidth="1.02*"/>
<colspec colname="col2" colwidth="1.20*"/>
<tbody>
<row><entry>ALIAS</entry><entry>HELP</entry><entry>SAVEHIST</entry>
<entry>SET/SHOW SQLTERMINATOR</entry></row>
<row><entry>CLEAR</entry><entry>HISTORY</entry><entry>SESSION</entry>
<entry>SET/SHOW TIME</entry></row>
<row><entry>CONNECT</entry><entry>LABEL</entry><entry>SET/SHOW COLSEP</entry>
<entry>SET/SHOW TIMING</entry></row>
<row><entry>DELAY</entry><entry>LOCALHOST</entry><entry>SET/SHOW HISTOPT</entry>
<entry>SHOW ALIAS/ALIASES</entry></row>
<row><entry>DISCONNECT</entry><entry>LOG</entry><entry>SET/SHOW IDLETIMEOUT</entry>
<entry>SHOW SESSION</entry></row>
<row><entry>ENV</entry><entry>QUIT</entry><entry>SET/SHOW MARKUP</entry>
<entry>SPOOL</entry></row>
<row><entry>EXIT</entry><entry>REPEAT</entry><entry>SET/SHOW PARAM</entry>
<entry>VERSION</entry></row>
<row><entry>FC</entry><entry>RESET LASTERROR</entry><entry>SET PROMPT</entry>
<entry></entry></row>
<row><entry>GOTO</entry><entry>RESET PARAM</entry><entry>SET/SHOW
SQLPROMPT</entry><entry></entry></row>
</tbody>
</tgroup>
</table></para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>This command terminates the connection to the Trafodion database.
You can connect to the Trafodion database by using the CONNECT and
RECONNECT commands:<programlisting>SQL>disconnect

Session Disconnected. Please connect to the database by using 
connect/reconnect command.</programlisting></para>
</section>
</section>
<section condition="hidden" id="DROP_JAR_Command" pagebreak="yes">
<title>DROP JAR Command</title>
<indexterm><primary>DROP JAR command</primary></indexterm>
<para>The DROP JAR command deletes a JAR file <phrase>in the $MY_UDR_ROOT
folder</phrase> on the Trafodion database platform.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>DROP JAR <replaceable>jar-file</replaceable
> <phrase condition="hidden">[BY USER]</phrase></programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>jar-file</replaceable></term>
<listitem><para>is the name of the JAR file to be deleted.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>Deleting a JAR file might leave a dangling stored
procedure reference in the database. A dangling reference might cause
errors when an application tries to execute the stored procedure.
To prevent dangling references, drop the stored procedure from the
database before deleting the JAR file.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>This command deletes the specified JAR file <phrase>in the $MY_UDR_ROOT
folder</phrase>:</para>
<programlisting>SQL>drop jar Sales.jar</programlisting>
</section>
</section>
<section id="ENV" pagebreak="yes">
<title>ENV Command</title>
<indexterm><primary>ENV command</primary></indexterm>
<para>ENV displays attributes of the current TrafCI session. You can
also use the SESSION and SHOW SESSION commands to perform the same
function.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>ENV</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>ENV displays these attributes:</para>
<informaltable frame="none">
<tgroup cols="2" colsep="0" rowsep="0">
<colspec colname="col1" colwidth="0.53*"/>
<colspec colname="col2" colwidth="1.47*"/>
<tbody>
<row><entry>COLSEP</entry><entry>Current column separator, which is
used to control how query results are displayed. <phrase>For more
information, see <xref linkend="SET-COLSEP"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row condition="hidden"><entry>DATASOURCE</entry><entry>Name of the
data source that you entered when logging in to the database platform. <phrase
>For more information, see <xref linkend="i1008715"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row><entry>HISTOPT</entry><entry>Current history options, which controls
how the commands are added to the history buffer. <phrase>For more
information, see <xref linkend="SET-HISTOPT"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row><entry>IDLETIMEOUT</entry><entry>Current idle timeout value,
which determines when the session expires after a period of inactivity.
By default, the idle timeout is 30 minutes. <phrase>For more information,
see <xref linkend="i1006792" role="select:quotedtitle page"/> and <xref
linkend="i1008731" role="select:quotedtitle page"/>.</phrase></entry>
</row>
<row><entry>LIST_COUNT</entry><entry>Current list count, which is
the maximum number of rows that can be returned by SELECT statements.
By default, the list count is all rows. <phrase>For more information,
see <xref linkend="SET-LIST-COUNT" role="select:quotedtitle page"
/>.</phrase></entry></row>
<row><entry>LOG FILE</entry><entry>Current log file and the directory
containing the log file. By default, logging during a session is turned
off. <phrase>For more information, see <xref linkend="i1006598"
role="select:quotedtitle page"/> and <xref linkend="i1005420"
role="select:quotedtitle page"/> or <xref linkend="i1005290"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row><entry>LOG OPTIONS</entry><entry>Current logging options. By
default, logging during a session is turned off, and this attribute
does not appear in the output. <phrase>For more information, see the <xref
linkend="i1005420" role="select:quotedtitle page"/> or <xref
linkend="i1005290" role="select:quotedtitle page"/>.</phrase></entry>
</row>
<row condition="hidden"><entry>LOOK AND FEEL</entry><entry>Current
look and feel of TrafCI. This property affects the formatting of status
messages. <phrase>For more information, see <xref linkend="i1010161"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row><entry>MARKUP</entry><entry>Current markup option selected for
the session. The default option is RAW. <phrase>For more information,
see <xref linkend="SET-MARKUP" role="select:quotedtitle page"/>.</phrase
></entry></row>
<row><entry>PROMPT</entry><entry>Current prompt for the session. For
example, the default is SQL>. <phrase>For more information, see <xref
linkend="i1004585" role="select:quotedtitle page"/> and <xref
linkend="SET-PROMPT" role="select:quotedtitle page"/>.</phrase></entry>
</row>
<row condition="hidden"><entry>ROLE</entry><entry>Current role for
the session. </entry></row>
<row><entry>SCHEMA</entry><entry>Current schema. The default is USR. <phrase
>For more information, see <xref linkend="i1004597"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row><entry>SERVER</entry><entry>Host name and port number that you
entered when logging in to the database platform. <phrase>For more
information, see <xref linkend="i1008715" role="select:quotedtitle page"
/>.</phrase></entry></row>
<row condition="hidden"><entry>SERVICE NAME</entry><entry>Current
service name for the session. </entry></row>
<row><entry>SQLTERMINATOR</entry><entry>Current SQL statement terminator.
The default is a semicolon (;). <phrase>For more information, see <xref
linkend="i1004589" role="select:quotedtitle page"/> and <xref
linkend="i1005270" role="select:quotedtitle page"/>.</phrase></entry>
</row>
<row><entry>STATISTICS</entry><entry>Current setting (on or off) of
statistics. For more information, see the <xref linkend="set-statistics"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>TIME</entry><entry>Current setting (on or off) of the
local time as part of the prompt. When this command is set to on,
military time is displayed. By default, the local time is off. <phrase
>For more information, see <xref linkend="i1004585"
role="select:quotedtitle page"/> and <xref linkend="i1005242"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row><entry>TIMING</entry><entry>Current setting (on or off) of the
elapsed time. By default, the elapsed time is off. <phrase>For more
information, see <xref linkend="i1004593" role="select:quotedtitle page"
/> and <xref linkend="i1005246" role="select:quotedtitle page"/>.</phrase
></entry></row>
<row><entry>USER</entry><entry>User name that you entered when logging
in to the database platform. <phrase>For more information, see <xref
linkend="i1008715" role="select:quotedtitle page"/>.</phrase></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This ENV command displays the attributes of the current
session:</para>
<programlisting>SQL>env

COLSEP          " "
<phrase condition="hidden">DATASOURCE      TDM_Default_DataSource
</phrase>HISTOPT         DEFAULT [No expansion of script files]
IDLETIMEOUT     0 min(s) [Never Expires]
LIST_COUNT      0 [All Rows]
LOG FILE        c:\session.txt
LOG OPTIONS     APPEND,CMDTEXT ON
MARKUP          RAW
PROMPT          SQL>
SCHEMA          SEABASE
SERVER          sqws135.houston.hp.com:23400
SQLTERMINATOR   ;
STATISTICS      OFF
TIME            OFF
TIMING          OFF
USER            user1</programlisting>
</listitem>
<listitem><para>This ENV command shows the effect of setting various
session attributes:</para>
<programlisting>4:16:43 PM >env

COLSEP          " "
<phrase condition="hidden">DATASOURCE      TDM_Default_DataSource
</phrase>HISTOPT         DEFAULT [No expansion of script files]
IDLETIMEOUT     30 min(s)
LIST_COUNT      0 [All Rows]
LOG             OFF
MARKUP          RAW
PROMPT          SQL>
SCHEMA          SEABASE
SERVER          sqws135.houston.hp.com:23400
SQLTERMINATOR   ;
STATISTICS      OFF
TIME            OFF
TIMING          OFF
USER            user1

4:16:49 PM ></programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="i1014724" pagebreak="yes">
<title>EXIT Command</title>
<para><indexterm><primary>EXIT command</primary></indexterm>The EXIT
command disconnects from and exits TrafCI. EXIT can return a status
code. If no status code is specified, zero is returned by default.
In addition, a conditional statement can be appended to the command.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>EXIT [WITH][<emphasis role="italic">status</emphasis
>][IF{<emphasis role="italic">condition</emphasis>}]</programlisting
></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>status</replaceable></term>
<listitem><para>is any 1-byte integer. <replaceable>status</replaceable
> is a shell return value, and the range of allowable values is platform
dependent.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>condition</replaceable></term>
<listitem><para>is the same as the condition parameter defined for
the <phrase><xref linkend="IF_THEN" role="select:quotedtitle page"
/>. See <xref linkend="Condition_parameter"
role="select:quotedtitle page"/></phrase>.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line. The command does not
require an SQL terminator.</para>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command disconnects from and exits TrafCI, which
disappears from the screen:</para>
<programlisting>SQL>exit</programlisting>
</listitem>
<listitem><para><indexterm><primary>Conditional exit</primary>
</indexterm>In a script file, the conditional exit command causes
the script file to quit running and disconnect from and exit TrafCI
when the previously run command returns error code 4082:</para>
<programlisting>log c:\errorCode.log
select * from employee;
exit if errorcode=4082
log off</programlisting>
<para>These results are logged when error code 4082 occurs:</para>
<programlisting>SQL>select * from employee;

*** ERROR[4082] Table, view or stored procedure <phrase>TRAFODION</phrase
>.USR.EMPLOYEE
    does not exist or is inaccessible.

SQL>exit if errorcode=4082</programlisting>
</listitem>
<listitem><para>The following two examples are equivalent:</para>
<programlisting>SQL> EXIT -1 IF LASTERROR &lt;> 0
SQL> EXIT WITH -1 IF LASTERROR != 0
</programlisting>
<!--WRITER'S NOTE: Not sure if the following intro is accurate....-->
<para>This example exits TrafCI if the last error code is equal to
4082:</para>
<programlisting>SQL> EXIT WITH 82 IF LASTERROR == 4082

SQL> EXIT -- default status is 0</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="i1011597" pagebreak="yes">
<title>FC Command</title>
<para><indexterm><primary>FC command</primary></indexterm><indexterm>
<primary>SQL statement</primary><secondary>editing</secondary>
</indexterm>The FC command allows you to edit and reissue a command
in the history buffer of an TrafCI session. You can display the commands
in the history buffer by using the HISTORY command. <phrase>For information
about the history buffer, see the <xref linkend="i1013406"
role="select:quotedtitle page"/>.</phrase></para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>FC [<replaceable>text</replaceable> | [-]<replaceable
>number</replaceable>]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>text</replaceable></term>
<listitem><para>is the beginning text of a command in the history
buffer. Case is not significant in matching the text to a command. </para>
</listitem>
</varlistentry>
<varlistentry><term>[-]<replaceable>number</replaceable></term>
<listitem><para>is either a positive integer that is the ordinal number
of a command in the history buffer or a negative integer that indicates
the position of a command relative to the most recent command. </para>
</listitem>
</varlistentry>
</variablelist>
<para>Without text or number, FC retrieves the most recent command. </para>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>You cannot execute this command in a script file.
You can execute this command only at a command prompt.</para></listitem>
<listitem><para>As each line of the command is displayed, you can
m<indexterm><primary>Editing commands, FC</primary></indexterm>odify
the line by entering these editing commands (in uppercase or lowercase
letters) on the line below the displayed command line: </para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="DL1  desc list">
<colspec colwidth="0.68*"/>
<colspec colwidth="1.32*"/>
<tbody>
<row><entry>D</entry><entry>Deletes the character immediately above
the letter D. Repeat to delete more characters. </entry></row>
<row><entry>I<replaceable>characters</replaceable></entry><entry>Inserts
characters in front of the character immediately above the letter
I. </entry></row>
<row><entry>R<replaceable>characters</replaceable></entry><entry>Replaces
existing characters one-for-one with characters, beginning with the
character immediately above the letter R. </entry></row>
<row><entry><replaceable>characters</replaceable></entry><entry>Replaces
existing characters one-for-one with characters, beginning with the
first character immediately above characters. <replaceable>characters</replaceable
> must begin with a nonblank character.</entry></row>
</tbody>
</tgroup>
</informaltable>
<para>To specify more than one editing command on a line, separate
the editing commands with a double slash (//). The end of a line terminates
an editing command or a set of editing commands.</para>
<para>After you edit a line of the command, TrafCI displays the line
again and allows you to edit it again. Press Enter without specifying
editing commands to stop editing the line. If that line is the last
line of the command, pressing Enter executes the command.</para>
<para>To terminate a command without saving changes to the command,
use the double slash (//), and then press Enter. </para>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>Reexecute the most recent command that begins with
SH: </para>
<programlisting>SQL>fc sh
SQL>show schema
....</programlisting>
<para>Pressing Enter executes the SHOW SCHEMA command and displays
the current schema, PERSNL:</para>
<programlisting>SQL>fc sh
SQL>show schema
....
SCHEMA PERSNL

SQL></programlisting>
</listitem>
<listitem><para>Correct an SQL statement that you entered incorrectly
by using the delete (D) editing command:</para>
<programlisting>SQL>select * from persnl.employee;

*** ERROR[15001] A syntax error occurred at or before: 
selecct * from persnl.employee;
      ^
SQL>fc
SQL>selecct * from persnl.employee;
....    d
SQL>select * from persnl.employee;
....</programlisting>
<para>Pressing Enter executes the corrected SELECT statement.</para>
</listitem>
<listitem><para>Correct an SQL statement that you entered incorrectly
by using more than one editing command:</para>
<programlisting>SQL>selt * fromm persnl.employee;

*** ERROR[15001] A syntax error occurred at or before: 
selt * fromm persnl.employee;
   ^
SQL>fc
SQL>selt * fromm persnl.employee;
....   iec//  d
SQL>select * from persnl.employee;
....</programlisting>
<para>Pressing Enter executes the corrected SELECT statement.</para>
</listitem>
<listitem><para>Modify a previously executed statement by replacing
a value in the WHERE clause with another value:</para>
<programlisting>SQL>select first_name, last_name
+>from persnl.employee
+>where jobcode=111;

--- 0 row(s) selected.

SQL>fc
SQL>select first_name, last_name
....
SQL>from persnl.employee
....
SQL>where jobcode=111;
                  450
....
SQL>where jobcode=450;
....</programlisting>
<para>Pressing Enter lists the first and last names of all of the
employees whose job code is 450.</para>
</listitem>
<listitem><para>Modify a previously executed statement by replacing
a column name in the select list with another column name:</para>
<programlisting>SQL>select first_name, last_name
+>from persnl.employee
+>where jobcode=450;

FIRST_NAME      LAST_NAME            
--------------- -------------------- 
MANFRED         CONRAD               
WALTER          LANCASTER            
JOHN            JONES                
KARL            HELMSTED             
THOMAS          SPINNER              

--- 5 row(s) selected.

SQL>fc
SQL>select first_name, last_name
....       R   empnum,
SQL>select     empnum, last_name
....
SQL>from persnl.employee
....
SQL>where jobcode=450;
....</programlisting>
<para>Pressing Enter lists the employee number and last names of all
employees whose job code is 450:</para>
<programlisting>EMPNUM LAST_NAME            

------ -------------------- 
   180 CONRAD               
   215 LANCASTER            
   216 JONES                
   225 HELMSTED             
   232 SPINNER              

--- 5 row(s) selected.

SQL></programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="get-statistics" pagebreak="yes">
<title>GET STATISTICS Command</title>
<para><indexterm><primary>GET STATISTICS command</primary></indexterm
><indexterm><primary>SQL statement</primary><secondary>editing</secondary>
</indexterm>The GET STATISTICS command returns formatted statistics
for the last executed SQL statement. </para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>GET STATISTICS</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<bridgehead>Description of Returned Values:</bridgehead>
<variablelist>
<varlistentry><term><replaceable>Records Accessed</replaceable></term>
<listitem><para>number of rows returned by disk process to EID (Executor
In Disk process).</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>Records Used</replaceable></term>
<listitem><para>number of rows returned by EID after selection.</para>
</listitem>
</varlistentry>
<varlistentry><term><replaceable>Disk IOs</replaceable></term>
<listitem><para>number of actual disk IOs done by disk process.</para>
</listitem>
</varlistentry>
<varlistentry><term><replaceable>Message Count</replaceable></term>
<listitem><para>number of messages sent/received between filesystem
and disk process.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>Message Bytes</replaceable></term>
<listitem><para>number of message bytes sent/received between filesystem
and disk process.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>Lock Escl</replaceable></term>
<listitem><para>number of lock escalations.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>Lock Wait</replaceable></term>
<listitem><para>number of lock waits.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>Disk Process Busy Time</replaceable
></term>
<listitem><para>cpu time for disk process processes for the specified
table.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<para>The command requires an SQL terminator.</para>
</section>
<section>
<title>Examples</title>
<programlisting>SQL>select * from job;

JOBCODE JOBDESC
------- ------------------
    100 MANAGER
   1234 ENGINEER
    450 PROGRAMMER
    900 SECRETARY
    300 SALESREP
    500 ACCOUNTANT
    400 SYSTEM ANALYST
    250 ASSEMBLER
    420 ENGINEER
    600 ADMINISTRATOR
    200 PRODUCTION SUPV

--- 11 row(s) selected.

SQL> get statistics;

Start Time             2014/04/18 21:45:34.082329
End Time               2014/04/18 21:45:34.300265
Elapsed Time                      00:00:00.217936
Compile Time                      00:00:00.002423
Execution Time                    00:00:00.218750


Table Name   Records  Records  Disk  Message  Message  Lock  Lock  Disk Process
            Accessed     Used  I/Os    Count    Bytes  Escl  Wait     Busy Time
<phrase>TRAFODION</phrase>.TOI.JOB       
                   2        2     0        4    15232     0     0           363

--- SQL operation complete.

</programlisting>
</section>
</section>
<section id="GOTO" pagebreak="yes">
<title>GOTO Command</title>
<para><indexterm><primary>GOTO command</primary></indexterm>The GOTO
command allows you to jump to a designated point in the command history.
The point in the command history is designated by a LABEL command.
All commands executed after a GOTO statement are ignored until the
specified label is set. To set a label, use the <phrase><xref
linkend="LABEL" role="select:quotedtitle page"/></phrase>.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>GOTO {<emphasis role="italic">label</emphasis
>}</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>label</replaceable></term>
<listitem><para>is a string of characters without quotes and spaces,
or a quoted string.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line.</para>
</listitem>
<listitem><para>The GOTO command cannot currently jump back in the
command history; it is a forward-only command.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>These examples show the use of the GOTO and LABEL commands:</para>
<!--WRITER'S NOTE: The intro above could be better. It might explain what happens to the commands that are skipped. Do they get executed after the LABEL command is executed? And how is this useful?-->
<programlisting>SQL> GOTO ViewManagers
SQL> SELECT * FROM Employees;	-- skipped
SQL> SHOW RECCOUNT;	           -- skipped
SQL> LABEL ViewManagers
SQL> SELECT * FROM Managers;
SQL> GOTO “View Customers”
SQL> SELECT * FROM Invoices;	  -- skipped
SQL> LABEL “View Customers”
SQL> SELECT * FROM Customers;
</programlisting>
</section>
</section>
<section id="HELP" pagebreak="yes">
<title>HELP Command</title>
<indexterm><primary>HELP command</primary></indexterm>
<para>The HELP command displays help text for the interface commands.
See <xref linkend="i1008451" role="select:label page"/> for descriptions
of the interface commands.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>HELP [<replaceable>command-name</replaceable
>]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>command-name</replaceable></term>
<listitem><para>is the name of an interface command. If you do not
specify a command, TrafCI returns a list of all interface commands.
If you specify SET, TrafCI returns a list of all SET commands. If
you specify SHOW, TrafCI returns a list of all SHOW commands.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line. The command does not
require an SQL terminator.</para>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This HELP command lists all the interface commands
that are supported:</para>
<programlisting>SQL>help</programlisting>
</listitem>
<listitem><para>This HELP command lists all the SET commands that
are supported:</para>
<programlisting>SQL>help set</programlisting>
</listitem>
<listitem><para>This HELP command lists all the SHOW commands that
are supported:</para>
<programlisting>SQL>help show</programlisting>
</listitem>
<listitem><para>This HELP command shows help text for SET IDLETIMEOUT:</para>
<programlisting>SQL>help set idletimeout</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="i1013406" pagebreak="yes">
<title>HISTORY Command</title>
<para><indexterm><primary>HISTORY command</primary></indexterm>The
HISTORY command displays recently executed commands, identifying each
command by a number that you can use to reexecute or edit the command.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>HISTORY [<replaceable>number</replaceable
>]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>number</replaceable></term>
<listitem><para>is the number of commands to display. The default
number is 10. The maximum number is 100.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>You can use the FC command to edit and reexecute a
command in the history buffer, or use the REPEAT command to reexecute
a command without modifying it. <phrase>See the <xref linkend="i1011597"
role="select:quotedtitle page"/> or the <xref linkend="i1014853"
role="select:quotedtitle page"/>.</phrase></para></listitem>
</itemizedlist>
</section>
<section>
<title>Example</title>
<para>Display the three most recent commands and use FC to redisplay
one:</para>
<programlisting>SQL>history 3
14>      set schema sales;
15>      show tables
16>      show views

SQL>fc 14
SQL>set schema sales
....</programlisting>
<para>Now you can use the edit capabilities of FC to modify and execute
a different SET SCHEMA statement.</para>
</section>
</section>
<section id="IF_THEN" pagebreak="yes">
<title>IF...THEN Command</title>
<para><indexterm><primary>IF...THEN command</primary></indexterm>IF...THEN
statements allow for the conditional execution of actions. If the
condition is met, the action is executed; otherwise, no action is
taken.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>IF {<emphasis role="italic">condition</emphasis
>} THEN {<emphasis role="italic">action</emphasis>} {<emphasis
role="italic">SQL-terminator</emphasis>}</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<section id="Condition_parameter">
<title>Condition Parameter</title>
<para>The condition parameter (<replaceable>condition</replaceable
>) is a Boolean statement structured as follows:</para>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>{<emphasis role="italic">variable-name</emphasis
>|<emphasis role="italic">value</emphasis>}{<emphasis role="italic"
>operator</emphasis>}{<emphasis role="italic">variable-name</emphasis
>|<emphasis role="italic">value</emphasis>}</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>variable-name</replaceable></term>
<listitem><para>is one of:</para>
<programlisting>{ LASTERROR
| RECCOUNT
| ACTIVITYCOUNT
| ERRORCODE
| [%]any ENV variable|any SQL parameter }</programlisting>
</listitem>
</varlistentry>
<varlistentry><term><replaceable>value</replaceable></term>
<listitem><para>is any integer or a quoted string, where the quoted
string is any non-quote character. \ is the optional escape character.</para>
</listitem>
</varlistentry>
<varlistentry><term><replaceable>operator</replaceable></term>
<listitem><para>is one of:</para>
<informaltable frame="topbot">
<tgroup cols="2" colsep="0" rowsep="0">
<colspec colname="col1" colwidth="0.52*"/>
<colspec colname="col2" colwidth="1.48*"/>
<thead>
<row rowsep="1" valign="bottom"><entry align="left" valign="bottom"
>Operator</entry><entry align="left" valign="bottom">Meaning</entry>
</row>
</thead>
<tbody>
<row><entry><literal>== | =</literal></entry><entry>equal to</entry>
</row>
<row><entry><literal>&lt;> | != | ~= | ^=</literal></entry><entry
>not equal to</entry></row>
<row><entry><literal>></literal></entry><entry>greater than</entry>
</row>
<row><entry><literal>>=</literal></entry><entry>greater than or equal
to</entry></row>
<row><entry><literal>&lt;</literal></entry><entry>less than</entry>
</row>
<row><entry><literal>&lt;=</literal></entry><entry>less than or equal
to</entry></row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Action Parameter</title>
<para>The action parameter (<replaceable>action</replaceable>) is
any interface or SQL command.</para>
</section>
<section>
<title>SQL Terminator</title>
<para>The SQL terminator (<replaceable>SQL-terminator</replaceable
>) is the default terminator (;) or a string value defined for the
statement terminator by the <phrase><xref linkend="i1005238"
role="select:quotedtitle page"/>. See <xref linkend="i1004589"
role="select:quotedtitle page"/>.</phrase></para>
</section>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>IF...THEN is itself an action. Thus, nested IF...THEN
statements are allowed.</para></listitem>
<listitem><para>An action must end with the SQL terminator, even if
the action is an interface command.</para></listitem>
</itemizedlist>
</section>
<section pagebreak="yes">
<title>Examples</title>
<para>These commands show multiple examples of IF...THEN statements:</para>
<!--WRITER'S NOTE: Weak introduction. Consider separating the examples and including multiple introductions.-->
<programlisting>SQL> INVOKE Employees

SQL> -- ERROR 4082 means the table does not exist

SQL> IF ERRORCODE != 4082 THEN GOTO BeginPrepare

SQL> CREATE TABLE Employees(SSN INT PRIMARY KEY NOT NULL NOT DROPPABLE, FName 
VARCHAR(50),
LName VARCHAR(50), HireDate DATE DEFAULT CURRENT_DATE);

SQL> LABEL BeginPrepare

SQL> PREPARE empSelect FROM 
+> SELECT * FROM 
+> Employees
+> WHERE SSN=?empSSN;

SQL> IF USER == “alice” THEN SET PARAM ?empSSN 987654321;

SQL> IF %USER == “bob” THEN SET PARAM ?empSSN 123456789;

SQL> execute empSelect

SQL> IF USER == “alice” THEN 
+> IF ACTIVITYCOUNT == 0 THEN GOTO insertAlice;

SQL> IF USER == “bob” THEN IF ACTIVITYCOUNT == 0 THEN GOTO insertBob;

SQL> EXIT

SQL> LABEL insertAlice

SQL> INSERT INTO Employees(SSN, FName, LName) VALUES(987654321, 'Alice', 
'Smith');

SQL> EXIT

SQL> LABEL insertBob

SQL> INSERT INTO Employees(SSN, FName, LName) VALUES(123456789, 'Bob', 
'Smith');

SQL> EXIT
</programlisting>
</section>
</section>
<section id="LABEL" pagebreak="yes">
<title>LABEL Command</title>
<para><indexterm><primary>LABEL command</primary></indexterm>The LABEL
command marks a point in the command history that you can jump to
by using the GOTO command. <phrase>For more information, see the <xref
linkend="GOTO" role="select:quotedtitle page"/>.</phrase></para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>LABEL {<emphasis role="italic">label</emphasis
>}</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>label</replaceable></term>
<listitem><para>is a string of characters without quotes and spaces,
or a quoted string.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line.</para>
</section>
<section>
<title>Examples</title>
<para>This command creates a label using a string of characters:</para>
<programlisting>SQL> LABEL MyNewLabel</programlisting>
<para>This command creates a label using a quoted string:</para>
<programlisting>SQL> LABEL "Trafodion Label"</programlisting>
</section>
</section>
<section condition="hidden" id="LIST_JAR_Command" pagebreak="yes">
<title>LIST JAR Command</title>
<para><indexterm><primary>LIST JAR command</primary></indexterm>The
LIST JAR command displays information about a JAR file (or multiple
JAR files) <phrase>in the $MY_UDR_ROOT folder</phrase> on the Trafodion
database platform.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>LIST {JAR <replaceable>jar-file</replaceable
> | JARS} <phrase condition="hidden">[BY USER]</phrase></programlisting
></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>jar-file</replaceable></term>
<listitem><para>is the name of a JAR file.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line. The command does not
require an SQL terminator.</para>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command displays information about the specified
JAR file, <filename>Sales.jar</filename>, <phrase>in the $MY_UDR_ROOT
folder</phrase> on the Trafodion database platform:</para>
<programlisting>SQL>list jar Sales.jar

FileName                      FileSize FileLastModified 
--------- ---------------------------- ---------------- 
Sales.jar                         2946 Mon Dec 13 20:54 

--- SQL operation complete.</programlisting>
</listitem>
<listitem><para>This command displays information about all the JAR
files <phrase>in the $MY_UDR_ROOT folder</phrase> on the Trafodion
database platform:</para>
<programlisting>SQL>list jars

FileName                         FileSize FileLastModified 
------------ ---------------------------- ---------------- 
Sales.jar                            2946 Mon Dec 13 20:54 
hpt4jdbc.jar                       391010 Fri Jul 16 15:17 

--- SQL operation complete.</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="LOCALHOST" pagebreak="yes">
<title>LOCALHOST Command</title>
<para><indexterm><primary>LOCALHOST command</primary></indexterm>The
LOCALHOST command allows you to execute client machine commands. </para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>LOCALHOST | LH  &lt;client m/c commands></programlisting
></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>The LOCALHOST command has a limitation. When input
is entered for the operating system commands (for example, date, time,
and cmd), the input is not visible until you hit the <literal>enter</literal
> key.</para></listitem>
<listitem><para>If the SET TIMING is set to ON, the elapsed time information
is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>If you are using a Windows system, <literal>dir</literal
> lists the contents of the directory name. Similarly, if you are
on a UNIX system you enter LOCALHOST LS to display the contents of
the folder. </para>
<programlisting>SQL>LOCALHOST dir
Volume in drive C is E-Client
Volume Serial Number is DC4F-5B3B

Directory of c:\Program Files (x86)\Apache Software Foundation\Apache Trafodion Command Interface\bin

05/11/2014 01:17 PM  &lt;DIR>
05/11/2014 01:17 PM  &lt;DIR>
05/16/2014 09:47 AM       1,042 trafci-perl.pl   
05/16/2014 09:47 AM       1,017 trafci-python.pl  
05/16/2014 09:47 AM         752 trafci.cmd 
05/16/2014 09:47 AM       1,416 trafci.pl 
05/16/2014 09:47 AM       2,388 trafci.py 
05/16/2014 09:47 AM       3,003 trafci.sh 
          6 Files(s)    19,491 bytes 
          2 Dir (s) 57,686,646,784 bytes free 
        
SQL> LH mkdir c:\trafci -> Will create a directory c:\trafci on your
local machine 
</programlisting>
</listitem>
<listitem><para>This command displays the elapsed time information
because the SET TIMING command is set to ON:</para>
<programlisting>SQL>set timing on

SQL>localhost ls
trafci-perl.pl
trafci-python.py
trafci.cmd
trafci.pl
trafci.py
trafci.sh

Elapsed :00:00:00.078
</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="i1005420" pagebreak="yes">
<title>LOG Command</title>
<para><indexterm><primary>LOG command</primary></indexterm>The LOG
command logs the entered commands and their output from TrafCI to
a log file. If this is an obey script file, then the command text
from the obey script file is shown on the console.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>LOG { ON [CLEAR, QUIET, CMDTEXT {ON | OFF}] 
    | <replaceable>log-file</replaceable> [CLEAR, QUIET, CMDTEXT {ON | OFF}]  
    | OFF }</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term>ON</term>
<listitem><para>starts the logging process and records information
in the <literal>sqlspool.lst</literal> file in the <literal>bin</literal
> directory.</para></listitem>
</varlistentry>
<varlistentry><term>CLEAR</term>
<listitem><para>instructs TrafCI to clear the contents of the <literal
>sqlspool.lst</literal> file before logging new information to the
file.</para></listitem>
</varlistentry>
<varlistentry><term>QUIET</term>
<listitem><para>specifies that the command text is displayed on the
screen, but the results of the command are written only to the log
file and not to the screen. </para></listitem>
</varlistentry>
<varlistentry><term>CMDTEXT ON</term>
<listitem><para>specifies that the command text and the log header
are displayed in the log file.</para></listitem>
</varlistentry>
<varlistentry><term>CMDTEXT OFF</term>
<listitem><para>specifies that the command text and the log header
are not displayed in the log file.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>log-file</replaceable></term>
<listitem><para>is the name of a log file into which TrafCI records
the entered commands and their output. If you want the log file to
exist outside the local directory where you launch TrafCI (by default,
the <literal>bin</literal> directory), specify the full directory
path of the log file. The log file does not need to exist, but the
specified directory must exist before you execute the LOG command. </para>
</listitem>
</varlistentry>
<varlistentry><term><replaceable>log-file</replaceable> CLEAR</term>
<listitem><para>instructs TrafCI to clear the contents of the specified <replaceable
>log-file</replaceable> before logging new information to the file.</para>
</listitem>
</varlistentry>
<varlistentry><term>OFF</term>
<listitem><para>stops the logging process.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>Use a unique name for each log file to avoid writing
information from different TrafCI sessions into the same log file.</para>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command starts the logging process and records
information to the <literal>sqlspool.lst</literal> file in the <literal
>bin</literal> directory:</para>
<programlisting>SQL>log on</programlisting>
</listitem>
<listitem><para>This command starts the logging process and appends
new information to an existing log file, <literal>persnl_updates.log</literal
>, in the local directory (the same directory where you are running
TrafCI):</para>
<programlisting>SQL>log persnl_updates.log</programlisting>
</listitem>
<listitem><para>This command starts the logging process and appends
new information to a log file, <literal>sales_updates.log</literal
>, in the specified directory on a Windows workstation:</para>
<programlisting>SQL>log c:\log_files\sales_updates.log</programlisting>
</listitem>
<listitem><para>This command starts the logging process and appends
new information to a log file, <literal>sales_updates.log</literal
>, in the specified directory on a Linux or UNIX workstation:</para>
<programlisting>SQL>log ./log_files/sales_updates.log</programlisting>
</listitem>
<listitem><para>This command starts the logging process and clears
existing information from the log file before logging new information
to the file:</para>
<programlisting>SQL>log persnl_ddl.log clear</programlisting>
</listitem>
<listitem><para>This command start the logging process, clears existing
information from the log file, and specifies that the command text
and log header is not displayed in the log file:</para>
<programlisting>SQL>log c:\temp\a.txt clear, cmdtext off

SQL>select * from <phrase>trafodion</phrase>.toi.job
+>;

JOBCODE JOBDESC
------- ------------------
    100 MANAGER
    450 PROGRAMMER
    900 SECRETARY
   300 SALESREP
    500 ACCOUNTANT
    400 SYSTEM ANALYST
    250 ASSEMBLER
    420 ENGINEER
    600 ADMINISTRATOR
    200 PRODUCTION SUPV

--- 10 row(s) selected.

SQL> log off
 
Output of c:\temp\a.txt
====================
JOBCODE JOBDESC
------- ------------------
    100 MANAGER
    450 PROGRAMMER
    900 SECRETARY
    300 SALESREP
    500 ACCOUNTANT
    400 SYSTEM ANALYST
    250 ASSEMBLER
    420 ENGINEER
    600 ADMINISTRATOR
    200 PRODUCTION SUPV
 
--- 10 row(s) selected
</programlisting>
</listitem>
<listitem><para>This command start the logging process, clears existing
information from the log file, specifies that no output appears on
the console window, and the quiet option is enabled:</para>
<programlisting>SQL>log c:\temp\b.txt clear, cmdtext off, quiet

SQL>select * 
+>from <phrase>trafodion</phrase>.toi.job;

SQL> log off
 
Output of c:\temp\b.txt
====================
JOBCODE JOBDESC
------- ------------------
    100 MANAGER
    450 PROGRAMMER
    900 SECRETARY
    300 SALESREP
    500 ACCOUNTANT
    400 SYSTEM ANALYST
    250 ASSEMBLER
    420 ENGINEER
    600 ADMINISTRATOR
    200 PRODUCTION SUPV
 
--- 10 row(s) selected
</programlisting>
<para>This command stops the logging process:</para>
<programlisting>SQL>log off</programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref linkend="i1006598"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section condition="hidden" id="MODIFY-LIBRARY-Command" pagebreak="yes">
<title>MODIFY LIBRARY Command</title>
<para><indexterm><primary>MODIFY LIBRARY command</primary></indexterm
>The MODIFY LIBRARY command uploads a JAR file from the client workstation
to the Trafodion database platform and then alters the specified library
object to point to the new JAR file.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>MODIFY LIBRARY [[<replaceable>catalog-name</replaceable
>.]<replaceable>schema-name</replaceable>.]<replaceable>library-name</replaceable
> [<replaceable>jar-file-directory</replaceable>]<replaceable>jar-file-name</replaceable
> </programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term>[[<replaceable>catalog-name</replaceable>.]<replaceable
>schema-name</replaceable>.]<replaceable>library-name</replaceable
></term>
<listitem><para>specifies the name of the library object to be altered.
If you do not fully qualify the library name with catalog and schema
names, TrafCI uses the current catalog and schema.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>jar-file-directory</replaceable></term>
<listitem><para>is the directory of the JAR file on the client workstation.
If you omit the directory, TrafCI searches for the JAR file in the
same location as the TrafCI Windows launch file, <filename>trafci.cmd</filename
>, in <filename class="directory">C:\Program Files (x86)\Apache Software Foundation\Apache Trafodion
Command Interface\bin</filename>.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>jar-file-name</replaceable></term>
<listitem><para>is the name of the JAR file to be uploaded.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>To run this command, you must have these privileges: </para>
<itemizedlist>
<listitem><para>You must have been granted the UPDATE privilege for
the library. For more information, see grant or revoke privileges
for libraries in the <citetitle>HP Database Manager (HPDM) User Guide</citetitle
> or the GRANT LIBRARY statement in the <citetitle>Trafodion SQL Reference
Manual</citetitle>.</para></listitem>
<listitem><para>You must either be the owner of the schema where you
will alter the library or have the ALTER_LIBRARY privilege for the
schema. The schema owner can grant such a schema-level privilege to
other users or roles. For more information, see grant or revoke privileges
for schemas in the <citetitle>HP Database Manager (HPDM) User Guide</citetitle
> or the GRANT SCHEMA statement in the <citetitle>Trafodion SQL Reference
Manual</citetitle>.</para></listitem>
</itemizedlist>
</listitem>
<listitem><para>The JAR file that you select for the library must
contain valid Java bytecode.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>This command uploads a JAR file in the <filename class="directory"
>c:\myjars</filename> directory to the Trafodion database platform
and then alters the PAYROLL library to point to the new JAR file:</para>
<programlisting>SQL>modify library <phrase>trafodion</phrase>.persnl.payroll c:\myjars\Payroll2.jar</programlisting>
</section>
</section>
<section id="i1005214" pagebreak="yes">
<title>OBEY Command</title>
<para><indexterm><primary>OBEY command</primary></indexterm>The OBEY
command executes the SQL statements and interface commands of a specified
script file or an entire directory. This command accepts a single
filename or a filename with a wild-card pattern specified. Executing
the OBEY command without optional parameters prompts you to enter
a filename. If a filename is not specified, then *.sql is used.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>OBEY {<replaceable>script-file</replaceable
> | <replaceable>wild-card-pattern</replaceable>} [(<replaceable>section-name</replaceable
>)]
</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>script-file</replaceable></term>
<listitem><para>is the name of an ASCII text file that contains SQL
statements, interface commands, and comments. If the script file exists
outside the local directory where you launch TrafCI (by default, the <literal
>bin</literal> directory), specify the full directory path of the
script file.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>wild-card-pattern</replaceable></term>
<listitem><para>is a character string used to search for script files
with names that match the character string. <replaceable>wild-card-pattern</replaceable
> matches a string, depending on the operating system for case-sensitivity,
unless you enclose it within double quotes. To look for similar values,
specify only part of the characters of <replaceable>wild-card-pattern</replaceable
> combined with these <indexterm><primary>Wild-card characters</primary>
</indexterm>wild-card characters:</para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="DL1  desc list">
<colspec colwidth="0.16*"/>
<colspec colwidth="1.84*"/>
<tbody>
<row><entry>*</entry><entry>Use an asterisk (*) to indicate zero or
more characters of any type. For example, <literal>*art*</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal>.</entry></row>
<row><entry>?</entry><entry>Use a question mark (?) to indicate any
single character. For example, <literal>boo?</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. </entry></row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</varlistentry>
<varlistentry><term>(<replaceable>section-name</replaceable>)</term>
<listitem><para>is the name of a section within the <replaceable>script-file</replaceable
> to execute. If you specify <replaceable>section-name</replaceable
>, the OBEY command executes the commands between the header line
for the specified section and the header line for the next section
(or the end of the script file). If you omit <replaceable>section-name</replaceable
>, the OBEY command executes the entire script file. <phrase>For more
information, see <xref linkend="SectionHeaders"
role="select:quotedtitle page"/>.</phrase></para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>Put a space between OBEY and the first character of
the file name.</para></listitem>
<listitem><para>You can execute this command in a script file.</para>
</listitem>
<listitem><para>Before putting dependent SQL statements across multiple
files, consider the order of the file execution. If a directory is
not passed to the OBEY command, the file or wild card is assumed to
be in the current working directory.</para></listitem>
<listitem><para>If the (*) is issued in the OBEY command, all files
are executed in the current directory. Some of the files in the directory
could be binary files. The OBEY command tries to read those binary
files and junk or invalid characters are displayed on the console.
For example, this command causes  invalid characters to be displayed
on the console:</para>
<programlisting>SQL> obey C:\trafci\bin\*</programlisting>
</listitem>
<listitem><para>OBEY detects recursive obey files (for example, an
sql file that calls OBEY on itself) and prevents infinite loops using
a max depth environment variable. If no variable is passed to the
JVM, the default depth is set to 10. To change this depth (for example
to a value of 20), pass a Java environment variable as follows:</para>
<programlisting>-Dtrafci.obeydepth=20</programlisting>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This OBEY command runs the script file from the local
directory (the same directory where you are running TrafCI):</para>
<programlisting>SQL>obey ddl.sql</programlisting>
</listitem>
<listitem><para>This OBEY command runs the script file in the specified
directory on Windows.</para>
<programlisting>SQL>obey c:\my_files\ddl.sql</programlisting>
</listitem>
<listitem><para>This OBEY command runs the script file in the specified
directory on a Linux or UNIX workstation:</para>
<programlisting>SQL>obey ./my_files/ddl.sql</programlisting>
</listitem>
<listitem><para>This sample file contains sections to be used in conjunction
with the OBEY command:</para>
<programlisting>?section droptable
DROP TABLE COURSE

?section create
CREATE TABLE COURSE
(
  CNO     VARCHAR(3)       NOT NULL,
  CNAME   VARCHAR(22)      NOT NULL,
  CDESCP  VARCHAR(25)      NOT NULL,
  CRED    INT,
  CLABFEE NUMERIC(5,2),
  CDEPT   VARCHAR(4)       NOT NULL,
primary key (cno)
) ;

?section insert
INSERT INTO COURSE VALUES
     ('C11', 'INTRO TO CS','FOR ROOKIES',3, 100, 'CIS');

INSERT INTO COURSE VALUES
     ('C22', 'DATA STRUCTURES','VERY USEFUL',3, 50, 'CIS');

INSERT INTO COURSE VALUES
     ('C33', 'DISCRETE MATHEMATICS',
      'ABSOLUTELY NECESSARY',3, 0,'CIS');

?section select
SELECT * FROM course;

?section delete
purgedata course;

</programlisting>
<para>To run only the commands in section create, execute the following
:</para>
<programlisting>SQL>obey C:\Command Interfaces\course.sql (create)

SQL>?section create

SQL>CREATE TABLE COURSE
+>(
+>   CNO     VARCHAR(3)       NOT NULL,
+>   CNAME   VARCHAR(22)      NOT NULL,
+>   CDESCP  VARCHAR(25)      NOT NULL,   
+>   CRED    INT,
+>   CLABFEE NUMERIC(5,2),
+>   CDEPT   VARCHAR(4)       NOT NULL,
+> primary key (cno)
+>) ;

--- SQL Operation complete.

</programlisting>
<para>To run only the commands in the insert section, execute the
following :</para>
<programlisting>SQL>obey C:\Command Interfaces\course.sql (insert)
SQL>?section insert

SQL>INSERT INTO COURSE VALUES
+>   ('C11', 'INTRO TO CS','FOR ROOKIES',3, 100, 'CIS');

--- 1 row(s) inserted.

SQL>INSERT INTO COURSE VALUES

+>    ('C22', 'DATA STRUCTURES','VERY USEFUL',3, 50, 'CIS');

--- 1 row(s) inserted.

SQL>INSERT INTO COURSE VALUES

+>    ('C33', 'DISCRETE MATHEMATICS',
       'ABSOLUTELY NECESSARY',3, 0, 'CIS');

--- 1 row(s) inserted.
</programlisting>
<para>This command executes all files with .sql extension:</para>
<programlisting>SQL> OBEY c:\trafci\*.sql;
SQL> OBEY c:\trafci
</programlisting>
<para>This command executes all files beginning with the word “script”
and contains one character after the word script and ends with .sql
extenstion. For example: <literal>script1.sql,script2.sql,scriptZ.sql</literal
>and so on:</para>
<programlisting>SQL> OBEY C:\trafci\script?.sql
</programlisting>
<para>This command executes all files that contain the word “test”.
This includes the files that do not end with .sql extension</para>
<programlisting>SQL> OBEY C:\trafci\*test*
</programlisting>
<para>This command executes all files that begin with the word “script”
and contains one character after the word “script” and ends with an
extenstion prefixed by a dot. For example: <literal>script1.sql, script2.bat,
scriptZ.txt</literal>and so on.</para>
<programlisting>SQL> OBEY C:\trafci\script?.*
</programlisting>
<para>This command executes all files that have .txt extension in
the current directory, the directory in which the command interface
was launched.</para>
<programlisting>SQL> OBEY *.txt;</programlisting>
<para>This command prompts the user to enter the script filename or
a pattern. The default value  *.sql </para>
<programlisting>SQL> OBEY;
 Enter the script filename [*.sql]:
</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="i1005218" pagebreak="yes">
<title>PRUN Command</title>
<para><indexterm><primary>PRUN command</primary></indexterm>The PRUN
command runs script files in parallel.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>PRUN	[ {-d  | -defaults} ]  |  
PRUN [ {-sd  | -scriptsdir} <replaceable>scripts-directory</replaceable
>]
     [ {-e   | -extension} <replaceable>file-extension</replaceable
>] 
     [ {-ld  | -logsdir} <replaceable>log-directory</replaceable>] 
     [ {-o   | -overwrite} {y | n}]
     [ {-c   | -connections} <replaceable>num</replaceable>]
</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term>-d  | -defaults</term>
<listitem><para>Specify this option to have PRUN use these default
settings:</para>
<table frame="topbot">
<title>PRUN Default Settings</title>
<tgroup cols="2" colsep="0" rowsep="0">
<colspec colname="col1" colwidth="0.48*"/>
<colspec colname="col2" colwidth="1.52*"/>
<thead>
<row rowsep="1" valign="bottom"><entry align="left" valign="bottom"
>Parameter</entry><entry align="left" valign="bottom">Default Setting</entry>
</row>
</thead>
<tbody>
<row><entry><literal>-sd  | -scriptsdir</literal></entry><entry>PRUN
searches for the script files in the same directory as the <filename
>trafci.sh</filename> or <filename>trafci.cmd</filename> file (<filename
><replaceable>trafci-installation-directory</replaceable>/trafci/bin</filename
> or <filename><replaceable>trafci-installation-directory</replaceable
>\trafci\bin</filename>).</entry></row>
<row><entry><literal>-e   | -extension</literal></entry><entry>The
file extension is <filename>.sql</filename>.</entry></row>
<row><entry><literal>-ld  | -logsdir</literal></entry><entry>PRUN
places the log files in the same directory as the script files.</entry>
</row>
<row><entry><literal>-o   | -overwrite</literal></entry><entry>No
overwriting occurs. PRUN keeps the original information in the log
files and appends new information at the end of each file.</entry></row>
<row><entry><literal>-c   | -connections</literal></entry><entry>PRUN
uses two connections.</entry></row>
</tbody>
</tgroup>
</table>
</listitem>
</varlistentry>
<varlistentry><term>{-sd  | -scriptsdir} <replaceable>scripts-directory</replaceable
></term>
<listitem><para>In this directory, PRUN processes every file with
the specified file extension. If you do not specify a directory or
if you specify an invalid directory, an error message occurs, and
you are prompted to reenter the directory. Before running PRUN, verify
that this directory contains valid script files.</para></listitem>
</varlistentry>
<varlistentry><term>{-e   | -extension} <replaceable>file-extension</replaceable
></term>
<listitem><para>Specify the file extension of the script files. The
default is <filename>.sql</filename>.</para></listitem>
</varlistentry>
<varlistentry><term>{-ld  | -logsdir} <replaceable>log-directory</replaceable
></term>
<listitem><para><indexterm><primary>Log files</primary><secondary
>PRUN operation</secondary></indexterm>In this directory, PRUN creates
a log file for each script file by appending the <literal>.log</literal
> extension to the name of the script file. If you do not specify
a log file directory, PRUN places the log files in the same directory
as the script files.</para></listitem>
</varlistentry>
<varlistentry><term>{-o   | -overwrite} {y | n}</term>
<listitem><para>If you specify <literal>y</literal>, PRUN overwrites
the contents of existing log files. By default, PRUN keeps the original
information in the log files and appends new information at the end
of each file.</para></listitem>
</varlistentry>
<varlistentry><term>{-c   | -connections} <replaceable>num</replaceable
></term>
<listitem><para>Enter a number for the maximum number of connections<phrase
condition="hidden"> for the data sources. The data source should support
this number of connections.</phrase><phrase> If you do not specify
the maximum number of connections, PRUN uses two connections.</phrase
></para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If you execute the PRUN command without any arguments,
TrafCI prompts you for the PRUN arguments. If you specify one or more
options, the PRUN command runs without prompting you for more input.
In the non-interactive mode, if any options are not specified, PRUN
uses the default values.</para></listitem>
<listitem><para>The <literal>-d</literal> or <literal>-defaults</literal
> option cannot be specified with any other option.</para></listitem>
<listitem><para>The PRUN log files also contain the log end time.</para>
</listitem>
<listitem><para>PRUN does not support the SPOOL or LOG commands. Those
commands are ignored in PRUN script files.</para></listitem>
<listitem><para>The environment values from the main session (which
are available through the SET commands) are propagated to new sessions
started via PRUN. However, prepared statements and parameters are
bound only to the main user session.</para></listitem>
<listitem><para>For a summary of all errors and warnings that occurred
during the PRUN operation, go to the <literal>error</literal> subdirectory
in the same directory as the log files (for example, <literal>C:\log\error</literal
>) and open the <literal>prun.err.log</literal> summary file.</para>
</listitem>
<listitem><para>For details about the errors that occurred during
the execution of a script file, open each individual log file (<literal
><replaceable>script-file</replaceable>.sql.log</literal>).</para>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>To use PRUN, enter the PRUN command in the TrafCI
session:</para>
<programlisting>SQL>prun
Enter * as input to stop the current prun session
--------------------------------------------------

Enter the scripts directory             :     c:\ddl_scripts
Enter the script file extension[sql]    :     
Enter the logs directory[scripts dir]   :     c:\log
Overwrite the log files (y/n)[n]?       :     y
Enter the number of connections(2-248)[2]:    3
</programlisting>
<para>After you enter the number of connections, PRUN starts to process
the script files and displays this status:</para>
<programlisting>Status: In Progress.......
</programlisting>
<para>After executing all the script files, PRUN returns a summary
of the operation:</para>
<programlisting>        _____________________________________________
                  PARALLELRUN(PRUN) SUMMARY
        _____________________________________________
        Total files present ........................3
        Total files processed ......................3
        Total queries processed ...................40
        Total errors ...............................4
        Total warnings .............................0
        Total successes ...........................36
        Total connections ..........................5
        Total connection failures...................0

        Please verify the error log file c:\log\error\prun.err.log

SQL></programlisting>
<note>
<para>In the PRUN summary, the <literal>Total queries processed</literal
> is the total number of commands that PRUN processes. Those commands
can include SQL statements and interface commands. The total errors,
warnings, and successes also include commands other than SQL statements.</para>
</note>
</listitem>
<listitem><para>This PRUN command initiates a parallel run operation
with the <literal>-d</literal> option:</para>
<programlisting>SQL>prun -d

SQL> prun -scriptsdir ./prun/sql -e sql -ld ./prun/logs -o y -connections 5

PRUN options are -scriptsdir     c:/_trafci/prun
                 -logsdir        c:/_trafci/prun/logs
                 -extension      sql
                 -overwrite      y
                 -connections    5
Status: Complete
        _____________________________________________
                  PARALLELRUN(PRUN)SUMMARY
        _____________________________________________
        Total files present ......................99
        Total files processed ....................99
        Total queries processed .................198
        Total errors ..............................0
        Total warnings ............................0
        Total warnings ............................0
        Total connections .........................5
        Total connection failures..................0

===========================================================================
PRUN completed at May 20, 2014 9:33:21 AM
===========================================================================
</programlisting>
</listitem>
<listitem><para>PRUN can be started in non-interactive mode using
the <literal>–q</literal> parameter of <filename>trafci.cmd</filename
> or <filename>trafci.sh</filename>, thus requiring no input:</para>
<programlisting>trafci.cmd -h 16.123.456.78 
-u user1 -p host1 
-q "prun –sd c:/_trafci/prun -o y -c 3"
</programlisting>
</listitem>
<listitem><para>PRUN can be started in non-interactive mode from an
OBEY file: </para>
<programlisting>SQL>obey startPrun.txt

SQL>prun -sd c:/_trafci/prun -ld c:/_trafci/prun/logs -e sql -o y -c 5 

PRUN options are -scriptsdir     c:/_trafci/prun
                 -logsdir        c:/_trafci/prun/logs
                 -extension      sql
                 -overwrite      yes
                 -connections    5
Status: Complete
</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="i1011680" pagebreak="yes">
<title>QUIT Command</title>
<para><indexterm><primary>QUIT command</primary></indexterm>The QUIT
command disconnects from and exits TrafCI.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>QUIT [WITH][<emphasis role="italic">status</emphasis
>][IF{<emphasis role="italic">condition</emphasis>}]</programlisting
></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>status</replaceable></term>
<listitem><para>is any 1-byte integer. <replaceable>status</replaceable
> is a shell return value, and the range of allowable values is platform
dependent.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>condition</replaceable></term>
<listitem><para>is the same as the condition parameter defined for
the <phrase><xref linkend="IF_THEN" role="select:quotedtitle page"
/>. See <xref linkend="Condition_parameter"
role="select:quotedtitle page"/>.</phrase></para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line. The command does not
require an SQL terminator.</para>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command disconnects from and exits TrafCI, which
disappears from the screen:</para>
<programlisting>SQL>quit</programlisting>
</listitem>
<listitem><para>In a script file, the c<indexterm><primary>Conditional
exit</primary></indexterm>onditional exit command causes the script
file to quit running and disconnect from and exit TrafCI when the
previously run command returns error code 4082:</para>
<programlisting>log c:\errorCode.log
select * from employee;
quit if errorcode=4082
log off</programlisting>
<para>These results are logged when error code 4082 occurs:</para>
<programlisting>SQL>select * from employee;

*** ERROR[4082] Table, view or stored procedure <phrase>TRAFODION</phrase
>.USR.EMPLOYEE
    does not exist or is inaccessible.
SQL>quit if errorcode=4082</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="RECONNECT-Command" pagebreak="yes">
<title>RECONNECT Command</title>
<para><indexterm><primary>RECONNECT command</primary></indexterm>The
RECONNECT command creates a new connection to the Trafodion database
using the login credentials of the last successful connection.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>RECONNECT </programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<para>The host name (or IP address) and port number, plus the credentials
(user name and password), are used from information previously entered.
This is the information specified at launch or when the last CONNECT
command was executed. </para>
<para>If TrafCI was invoked with the <literal>-noconnect</literal
> launch parameter, TrafCI prompts you for the values.</para>
</section>
<section>
<title>Examples</title>
<para>This command creates a new connection to the Trafodion database
using the login credentials of the last successful connection:</para>
<programlisting>SQL>reconnect

Connected to Trafodion</programlisting>
</section>
</section>
<section condition="hidden" id="REMOVE-LIBRARY-Command" pagebreak="yes">
<title>REMOVE LIBRARY Command</title>
<para><indexterm><primary>REMOVE LIBRARY command</primary></indexterm
>The REMOVE LIBRARY command drops the specified library object from
the database schema and then removes the library’s corresponding JAR
file from the Trafodion database platform.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>REMOVE LIBRARY [[<replaceable>catalog-name</replaceable
>.]<replaceable>schema-name</replaceable>.]<replaceable>library-name</replaceable
> [ RESTRICT | CASCADE ] </programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term>[[<replaceable>catalog-name</replaceable>.]<replaceable
>schema-name</replaceable>.]<replaceable>library-name</replaceable
></term>
<listitem><para>specifies the name of the library object to be dropped
from the database schema. If you do not fully qualify the library
name with catalog and schema names, TrafCI uses the current catalog
and schema.</para></listitem>
</varlistentry>
<varlistentry><term>RESTRICT | CASCADE</term>
<listitem><para>specifies either RESTRICT or CASCADE mode for dropping
the library. RESTRICT requires that you drop all stored procedures
that refer to the library before dropping the library. CASCADE automatically
drops any stored procedures that are using the library. The default
mode is RESTRICT.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>To run this command, you must either be the owner
of the schema where you will drop the library or have the DROP_LIBRARY
privilege for the schema. The schema owner can grant such a schema-level
privilege to other users or roles. For more information, see grant
or revoke privileges for schemas in the <citetitle>HP Database Manager
(HPDM) User Guide</citetitle> or the GRANT SCHEMA statement in the <citetitle
>Trafodion SQL Reference Manual</citetitle>.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>This command drops the PAYROLL library from the database schema,
and drops any stored procedures that are using the library, and then
removes the library’s corresponding JAR file from the Trafodion database
platform:</para>
<programlisting>SQL>drop library <phrase>trafodion</phrase>.persnl.payroll cascade</programlisting>
</section>
</section>
<section id="i1014853" pagebreak="yes">
<title>REPEAT Command</title>
<para><indexterm><primary>REPEAT command</primary></indexterm><indexterm>
<primary>SQL statement</primary><secondary>repeating</secondary>
</indexterm>The REPEAT command reexecutes a previous command.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>REPEAT [ <replaceable>text</replaceable
> | [-]<replaceable>number</replaceable> ]</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>text</replaceable></term>
<listitem><para>specifies the text of the most recently executed command.
The command must have been executed beginning with <replaceable>text</replaceable
>, but <replaceable>text</replaceable> need be only as many characters
as necessary to identify the command. TrafCI ignores leading blanks.</para>
</listitem>
</varlistentry>
<varlistentry><term>[-]<replaceable>number</replaceable></term>
<listitem><para>is an integer that identifies a command in the history
buffer. If number is negative, it indicates the position of the command
in the history buffer relative to the current command; if number is
positive, it is the ordinal number of a command in the history buffer. </para>
<para>The HISTORY command displays the commands or statements in the
history buffer. <phrase>See the <xref linkend="i1013406"
role="select:quotedtitle page"/>.</phrase></para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>To reexecute the immediately preceding command, enter
REPEAT without specifying a number. If you enter more than one command
on a line, the REPEAT command reexecutes only the last command on
the line.</para></listitem>
<listitem><para>When a command is selected for repeat, and the SQL
terminator value has changed since the execution of that command,
TrafCI replaces the SQL terminator in the command with the current
SQL terminator value and executes the command.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>Display the previously executed commands and reexecute
the second to the last command:</para>
<programlisting>SQL>history
1>      set idletimeout 0
2>      log on
3>      set schema persnl;
4>      select * from employee;
5>      show tables
6>      select * from dept;
7>      show views
8>      select * from emplist;

SQL></programlisting>
<programlisting>SQL>repeat -2
show views

VIEW NAMES
-------------------------------------------------------------
EMPLIST  MGRLIST  

SQL></programlisting>
</listitem>
<listitem><para>Reexecute the fifth command in the history buffer:</para>
<programlisting>SQL>repeat 5
show tables

TABLE NAMES
-------------------------------------------------------------
DEPT      EMPLOYEE  JOB       PROJECT   

SQL></programlisting>
</listitem>
<listitem><para>Reexecute the SHOW TABLES command:</para>
<programlisting>SQL>repeat show
show tables

TABLE NAMES
-------------------------------------------------------------
DEPT      EMPLOYEE  JOB       PROJECT   

SQL></programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="RESET-LASTERROR" pagebreak="yes">
<title>RESET LASTERROR Command</title>
<para><indexterm><primary>RESET LASTERROR command</primary></indexterm
>The RESET LASTERROR command resets the last error code to 0. </para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>RESET LASTERROR</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line. The command does not
require an SQL terminator.</para>
</section>
<section>
<title>Examples</title>
<para>This command resets the last error in the current session:</para>
<programlisting>SQL>select * from emp;
*** ERROR[4082]Object <phrase>TRAFODION</phrase>.SCH.EMP does not exist or is inaccessible.

SQL>show lasterror
LASTERROR 4082

SQL> reset lasterror

SQL>show lasterror
LASTERROR 0</programlisting>
</section>
</section>
<section id="i1014280" pagebreak="yes">
<title>RESET PARAM Command</title>
<para><indexterm><primary>RESET PARAM command</primary><secondary
>syntax of</secondary></indexterm>The RESET PARAM command clears all
parameter values or a specified parameter value in the current session. </para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>RESET PARAM [<replaceable>param-name</replaceable
>]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>param-name</replaceable></term>
<listitem><para>is the name of the parameter for which you specified
a value. Parameter names are case-sensitive. For example, the parameter
?pn is not equivalent to the parameter ?PN. <replaceable>param-name</replaceable
> can be preceded by a question mark (?), such as <literal>?</literal
><replaceable>param-name</replaceable>.</para><para>If you do not
specify a parameter name, all of the parameter values in the current
session are cleared.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>To clear several parameter values but not all, you
must use a separate RESET PARAM command for each parameter. </para>
</listitem>
</itemizedlist>
</section>
<section>
<title>Example</title>
<para>This command clears the setting of the <literal>?sal</literal
> (salary) parameter, and the SET PARAM command resets it to a new
value:</para>
<programlisting>SQL>reset param ?sal

SQL>set param ?sal 80000.00</programlisting>
<para>For more information, see <xref linkend="i1007127"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="i1008105" pagebreak="yes">
<title>RUN Command</title>
<para><indexterm><primary>RUN command</primary></indexterm>The RUN
command executes the previously executed SQL statement. This command
does not repeat an interface command.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>RUN</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line.</para>
</listitem>
<listitem><para>The command does not require an SQL terminator.</para>
</listitem>
</itemizedlist>
</section>
<section>
<title>Example</title>
<para>This command executes the previously executed SELECT statement:</para>
<programlisting>SQL>select count(*) from persnl.employee;

(EXPR)               
-------------------- 
                  62 

--- 1 row(s) selected.

SQL>run

(EXPR)               
-------------------- 
                  62 

--- 1 row(s) selected.

SQL></programlisting>
</section>
</section>
<section id="SAVEHIST" pagebreak="yes">
<title>SAVEHIST Command</title>
<para><indexterm><primary>SAVEHIST command</primary></indexterm>The
SAVEHIST command saves the session history in a user-specified file.
The session history consists of a list of the commands that were executed
in the TrafCI session before the SAVEHIST command.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SAVEHIST <replaceable>file-name</replaceable
> [CLEAR]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>file-name</replaceable></term>
<listitem><para>is the name of a file into which TrafCI stores the
session history. If you want the history file to exist outside the
local directory where you launch TrafCI (by default, the <literal
>bin</literal> directory), specify the full directory path of the
history file. The specified directory must exist before you execute
the SAVEHIST command.</para></listitem>
</varlistentry>
<varlistentry><term>CLEAR</term>
<listitem><para>instructs TrafCI to clear the contents of the specified
file before adding the session history to the file.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the specified file already exists, TrafCI appends
newer session-history information to the file.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command clears the contents of an existing file
named history.txt in the local directory (the same directory where
you are running TrafCI) and saves the session history in the file:</para>
<programlisting>SQL>savehist history.txt clear

SQL></programlisting>
</listitem>
<listitem><para>This command saves the session history in a file named
hist.txt in the specified directory on a Windows workstation:</para>
<programlisting>SQL>savehist c:\log_files\hist.txt

SQL></programlisting>
</listitem>
<listitem><para>This command saves the session history in a file named
hist.txt in the specified directory on a Linux or UNIX workstation:</para>
<programlisting>SQL>savehist ./log_files/hist.txt

SQL></programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref
linkend="Displaying-Executed-Commands" role="select:quotedtitle page"
/>.</para>
</section>
</section>
<section condition="hidden" id="SCHEDULE_command">
<title>SCHEDULE Command</title>
<para><indexterm><primary>SCHEDULE command</primary></indexterm><indexterm>
<primary>Update statistics operation, scheduling</primary></indexterm
><indexterm><primary>Automated UPDATE STATISTICS, scheduling</primary>
</indexterm>The SCHEDULE command enables you to display or modify
the time during which the MAINTENANCE tasks are run by the scheduler.
The SCHEDULE command with the MAINTENANCE task option is used by automated
UPDATE STATISTICS to allocate the maintenance time between the UPDATE
STATISTICS operations.</para>
<note>
<para>The SCHEDULE command is currently unavailable on the Trafodion
platform.</para>
</note>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SCHEDULE { LIST MAINTENANCE }
       | { MAINTENANCE [AT <replaceable>time</replaceable>] MAXRUNTIME <replaceable
>interval</replaceable> [MINUTES | MINS] }

<replaceable>time</replaceable> is: <replaceable>hh</replaceable>:<replaceable
>mm</replaceable>:<replaceable>ss</replaceable></programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><literal>LIST MAINTENANCE</literal> </term>
<listitem><para>The LIST MAINTENANCE option displays information about
the MAINTENANCE tasks.</para></listitem>
</varlistentry>
<varlistentry><term><literal>MAINTENANCE</literal></term>
<listitem><para>The MAINTENANCE option allows you to modify the time
at which the task needs to be run by the scheduler on a daily basis.
This option also allows you to specify the maximum runtime limit. </para>
</listitem>
</varlistentry>
<varlistentry><term><literal>AT <replaceable>time</replaceable></literal
> </term>
<listitem><para>is the time in <replaceable>hh</replaceable>:<replaceable
>mm</replaceable>:<replaceable>ss</replaceable>, in 24-hour clock
notation, where <replaceable>hh</replaceable> represents the hour, <replaceable
>mm</replaceable> represents minutes, and <replaceable>ss</replaceable
> represents seconds at which the scheduler runs automated UPDATE
STATISTICS tasks on a daily basis. By default, the time is 00:00:00
(midnight).</para></listitem>
</varlistentry>
<varlistentry><term><literal><indexterm><primary>MAXRUNTIME</primary>
</indexterm>MAXRUNTIME <replaceable>interval</replaceable> [MINUTES
| MINS]</literal> </term>
<listitem><para>is an interval specified in minutes during which automated
UPDATE STATISTICS operations occur. By default, the interval is 360
minutes (or six hours).</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>In the command-line interface, you must enter the
SCHEDULE command on one line. The command does not require an SQL
terminator.</para></listitem>
<listitem><para>Automated UPDATE STATISTICS does not start new UPDATE
STATISTICS operations beyond the maintenance window. However, some
UPDATE STATISTICS operations might run beyond the end of the window.</para>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command alters the next run time for the MAINTENANCE
task:</para>
<informalexample>
<screen><computeroutput>SQL></computeroutput><userinput>schedule MAINTENANCE at 19:14:15</userinput
>
<computeroutput>
Next run        : 30NOV07 19:14:08
Max runtime     : 214 minutes
State           : Enabled
Days            : ALL DAYS
Last altered at : 30NOV07 14:25:47

--- NS operation complete.</computeroutput></screen>
</informalexample>
</listitem>
<listitem><para>This command alters the time and the runtime limit
for the MAINTENANCE task:</para>
<informalexample>
<screen><computeroutput>SQL></computeroutput><userinput>schedule maintenance at 22:22:21 maxruntime 214</userinput
>
<computeroutput>
Next run        : 30NOV07 18:23:00
Max runtime     : 214 minutes
State           : Enabled
Days            : ALL DAYS
Last altered at : 30NOV07 14:24:21

--- NS operation complete.</computeroutput></screen>
</informalexample>
</listitem>
</itemizedlist>
</section>
</section>
<section id="SET-COLSEP" pagebreak="yes">
<title>SET COLSEP Command</title>
<para><indexterm><primary>SET COLSEP command</primary></indexterm
>The SET COLSEP command sets the column separator and allows you to
control the formatting of the result displayed for SQL queries. The
SET COLSEP command specifies a delimiter value to use for separating
columns in each row of the results. The default delimiter is <literal
>“ ”</literal>(white space). </para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET COLSEP [separator] </programlisting
></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line.</para>
</listitem>
<listitem><para>The SET COLSEP command has no effect if the markup
is set to HTML, XML, or CSV.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command specifies the separator as a <literal
>“|”</literal>(pipe):</para>
<programlisting>SQL>set colsep |

SQL>show colsep
COLSEP "|"

SQL>select * from employee;
EMPNUM|EMPNAME       |REGNUM|BRANCHNUM|JOB     
------|--------------|------|---------|--------
     1|ROGER GREEN   |    99|        1|MANAGER 
    23|JERRY HOWARD  |     2|        1|MANAGER 
    29|JACK RAYMOND  |     1|        1|MANAGER 
    32|THOMAS RUDLOFF|     5|        3|MANAGER 
    39|KLAUS SAFFERT |     5|        2|MANAGER 
 
--- 5 row(s) selected.
</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="SET-CONNECTOPT-ROLE">
<title>SET CONNECTOPT ROLE Command</title>
<para><indexterm><primary>SET CONNECTOPT ROLE command</primary>
</indexterm>The SET CONNECTOPT ROLE command changes the role during
an TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET CONNECTOPT ROLE <replaceable>role-name</replaceable
></programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>role-name</replaceable></term>
<listitem><para>is a database role, such as DB__USERADMIN.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>After specifying the role by using the SET CONNECTOPT
ROLE command, use the CONNECT command to log on as the role.</para>
</listitem>
</itemizedlist>
<note>
<para>If you change the role while running TrafCI within an HPDM session,
the new role applies only to the TrafCI session. Your role for the
HPDM session remains what it was when you launched TrafCI.</para>
</note>
</section>
<section>
<title>Example</title>
<para>The first command changes the role of the TrafCI session to
DB__USERADMIN, and the second command logs on the user as that role:</para>
<programlisting>SQL>set connectopt role db__useradmin
SQL>connect johndoe@blip.com, mydsn
Password: </programlisting>
<para>For more information, see the <xref linkend="CONNECT-Command"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="SET-FETCHSIZE" pagebreak="yes">
<title>SET FETCHSIZE Command</title>
<para><indexterm><primary>SET FETCHSIZE command</primary></indexterm
>The SET FETCHSIZE command allows you to change the default fetchsize
used by JDBC. Setting the value to 0 sets the fetchsize to the default
value used in JDBC.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET FETCHSIZE <emphasis role="italic"
>value</emphasis> </programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>value</replaceable></term>
<listitem><para>is an integer representing the fetch size as a number
of rows. Zero (0) represents the default value of fetch size set in
JDBC.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line.</para>
</listitem>
<listitem><para>The command does not require an SQL terminator.</para>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>This command sets the fetchsize to 1:</para>
<programlisting>SQL>SET fetchsize 1

SQL>SHOW fetchsize

FETCHSIZE 1

SQL>select * from stream(t1);

C1      C2      C3
------- ------- -------
TEST1   TEST2   TEST3
AAA     BBB     CCC</programlisting>
<!--WRITER'S NOTE: In the example above, why is the SELECT * included? Does it help us verify the fetchsize?-->
</section>
</section>
<section id="SET-HISTOPT" pagebreak="yes">
<title>SET HISTOPT Command</title>
<para><indexterm><primary>SET HISTOPT command</primary></indexterm
>The SET HISTOPT command sets the history option and controls how
commands are added to the history buffer. By default, commands within
a script file are not added to history. If the history option is set
to “ALL,” all the commands in the script file are added to the history
buffer. If no options are specified, DEFAULT is used.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET HISTOPT [ALL|DEFAULT] </programlisting
></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line. </para>
</section>
<section>
<title>Examples</title>
<para>This command shows only the obey commands added to the history
buffer.</para>
<programlisting>SQL> show histopt 
HISTOPT DEFAULT [No expansion of script files]

SQL> obey e:\scripts\nobey\insert2.sql

SQL> ?section insert

SQL> set schema <phrase>trafodion</phrase>.sch;

--- SQL operation complete.

SQL> INSERT INTO COURSE1 VALUES
+>   ('C11', 'INTRO TO CS','FOR ROOKIES',3, 100,'CIS');

--- 1 row(s) inserted.

SQL> INSERT INTO COURSE1 VALUES
+>    ('C55', 'COMPUTER ARCH.','VON NEUMANN''S MACH.',3, 100, 'CIS');

--- 1 row(s) inserted.

SQL> history;
1>      show histopt
2>      obey e:\scripts\nobey\insert2.sql
</programlisting>
<para>This command shows all the commands added to the history buffer.</para>
<programlisting>SQL> set histopt all

SQL> obey e:\scripts\nobey\insert2.sql

?section insert

SQL> set schema <phrase>trafodion</phrase>.sch;

--- SQL operation complete.

SQL>     INSERT INTO COURSE1 VALUES
+>       ('C11','INTRO TO CS','FOR ROOKIES',3, 100, 'CIS');

---1 row(s) inserted.

SQL> INSERT INTO COURSE1 VALUES
+>   ('C55','COMPUTER ARCH.','VON NEUMANN''S MACH.',3,100,
'CIS');

---1 row(s) inserted.

SQL> history;
1>     show histopt
2>     obey e:\scripts\nobey\insert2.sql
3>     history;
4>     set histopt all
5>     set schema <phrase>trafodion</phrase>.sch;
6>     INSERT INTO COURSE1 VALUES
        ('C11','INTRO TO CS','FOR ROOKIES',3, 100, 'CIS');
7>     INSERT INTO COURSE1 VALUES
        ('C55','COMPUTER ARCH.','VON NEUMANN''S MACH.',3,100,
'CIS');
</programlisting>
</section>
</section>
<section id="i1008731" pagebreak="yes">
<title>SET IDLETIMEOUT Command</title>
<para><indexterm><primary>SET IDLETIMEOUT command</primary><secondary
>syntax of</secondary></indexterm>The SET IDLETIMEOUT command sets
the idle timeout value for the current session. The idle timeout value
of a session determines when the session expires after a period of
inactivity. The default is 30 minutes.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET IDLETIMEOUT <replaceable>value</replaceable
></programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>value</replaceable></term>
<listitem><para>is an integer representing the idle timeout value
in minutes. Zero represents an infinite amount of time, meaning that
the session never expires.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If you execute this command in a script file, it affects
the session in which the script file runs. You can specify this command
in PRUN script files. However, running this command from a PRUN script
file does not affect the idle timeout value for the current session.</para>
</listitem>
<listitem><para>To reset the default timeout value, enter this command:</para>
<programlisting>SET IDLETIMEOUT 30</programlisting>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command sets the idle timeout value to four hours:</para>
<programlisting>SQL>set idletimeout 240</programlisting>
</listitem>
<listitem><para>This command sets the idle timeout value to an infinite
amount of time so that the session never expires:</para>
<programlisting>SQL>set idletimeout 0</programlisting>
</listitem>
<listitem><para>To reset the idle timeout to the default, enter this
command:</para>
<programlisting>SQL>set idletimeout 30

SQL></programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref linkend="i1006792"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="SET-LIST-COUNT" pagebreak="yes">
<title>SET LIST_COUNT Command</title>
<para><indexterm><primary>SET LIST_COUNT command</primary></indexterm
>The SET LIST_COUNT command sets the maximum number of rows to be
returned by SELECT statements that are executed after this command.
The default is zero, which means that all rows are returned. </para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET LIST_COUNT <replaceable>num-rows</replaceable
></programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>num-rows</replaceable></term>
<listitem><para>is a positive integer that specifies the maximum number
of rows of data to be displayed by SELECT statements that are executed
after this command. Zero means that all rows of data are returned.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>To reset the number of displayed rows, enter this
command:</para>
<programlisting>SET LIST_COUNT 0</programlisting>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command specifies that the number of rows to
be displayed by SELECT statements is five:</para>
<programlisting>SQL>set list_count 5

SQL>select empnum, first_name, last_name
from persnl.employee
order by empnum;

EMPNUM FIRST_NAME      LAST_NAME            
------ --------------- -------------------- 
     1 ROGER           GREEN                
    23 JERRY           HOWARD               
    29 JANE            RAYMOND              
    32 THOMAS          RUDLOFF              
    39 KLAUS           SAFFERT              

--- 5 row(s) selected.  LIST_COUNT was reached.

SQL></programlisting>
</listitem>
<listitem><para>This command resets the number of displayed rows to
all rows:</para>
<programlisting>SQL>set list_count 0

SQL>select empnum, first_name, last_name
+>from persnl.employee
+>order by empnum;

EMPNUM  FIRST_NAME          LAST_NAME
------  ---------------     --------------------
     1  ROGER               GREEN
    23  JERRY               HOWARD
    29  JANE                RAYMOND
    32  THOMAS              RUDLOFF
    39  KLAUS               SAFFERT
    43  PAUL                WINTER
    65  RACHEL              MCKAY
   ...
   995 Walt            Farley

--- 62 row(s) selected.

SQL></programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="SET-MARKUP" pagebreak="yes">
<title>SET MARKUP Command</title>
<para><indexterm><primary>SET MARKUP command</primary></indexterm
>The SET MARKUP command sets the markup format and controls how results
are displayed by TrafCI. </para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET MARKUP [RAW|HTML|XML|CSV|COLSEP] </programlisting
></entry></row>
</tbody>
</tgroup>
</informaltable>
<para>The supported options enable results to be displayed in XML,
HTML, CSV (Comma Separated Values), and COLSEP format. The default
format is RAW. </para>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. </para>
</listitem>
<listitem><para>If the MARKUP format is CSV or COLSEP, the column
header information and status messages are not displayed.</para>
</listitem>
<listitem><para>For the XML and HTML markup format, the syntax and
interface errors have been reformatted so that consistent XML and
HTML markup is displayed. In previous releases, the structure of the
XML and HTML error depended on whether the error was generated by
the application or an SQL error that was received from the database.
Also, specific characters are also escaped when the markup is set
to XML or HTML. For XML markup, any occurrence of “]]&gt;” that appear
in the error message or invalid query are replaced with “]]&gt;”.
When error messages are output as HTML markup, both the “>” (greater
than) and “&lt;” (less than) symbols are replaced with their escaped
versions: “>” and &lt;”, respectively. An example of the formatted
error messages are show below.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command specifies results be displayed in HTML:</para>
<programlisting>SQL>set markup html

SQL>select c.custnum, c.custnum, ordernum, order_date 
+>from customer c, orders o where c.custnum=o.custnum;

&lt;TABLE>
&lt;!--select c.custnum, c.custname,ordernum,order_date 
from customer c, orders o where c.custnum=o.custnum;-->
&lt;tr>
  &lt;th>CUSTNUM&lt;/th>
  &lt;th>CUSTNAME&lt;/th>
  &lt;th>ORDERNUM&lt;/th>
  &lt;th>ORDER_DATE&lt;/th>
&lt;/tr>
&lt;tr>
  &lt;td>143&lt;/td>
  &lt;td>STEVENS SUPPLY&lt;/td>
  &lt;td>700510&lt;/td> 
  &lt;td>2014-05-01&lt;/td>
&lt;/tr>
&lt;tr>
  &lt;td>3333&lt;/td>
  &lt;td>NATIONAL UTILITIES&lt;/td>
  &lt;td>600480&lt;/td> 
  &lt;td>2014-05-12&lt;/td>
&lt;/tr>
&lt;tr>
  &lt;td>7777&lt;/td>
  &lt;td>SLEEP WELL HOTELS&lt;/td>
  &lt;td>100250&lt;/td> 
  &lt;td>2014-01-23&lt;/td>
&lt;/tr>
  &lt;!-- --- 3 row(s) selected.-->

&lt;/TABLE>

SQL>select c.custnum, c.custname,ordernum,order_date, 
+>from customer c, orders o where c.custnum=o.custnum;

&lt;TABLE>
&lt;!-- select c.custnum, c.custname,ordernum,order_date, 
from customer c, orders o where c.custnum=o.custnum;-->
&lt;tr>
  &lt;th>Error Id&lt;/th>
  &lt;th>Error Code&lt;/th>
  &lt;th>Error Message&lt;/th>
&lt;tr>
  &lt;td>1&lt;/td>
  &lt;td>4082&lt;/td>
  &lt;td>Object <phrase>TRAFODION</phrase>.NVS.CUSTOMER does not exist or is inaccessible.&lt;/td>
&lt;/tr>
&lt;/TABLE>
</programlisting>
</listitem>
<listitem><para>To set the application to format output as HTML:</para>
<programlisting>SQL>set markup HTML

</programlisting>
<para>HTML formatted error message example:</para>
<programlisting>SQL>set markup &lt;invalid>
&lt;?xml version="1.0"?>
&lt;Results>
 &lt;Query>
  &lt;![CDATA[set markup &lt;invalid ]]&gt;
 &lt;/Query>
 &lt;ErrorList>
  &lt;Error id="1">
   &lt;ErrorCode>NVCI001&lt;/ErrorCode
   &lt;ErrorMsg> &lt;![CDATA[
ERROR: A syntax error occurred at or before:
set markup &lt;invalid>
               ^ ]]&lt;>/ErrorMsg>
  &lt;/Error>
 &lt;/ErrorList>
&lt;/Results></programlisting>
</listitem>
<listitem><para>This command specifies results be displayed in CSV:</para>
<programlisting>SQL>set markup CSV

SQL>select c.custnum, c.custnum, ordernum, order_date 
+>from customer c,orders o where c.custnum=o.custnum;

143,STEVENS SUPPLY    ,700510,2014-05-01
3333,NATIONAL UTILITIES,600480,2014-05-12
7777,SLEEPWELL HOTELS  ,100250,2014-01-23
324,PREMIER INSURANCE ,500450,2014-04-20
926,METALL-AG.        ,200300,2014-02-06
123,BROWN MEDICAL CO  ,200490,2014-03-19
123,BROWN MEDICAL CO  ,300380,2014-03-19
543,FRESNO STATE BANK ,300350,2014-03-03
5635,ROYAL CHEMICALS   ,101220,2014-05-21
21,CENTRAL UNIVERSITY,200320,2014-02-17
1234,DATASPEED         ,100210,2014-04-10
3210,BESTFOOD MARKETS  ,800660,2014-05-09
</programlisting>
</listitem>
<listitem><para>This command specifies results be displayed in XML:</para>
<programlisting>SQL>set markup xml

SQL>select * from author
&lt;?xml version="1.0"?>
&lt;Results>
&lt;Query>
 &lt;![CDATA[select * from author;]]&gt;
&lt;/Query>
&lt;rowid="1">
   &lt;AUTHORID>91111&lt;/AUTHORID>
   &lt;AUTHORNAME>Bjarne Stroustrup&lt;/AUTHORNAME>
 &lt;/row>
 &lt;rowid="2">
   &lt;AUTHORID>444444&lt;/AUTHORID>
   &lt;AUTHORNAME>John Steinbeck&lt;/AUTHORNAME>
 &lt;/row>
 &lt;rowid="3">
   &lt;AUTHORID>2323423&lt;/AUTHORID>
   &lt;AUTHORNAME>Irwin Shaw&lt;/AUTHORNAME>
 &lt;/row>
 &lt;rowid="4">
   &lt;AUTHORID>93333&lt;/AUTHORID>
   &lt;AUTHORNAME>Martin Fowler&lt;/AUTHORNAME>
 &lt;/row>
 &lt;rowid="5">
   &lt;AUTHORID>92222&lt;/AUTHORID>
   &lt;AUTHORNAME>Grady Booch&lt;/AUTHORNAME>
&lt;/row>
 &lt;rowid="6">
   &lt;AUTHORID>84758345&lt;/AUTHORID>
   &lt;AUTHORNAME>Judy Blume&lt;/AUTHORNAME>
 &lt;/row>
 &lt;rowid="7">
   &lt;AUTHORID>89832473&lt;/AUTHORID>
   &lt;AUTHORNAME>Barbara Kingsolver&lt;/AUTHORNAME>
 &lt;/row>
 
&lt;Status> &lt;![CDATA[-- 7 row(s) selected .]]&gt;&lt;/Status>
 
&lt;/Results>
</programlisting>
</listitem>
<listitem><para>To set the application to format output as XML:</para>
<programlisting>SQL>set markup XML

</programlisting>
<para>XML formatted error message examples:</para>
<programlisting>SQL>set markup &lt;]]&gt;
&lt;?xml version="1.0"?>
&lt;Results>
 &lt;Query>
  &lt;![CDATA[set markup &lt;]]&amp;#62; ]]&gt;>
 &lt;/Query>
 &lt;ErrorList>
  &lt;Error id="1">
    &lt;ErrorCode>UNKNOWN ERROR CODE&lt;/ErrorCode 
    &lt;ErrorMessage> &lt;![CDATA[
ERROR: A syntax error occurred at or before:
set markup &lt;]]&amp;#62;>
               ^ ]]&lt;>/ErrorMsg>
  &lt;/Error>
 &lt;/ErrorList>
&lt;/Results></programlisting>
</listitem>
<listitem><para>This command displays CSV like output using the COLSEP
value as a separator.</para>
<programlisting>SQL>set colsep |

SQL>set markup colsep

SQL>select * from employee;
32|THOMAS       |RUDLOFF    |2000|100|138000.40
39|KLAUS        |SAFFERT    |3200|100|75000.00
89|PETER        |SMITH|     |3300|300|37000.40 
29|JANE         |RAYMOND    |3000|100|136000.00
65|RACHEL       |MCKAY      |4000|100|118000.00
75|TIM          |WALKER     |3000|300|320000.00
11|ROGER        |GREEN      |9000|100|175500.00 
93|DONALD       |TAYLOR     |3100|300|33000.00 
</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="i1009147" pagebreak="yes">
<title>SET PARAM Command</title>
<para><indexterm><primary>SET PARAM command</primary><secondary>syntax
of</secondary></indexterm>The SET PARAM command associates a parameter
name with a parameter value in the current session. The parameter
name and value are associated with one of these parameter types:</para>
<itemizedlist>
<listitem><para>Named parameter (represented by <literal>?</literal
><replaceable>param-name</replaceable>) in a DML statement or in a
prepared SQL statement</para></listitem>
<listitem><para>Unnamed parameter (represented by <literal>?</literal
>) in a prepared SQL statement only</para></listitem>
</itemizedlist>
<para>A prepared statement is one that you SQL compile by using the
PREPARE statement. For more information about PREPARE, see the <citetitle
>Trafodion SQL Reference Manual</citetitle>.</para>
<para>After running SET PARAM commands in the session:</para>
<itemizedlist>
<listitem><para>You can specify named parameters (<literal>?</literal
><replaceable>param-name</replaceable>) in a DML statement.</para>
</listitem>
<listitem><para>You can execute a prepared statement with named parameters
by using the EXECUTE statement without a USING clause.</para></listitem>
<listitem><para>You can execute a prepared statement with unnamed
parameters by using the EXECUTE statement with a USING clause that
contains literal values and/or a list of the named parameters set
by SET PARAM.</para></listitem>
</itemizedlist>
<para>The EXECUTE statement substitutes parameter values for the parameters
in the prepared statement. For more information about EXECUTE, see
the <citetitle>Trafodion SQL Reference Manual</citetitle>.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET PARAM <replaceable>param-name</replaceable
> <phrase>[UTF8]</phrase><replaceable>param-value</replaceable></programlisting
></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>param-name</replaceable></term>
<listitem><para>is the name of the parameter for which a value is
specified. Parameter names are case-sensitive. For example, the parameter <literal
>?pn</literal> is not equivalent to the parameter <literal>?PN</literal
>. <replaceable>param-name</replaceable> can be preceded by a question
mark (?), such as <literal>?</literal><replaceable>param-name</replaceable
>.</para></listitem>
</varlistentry>
<varlistentry><term>UTF8</term>
<listitem><para>specifies that a character string specified for the
parameter value, <replaceable>param-value</replaceable>, uses the
UTF8 character set. If the character string is in UTF8 format, it
must be prefixed by <literal>UTF8</literal>.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>param-value</replaceable></term>
<listitem><para>is a numeric or character literal that specifies the
value for the parameter. If you do not specify a value, TrafCI returns
an error. </para><para>If <replaceable>param-value</replaceable> is
a character literal and the target column type is a character string,
you do not have to enclose the value in single quotation marks. Its
data type is determined from the data type of the column to which
the literal is assigned. Character strings specified as parameter
values are always case-sensitive even if they are not enclosed in
quotation marks. <phrase>If the character string is in UTF8 format,
it must be prefixed by <literal>UTF8</literal>.</phrase></para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>Use separate SET PARAM commands to name and assign
values to each unique parameter in a prepared SQL statement before
running the EXECUTE statement.</para></listitem>
<listitem><para>Parameter names are case-sensitive. If you specify
a parameter name in lowercase in the SET PARAM command, you must specify
it in lowercase in other statements, such as DML statements or EXECUTE.</para>
</listitem>
<listitem><para>The name of a named parameter (<literal>?</literal
><replaceable>param-name</replaceable>) in a DML statement must be
identical to the parameter name (<replaceable>param-name</replaceable
>) that you specify in a SET PARAM command.</para></listitem>
</itemizedlist>
</section>
<section pagebreak="yes">
<title>Examples</title>
<itemizedlist>
<listitem><para>This command sets a value for the <literal>?sal</literal
> (salary) parameter:</para>
<programlisting>SQL>set param ?sal 40000.00</programlisting>
</listitem>
<listitem><para>This command sets a character string value, GREEN,
for the <literal>?lastname</literal> parameter:</para>
<programlisting>SQL>set param ?lastname GREEN</programlisting>
</listitem>
<listitem><para>These commands set values for named parameters in
a subsequent SELECT statement:</para>
<programlisting>SQL>set param ?sal 80000.00

SQL>set param ?job 100

SQL>select * from persnl.employee
where salary = ?sal
and jobcode = ?job;

EMPNUM FIRST_NAME      LAST_NAME            DEPTNUM JOBCODE SALARY     
------ --------------- -------------------- ------- ------- ---------- 
    72 GLENN           THOMAS                  3300     100   80000.00 

--- 1 row(s) selected.

SQL></programlisting>
<note>
<para>The names of the named parameters, <literal>?sal</literal> and <literal
>?job</literal>, in the SELECT statement are identical to the parameter
names, <literal>sal</literal> and <literal>job</literal>, in the SET
PARAM command.</para>
</note>
</listitem>
<listitem><para>This command sets a character string value, Peña,
which is in UTF8 format, for the <literal>?lastname</literal> parameter:</para>
<programlisting>SQL>set param ?lastname utf8'Peña'</programlisting>
</listitem>
<listitem><para>This command sets a character string value, which
uses the UTF8 character set and is in hexadecimal notation, for the <literal
>?lastname</literal> parameter:</para>
<programlisting>SQL>set param ?lastname utf8x'5065266e74696c64653b61'</programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref linkend="i1007119"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="SET-PROMPT" pagebreak="yes">
<title>SET PROMPT Command</title>
<para><indexterm><primary>SET PROMPT command</primary><secondary>syntax
of</secondary></indexterm>The SET PROMPT command sets the prompt of
the current session to a specified string and/or to the session variables,
which start with %. The default prompt is <literal>SQL></literal>.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET PROMPT [<replaceable>string</replaceable
>] [%USER] <phrase condition="hidden">[%ROLE] </phrase>[%SERVER] [%SCHEMA]<phrase
condition="hidden"> [%DATASOURCE]</phrase></programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>string</replaceable></term>
<listitem><para>is a string value to be displayed as the prompt. The
string may contain any characters. Spaces are allowed if you enclose
the string in double quotes. If you do not enclose the string in double
quotes, the prompt is displayed in uppercase.</para></listitem>
</varlistentry>
<varlistentry><term>%USER</term>
<listitem><para>displays the session user name as the prompt.</para>
</listitem>
</varlistentry>
<varlistentry condition="hidden"><term>%ROLE</term>
<listitem><para>displays the current role as the prompt.</para>
</listitem>
</varlistentry>
<varlistentry><term>%SERVER</term>
<listitem><para>displays the session host name and port number as
the prompt.</para></listitem>
</varlistentry>
<varlistentry><term>%SCHEMA</term>
<listitem><para>displays the session schema as the prompt.</para>
</listitem>
</varlistentry>
<varlistentry condition="hidden"><term>%DATASOURCE</term>
<listitem><para>displays the session data source as the prompt.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>To reset the default prompt, enter this command:</para>
<programlisting>SET PROMPT</programlisting>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This SET PROMPT command sets the SQL prompt to <literal
>ENTER></literal>:</para>
<programlisting>SQL>set prompt Enter>

ENTER></programlisting>
</listitem>
<listitem><para>To reset the SQL prompt to the default, enter this
SET PROMPT command:</para>
<programlisting>ENTER>set prompt

SQL></programlisting>
</listitem>
<listitem><para>This command displays the session user name for the
prompt:</para>
<programlisting>SQL>set prompt %user>

<phrase>user1</phrase>></programlisting>
</listitem>
<listitem condition="hidden"><para>This command displays the current
role for the prompt:</para>
<programlisting>SQL>set prompt %role>

DB__USERADMIN></programlisting>
</listitem>
<listitem><para>This command displays the session host name and port
number for the prompt:</para>
<programlisting>SQL>set prompt %server>

sqws135.houston.hp.com:22900></programlisting>
</listitem>
<listitem><para>This command displays the session schema for the prompt:</para>
<programlisting>SQL>set prompt "Schema %schema:"

Schema USR:</programlisting>
</listitem>
<listitem condition="hidden"><para>This command displays the session
data source for the prompt:</para>
<programlisting>SQL>set prompt "%datasource SQL>"

TDM_Default_DataSource SQL></programlisting>
</listitem>
<listitem><para>This command displays multiple session variables:</para>
<programlisting>SQL>set prompt %USER@%SCHEMA>

user1@USR>

user1@USR> set prompt %SERVER:%USER>

sqws135.houston.hp.com:22900:user1>

sqws135.houston.hp.com:22900:user1>set prompt  ”%schema  CI> ”

USR CI></programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref linkend="i1004585"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="i1008424" pagebreak="yes">
<title>SET SQLPROMPT Command</title>
<para><indexterm><primary>SET SQLPROMPT command</primary></indexterm
>The SET SQLPROMPT command sets the SQL prompt of the current session
to a specified string. The default is <literal>SQL></literal>.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET SQLPROMPT [<replaceable>string</replaceable
>] [%USER] <phrase condition="hidden">[%ROLE] </phrase>[%SERVER] [%SCHEMA]<phrase
condition="hidden"> [%DATASOURCE]</phrase></programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>string</replaceable></term>
<listitem><para>is a string value to be displayed as the SQL prompt.
The string may contain any characters. Spaces are allowed if you enclose
the string in double quotes. If you do not enclose the string in double
quotes, the prompt is displayed in uppercase.</para></listitem>
</varlistentry>
<varlistentry><term>%USER</term>
<listitem><para>displays the session user name as the prompt.</para>
</listitem>
</varlistentry>
<varlistentry condition="hidden"><term>%ROLE</term>
<listitem><para>displays the current role as the prompt.</para>
</listitem>
</varlistentry>
<varlistentry><term>%SERVER</term>
<listitem><para>displays the session host name and port number as
the prompt.</para></listitem>
</varlistentry>
<varlistentry><term>%SCHEMA</term>
<listitem><para>displays the session schema as the prompt.</para>
</listitem>
</varlistentry>
<varlistentry condition="hidden"><term>%DATASOURCE</term>
<listitem><para>displays the session data source as the prompt.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>To reset the default SQL prompt, enter this command:</para>
<programlisting>SET SQLPROMPT</programlisting>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command sets the SQL prompt to <literal>ENTER></literal
>:</para>
<programlisting>SQL>set sqlprompt Enter>

ENTER></programlisting>
</listitem>
<listitem><para>To reset the SQL prompt to the default, enter this
command:</para>
<programlisting>ENTER>set sqlprompt

SQL></programlisting>
</listitem>
<listitem><para>This command displays the session user name for the
prompt:</para>
<programlisting>SQL>set sqlprompt %user>

user1></programlisting>
</listitem>
<listitem condition="hidden"><para>This command displays the current
role for the prompt:</para>
<programlisting>SQL>set sqlprompt %role>

DB__USERADMIN></programlisting>
</listitem>
<listitem><para>This command displays the session host name and port
number for the prompt:</para>
<programlisting>SQL>set sqlprompt %server>

sqws135.houston.hp.com:22900></programlisting>
</listitem>
<listitem><para>This command displays the session schema for the prompt:</para>
<programlisting>SQL>set sqlprompt "Schema %schema:"

Schema USR:</programlisting>
</listitem>
<listitem condition="hidden"><para>This command displays the session
data source for the prompt:</para>
<programlisting>SQL>set sqlprompt "%datasource SQL>"

TDM_Default_DataSource SQL></programlisting>
</listitem>
<listitem><para>This command displays multiple session variables:</para>
<programlisting>SQL>set sqlprompt %USER@%SCHEMA>

user1@USR>

SQL> set sqlprompt %SERVER:%USER>

sqws135.houston.hp.com:22900:user1>

sqws135.houston.hp.com:22900:user1>set sqlprompt  ”%schema  CI> ”

USR CI></programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref linkend="i1004585"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="i1005238" pagebreak="yes">
<title>SET SQLTERMINATOR Command</title>
<para><indexterm><primary>SET SQLTERMINATOR command</primary><secondary
>syntax of</secondary></indexterm>The SET SQLTERMINATOR command sets
the SQL statement terminator of the current session. The default is
a semicolon (;).</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET SQLTERMINATOR <replaceable>string</replaceable
></programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>string</replaceable></term>
<listitem><para>is a string value for the SQL terminator. The string
may contain any characters except spaces. Spaces are disallowed even
if you enclose the string in double quotes. Lowercase and uppercase
characters are accepted, but the SQL terminator is always shown in
uppercase.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>Do not include a reserved word as an SQL terminator.</para>
</listitem>
<listitem><para>If you execute this command in a script file, it affects
not only the SQL statements in the script file but all subsequent
SQL statements that are run in the current session. If you set the
SQL terminator in a script file, reset the default terminator at the
end of the script file.</para></listitem>
<listitem><para>To reset the default SQL terminator (;), enter this
command:</para>
<programlisting>SET SQLTERMINATOR ;</programlisting>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command sets the SQL terminator to a period (.):</para>
<programlisting>SQL>set sqlterminator .</programlisting>
</listitem>
<listitem><para>This command sets the SQL terminator to a word, go:</para>
<programlisting>SQL>set sqlterminator go</programlisting>
<para>This query ends with the new terminator, go:</para>
<programlisting>SQL>select * from persnl.employee go</programlisting>
</listitem>
<listitem><para>To reset the SQL terminator to the default, enter
this command:</para>
<programlisting>SQL>set sqlterminator ;</programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref linkend="i1004589"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="set-statistics" pagebreak="yes">
<title>SET STATISTICS Command</title>
<para><indexterm><primary>SET STATISTICS command</primary></indexterm
>The SET STATISTICS command automatically retrieves the statistics
information for a query being executed. The results returned are the
same as would have been returned if the GET STATISTICS command was
executed. The default is OFF which means the statistics information
is not automatically printed for any queries.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET STATISTICS {ON | OFF} </programlisting
></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line. </para>
</section>
<section>
<title>Examples</title>
<para>This command shows the default output format as PERTABLE:<programlisting
>SQL>set statistics on

SQL>select  * from job;

JOBCODE JOBDESC
------- ------------------
 100 MANAGER
1234
450 PROGRAMMER
900 SECRETARY
300 SALESREP
500 ACCOUNTANT
400 SYSTEM ANALYST
250 ASSEMBLER
420 ENGINEER
600 ADMINISTRATOR
200 PRODUCTION SUPV

--- 11 row(s) selected.


Start Time             2014/05/18 21:45:34.082329
End Time               2014/05/18 21:45:34.300265
Elapsed Time                      00:00:00.217936
Compile Time                      00:00:00.002423
Execution Time                    00:00:00.218750

Table Name   Records  Records  Disk  Message  Message  Lock  Lock  Disk Process
            Accessed     Used  I/Os    Count    Bytes  Escl  Wait     Busy Time
<phrase>TRAFODION</phrase>.TOI.JOB       
                   2        2     0        4    15232     0     0           363


SQL>
</programlisting>For more information on the STATISTICS command, see
the <emphasis role="italic">Trafodion SQL Reference Manual</emphasis
>.</para>
</section>
</section>
<section id="i1005242" pagebreak="yes">
<title>SET TIME Command</title>
<para><indexterm><primary>SET TIME command</primary><secondary>syntax
of</secondary></indexterm>The SET TIME command causes the local time
of the client workstation to be displayed as part of the interface
prompt. By default, the local time is not displayed in the interface
prompt.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET TIME { ON[12H] | OFF }</programlisting
></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term>ON</term>
<listitem><para>specifies that the local time be displayed as part
of the prompt.</para></listitem>
</varlistentry>
<varlistentry><term>OFF</term>
<listitem><para>specifies that the local time not be displayed as
part of the prompt. OFF is the default.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>The default is a 24-hour military style display. The
additional argument of 12h allows the time to be displayed in a 12–hour
AM/PM style.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command causes the local time to be displayed
in the SQL prompt:</para>
<programlisting>SQL>set time on

14:17:17 SQL></programlisting>
</listitem>
<listitem><para>This command causes the local time to be displayed
in 12–hour AM/PM style in the SQL prompt:</para>
<programlisting>SQL>set time on 12h

2:17:17 PM SQL></programlisting>
</listitem>
<listitem><para>This command turns off the local time in the SQL prompt:</para>
<programlisting>2:17:17 PM SQL>set time off

SQL></programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref linkend="i1004585"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="i1005246" pagebreak="yes">
<title>SET TIMING Command</title>
<para><indexterm><primary>SET TIMING command</primary><secondary>syntax
of</secondary></indexterm>The SET TIMING command causes the elapsed
time to be displayed after each SQL statement executes. This command
does not cause the elapsed time of interface commands to be displayed.
By default, the elapsed time is off.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SET TIMING { ON | OFF }</programlisting
></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term>ON</term>
<listitem><para>specifies the elapsed time be displayed after each
SQL statement executes.</para></listitem>
</varlistentry>
<varlistentry><term>OFF</term>
<listitem><para>specifies that the elapsed time not be displayed after
each SQL statement executes. OFF is the default.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>The elapsed time value includes compile and execution
time plus any network I/O time and client-side processing time<phrase
condition="hidden">, and any WMS-queue hold time</phrase>.</para>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command displays the elapsed time of SQL statements:</para>
<programlisting>SQL>set timing on</programlisting>
</listitem>
<listitem><para>This command turns off the elapsed time:</para>
<programlisting>SQL>set timing off</programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref linkend="i1004593"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="SHOW-ACTIVITYCOUNT" pagebreak="yes">
<title>SHOW ACTIVITYCOUNT Command</title>
<para><indexterm><primary>SHOW ACTIVITYCOUNT command</primary>
</indexterm>The SHOW ACTIVITYCOUNT command provides an alias for SHOW
RECCOUNT. ACTIVITYCOUNT is an alias for RECCOUNT. <phrase>For more
information, see the <xref linkend="SHOW-RECCOUNT"
role="select:quotedtitle page"/>.</phrase></para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW ACTIVITYCOUNT</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Examples</title>
<para>This command shows the record count of the previous executed
SQL statement:</para>
<programlisting>SQL> SHOW ACTIVITYCOUNT

ACTIVITYCOUNT 0</programlisting>
</section>
</section>
<section id="SHOW-ALIAS" pagebreak="yes">
<title>SHOW ALIAS Command</title>
<para><indexterm><primary>SHOW ALIAS command</primary></indexterm
>The SHOW ALIAS command displays all or a set of aliases available
in the current TrafCI session. If a pattern is specified, all aliases
matching the pattern are displayed. By default, all aliases in the
current session are displayed.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW ALIAS [<emphasis role="italic">alias-name</emphasis
> | <emphasis role="italic">wild-card-pattern</emphasis>] </programlisting
></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>alias-name</replaceable></term>
<listitem><para>is any alias name that is used with the ALIAS command. <phrase
>See <xref linkend="ALIAS-Command" role="select:quotedtitle page"
/>.</phrase></para></listitem>
</varlistentry>
<varlistentry><term><replaceable>wild-card-pattern</replaceable></term>
<listitem><para>is a character string used to search for and display
aliases with names that match the character string. <replaceable>wild-card-pattern</replaceable
> matches an uppercase string unless you enclose it within double
quotes. To look for similar values, specify only part of the characters
of <replaceable>wild-card-pattern</replaceable> combined with these
wild-card characters.</para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="DL1  desc list">
<colspec colwidth="0.23*"/>
<colspec colwidth="1.77*"/>
<tbody>
<row><entry>%</entry><entry>Use a percent sign (%) to indicate zero
or more characters of any type. For example, <literal>%art%</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"%art%"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>*</entry><entry>Use an asterisk (*) to indicate zero or
more characters of any type. For example, <literal>*art*</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"*art*"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>_</entry><entry>Use an underscore (_) to indicate any
single character. For example, <literal>boo_</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo_"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
<row><entry>?</entry><entry>Use a question mark (?) to indicate any
single character. For example, <literal>boo?</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo?"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line. The command does not
require an SQL terminator.</para>
</section>
<section>
<title>Examples</title>
<para>This command displays a list of the available aliases:</para>
<programlisting>SQL> SHOW ALIAS

.OS AS LH
.GOTO AS GOTO
USE AS SET SCHEMA
</programlisting>
<para>This command displays the .GOTO alias:</para>
<programlisting>SQL> SHOW ALIAS .GOTO

.GOTO AS GOTO
</programlisting>
<para>This command displays the .FOO alias:</para>
<programlisting>SQL> SHOW ALIAS .FOO

No aliases found.
</programlisting>
<para>This command displays all aliases beginning with the letter
“S”:</para>
<programlisting>SQL> SHOW ALIAS S*
SEL AS SELECT
SHOWTIME AS SHOW TIME
ST AS SHOW TABLES</programlisting>
</section>
</section>
<section id="SHOW-ALIASES" pagebreak="yes">
<title>SHOW ALIASES Command</title>
<para><indexterm><primary>SHOW ALIASES command</primary></indexterm
>The SHOW ALIASES command displays all the aliases available in the
current TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW ALIASES</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line. The command does not
require an SQL terminator.</para>
</section>
<section>
<title>Examples</title>
<para>This command displays all the aliases in the current TrafCI
session:</para>
<programlisting>SQL> SHOW ALIASES

.OS AS LH
.GOTO AS GOTO
USE AS SET SCHEMA
</programlisting>
</section>
</section>
<section id="show-catalog" pagebreak="yes">
<title>SHOW CATALOG Command</title>
<para><indexterm><primary>SHOW CATALOG command</primary><secondary
>syntax of</secondary></indexterm>The SHOW CATALOG command displays
the current catalog of the TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW CATALOG</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Example</title>
<para>This command shows that the current catalog of the session is <phrase
>TRAFODION</phrase>:</para>
<programlisting>SQL>show catalog
CATALOG <phrase>TRAFODION</phrase></programlisting>
</section>
</section>
<section condition="hidden" id="show-catalogs" pagebreak="yes">
<title>SHOW CATALOGS Command</title>
<para><indexterm><primary>SHOW CATALOGS command</primary><secondary
>syntax of</secondary></indexterm>The SHOW CATALOGS command displays
all or a set of the catalogs that exist in the database instance.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW CATALOGS [<replaceable>wild-card-pattern</replaceable
>]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>wild-card-pattern</replaceable></term>
<listitem><para><indexterm><primary>Catalogs</primary><secondary>wild-card
search</secondary></indexterm><indexterm><primary>Wild-card search</primary>
<secondary>catalogs</secondary></indexterm>is a character string used
to search for and display catalogs with names that match the character
string. <replaceable>wild-card-pattern</replaceable> matches an uppercase
string unless you enclose it within double quotes. To look for similar
values, specify only part of the characters of <replaceable>wild-card-pattern</replaceable
> combined with these wild-card characters:</para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="DL1  desc list">
<colspec colwidth="0.21*"/>
<colspec colwidth="1.79*"/>
<tbody>
<row><entry>%</entry><entry>Use a percent sign (%) to indicate zero
or more characters of any type. For example, <literal>%art%</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"%art%"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>*</entry><entry>Use an asterisk (*) to indicate zero or
more characters of any type. For example, <literal>*art*</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"*art*"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>_</entry><entry>Use an underscore (_) to indicate any
single character. For example, <literal>boo_</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo_"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
<row><entry>?</entry><entry>Use a question mark (?) to indicate any
single character. For example, <literal>boo?</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo?"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If you do not specify a wild-card pattern in a SHOW
CATALOGS command, TrafCI displays all the catalogs that exist in the
database instance.</para></listitem>
<listitem><para>If you specify a wild-card pattern in a SHOW CATALOGS
command, TrafCI displays only the catalog names that match the wild-card
pattern.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command shows all the catalogs that exist in
the database instance:</para>
<programlisting>SQL>show catalogs

CATALOG NAMES
-------------------------------------------------------------------------
HP_SYSTEM_CATALOG  MANAGEABILITY      <phrase>TRAFODION</phrase>         OCEAN              SEA 

SQL></programlisting>
</listitem>
<listitem><para>This command shows the catalogs that have “SYSTEM”
in their names:</para>
<programlisting>SQL>show catalogs %system%

CATALOG NAMES
------------------------------------------------------------------------
HP_SYSTEM_CATALOG

SQL></programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="SHOW-COLSEP" pagebreak="yes">
<title>SHOW COLSEP Command</title>
<para><indexterm><primary>SHOW COLSEP command</primary></indexterm
>The SHOW COLSEP command displays the value of the column separator
for the current TrafCI session. </para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW COLSEP </programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command displays the column separator.</para>
<programlisting>SQL> show colsep
COLSEP " "

SQL> set colsep *

SQL> show colsep
COLSEP "*"
</programlisting>
</listitem>
<listitem><para>This command displays the column separator.</para>
<programlisting>SQL> show colsep
COLSEP " "

SQL> set colsep *

SQL> show colsep
COLSEP "*"
</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="SHOW-ERRORCODE" pagebreak="yes">
<title>SHOW ERRORCODE Command</title>
<para><indexterm><primary>SHOW ERRORCODE command</primary></indexterm
>The SHOW ERRORCODE command is an alias for the SHOW LASTERROR command.
ERRORCODE is an alias for LASTERROR. <phrase>For more information,
see <xref linkend="SHOW-LASTERROR" role="select:quotedtitle page"
/>.</phrase></para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW ERRORCODE</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Examples</title>
<para>This command displays the error of the last SQL statement that
was executed:</para>
<!--WRITER'S NOTE: Is this just an SQL statement or any command run in the session?-->
<programlisting>SQL> SHOW ERRORCODE

ERRORCODE 29481</programlisting>
</section>
</section>
<section id="SHOW_FETCHSIZE" pagebreak="yes">
<title>SHOW FETCHSIZE Command</title>
<para><indexterm><primary>SHOW FETCHSIZE command</primary></indexterm
>The SHOW FETCHSIZE command displays the fetch size value for the
current TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW FETCHSIZE </programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line. </para>
</section>
<section>
<title>Examples</title>
<para>These commands display the fetch size in the current TrafCI
session, set the fetch size to a new value, and then redisplay the
fetch size:<programlisting>SQL>show fetchsize

FETCHSIZE 0 [Default]

SQL>SET fetchsize 1

SQL>SHOW fetchsize

FETCHSIZE 1</programlisting></para>
</section>
</section>
<section id="SHOW-HISTOPT" pagebreak="yes">
<title>SHOW HISTOPT Command</title>
<para><indexterm><primary>SHOW HISTOPT command</primary></indexterm
>The SHOW HISTOPT command displays the value that has been set for
the history option. </para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW HISTOPT </programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. </para>
</listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>This command displays the value set for the history option:<programlisting
>SQL>show histopt
HISTOPT DEFAULT [No expansion of script files]

SQL>set histopt all

SQL>show histopt
HISTOPT ALL
</programlisting></para>
</section>
</section>
<section id="i1009114" pagebreak="yes">
<title>SHOW IDLETIMEOUT Command</title>
<para><indexterm><primary>SHOW IDLETIMEOUT command</primary><secondary
>syntax of</secondary></indexterm>The SHOW IDLETIMEOUT command displays
the idle timeout value of the current TrafCI session. The idle timeout
value of a session determines when the session expires after a period
of inactivity. The default is 30 minutes.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW IDLETIMEOUT</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command shows that the idle timeout value of
the session is 30 minutes, which is the default:</para>
<programlisting>SQL>show idletimeout
IDLETIMEOUT 30 min(s)

Elapsed time:00:00:00:078</programlisting>
</listitem>
<listitem><para>This command shows that the idle timeout value of
the session is four hours:</para>
<programlisting>SQL>show idletimeout
IDLETIMEOUT 240 min(s)</programlisting>
</listitem>
<listitem><para>This command shows that the idle timeout value is
an infinite amount of time, meaning that the session never expires:</para>
<programlisting>SQL>show idletimeout
IDLETIMEOUT 0 min(s) [Never Expires]</programlisting>
</listitem>
<listitem><para>This command displays the elapsed time information
because SET TIMING command is enabled:</para>
<programlisting>SQL>set timing on

SQL>show idletimeout
IDLETIMEOUT 0 min(s) [Never Expires]

Elapsed time:00:00:00:078</programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref linkend="i1006792"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section condition="hidden" id="SHOW_INDEXES_Command" pagebreak="yes">
<title>SHOW INDEXES Command</title>
<para><indexterm><primary>SHOW INDEXES command</primary><secondary
>syntax of</secondary></indexterm>The SHOW INDEXES command displays
all the indexes on all the tables and materialized views in the current
schema of the TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW INDEXES [ ORDER BY TABLE ]</programlisting
></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term>ORDER BY TABLE</term>
<listitem><para>orders the results alphabetically based on the table
name.</para></listitem>
</varlistentry>
<varlistentry condition="hidden"><term><replaceable>table-name</replaceable
></term>
<listitem><para>displays all indexes associated with the specified
table in the current schema.</para></listitem>
</varlistentry>
<varlistentry condition="hidden"><term><replaceable>mv-name</replaceable
></term>
<listitem><para>displays all indexes associated with the specified
materialized view in the current schema.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command shows all the indexes and their associated
tables and materialized views in the current schema, SALES:</para>
<programlisting>SQL>show schema

SCHEMA SALES

SQL>show indexes

INDEX NAME                  BASE TABLE NAME               BASE TABLE TYPE
-------------------------------------------------------------------------
XCUSTNAM                    CUSTOMER                      TABLE          
XORDCUS                     ORDERS                        TABLE          
XORDREP                     ORDERS                        TABLE          
XPARTDES                    PARTS                         TABLE
SQL></programlisting>
</listitem>
<listitem><para>This command shows all the indexes and their associated
tables and materialized views in the current schema, SALES, and orders
the results alphabetically based on the table name:</para>
<programlisting>SQL>show indexes order by table

INDEX NAME                  BASE TABLE NAME               BASE TABLE TYPE
-------------------------------------------------------------------------
XCUSTNAM                    CUSTOMER                      TABLE          
XORDREP                     ORDERS                        TABLE          
XORDCUS                     ORDERS                        TABLE          
XPARTDES                    PARTS                         TABLE
SQL></programlisting>
</listitem>
<listitem condition="hidden"><para>This command shows all the indexes
associated with the specified table, CUSTOMER:</para>
<programlisting>SQL>show indexes on customer

INDEX NAME     
-------------------------------------------------
XCUSTNAM       
SQL></programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="SHOW-LASTERROR" pagebreak="yes">
<title>SHOW LASTERROR Command</title>
<para><indexterm><primary>SHOW LASTERROR command</primary></indexterm
>The SHOW LASTERROR command displays the error of the last SQL statement
that was executed. If the query was successful, 0 is returned; otherwise
an SQL error code is returned. <!--WRITER'S NOTE: Is it just SQL statements or any command run in the session?--></para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW LASTERROR</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>This command shows the last error in the current session:</para>
<programlisting>SQL>select * from emp;
*** ERROR[4082]Object <phrase>TRAFODION</phrase>.SCH.EMP does not exist or is inaccessible.

SQL>show lasterror
LASTERROR 4082</programlisting>
</section>
</section>
<section id="SHOW-LIST-COUNT" pagebreak="yes">
<title>SHOW LIST_COUNT Command</title>
<para><indexterm><primary>SHOW LIST_COUNT command</primary></indexterm
>The SHOW LIST_COUNT command displays the maximum number of rows to
be returned by SELECT statements in the current TrafCI session. The
default is zero, which means that all rows are returned.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW LIST_COUNT</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command shows that SELECT statements return all
rows in the current session:</para>
<programlisting>SQL>show list_count
LISTCOUNT 0 [All Rows]

Elapsed time:00:00:00:078</programlisting>
</listitem>
<listitem><para>This command shows that the maximum number of rows
to be displayed by SELECT statements in the session is five:</para>
<programlisting>SQL>set list_count 5

SQL>show list_count
LISTCOUNT 5

Elapsed time:00:00:00:078</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="SHOW-MARKUP" pagebreak="yes">
<title>SHOW MARKUP Command</title>
<para><indexterm><primary>SHOW MARKUP command</primary></indexterm
>The SHOW MARKUP command displays the value set for the markup option.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW MARKUP </programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. </para>
</listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>This command displays the value set for the markup option:<programlisting
>SQL>show markup
MARKUP RAW

Elapsed time:00:00:00:078</programlisting></para>
</section>
</section>
<section condition="hidden" id="i1015887" pagebreak="yes">
<title>SHOW MVGROUPS Command</title>
<para><indexterm><primary>SHOW MVGROUPS command</primary></indexterm
>The SHOW MVGROUPS command displays all or a set of the materialized
view groups in the current schema of the TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW MVGROUPS [<replaceable>wild-card-pattern</replaceable
>]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>wild-card-pattern</replaceable></term>
<listitem><para>is a character string used to search for and display
materialized view groups with names that match the character string. <replaceable
>wild-card-pattern</replaceable> matches an uppercase string unless
you enclose it within double quotes. To look for similar values, specify
only part of the characters of <replaceable>wild-card-pattern</replaceable
> combined with these <indexterm><primary>Wild-card characters</primary>
</indexterm>wild-card characters:</para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="DL1  desc list">
<colspec colwidth="0.23*"/>
<colspec colwidth="1.77*"/>
<tbody>
<row><entry>%</entry><entry>Use a percent sign (%) to indicate zero
or more characters of any type. For example, <literal>%art%</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"%art%"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>*</entry><entry>Use an asterisk (*) to indicate zero or
more characters of any type. For example, <literal>*art*</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"*art*"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>_</entry><entry>Use an underscore (_) to indicate any
single character. For example, <literal>boo_</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo_"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
<row><entry>?</entry><entry>Use a question mark (?) to indicate any
single character. For example, <literal>boo?</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo?"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If you do not specify a wild-card pattern in a SHOW
MVGROUPS command, TrafCI displays all the materialized view groups
that exist in the current schema.</para></listitem>
<listitem><para>If you specify a wild-card pattern in a SHOW MVGROUPS
command, TrafCI displays only the materialized view group names that
match the wild-card pattern.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command shows all the materialized view groups
in the current schema, PERSNL:</para>
<programlisting>SQL>show mvgroups

MATERIALIZED VIEW GROUP NAMES
-------------------------------------------------------------
MVGROUP1  MVGROUP2  EMPLOYEEINFO 

SQL></programlisting>
</listitem>
<listitem><para>This command shows all the materialized view groups
in the current schema, PERSNL, that have “GROUP” in their names:</para>
<programlisting>SQL>show mvgroups %group%

MATERIALIZED VIEW GROUP NAMES
-------------------------------------------------------------
MVGROUP1  MVGROUP2        

SQL>
</programlisting>
</listitem>
<listitem><para>This command shows all the materialized view groups
in the current schema, SALES, that are named “PART” followed by one
character:</para>
<programlisting>SQL>show mvgroups "PART_"

MATERIALIZED VIEW GROUP NAMES
-------------------------------------------------------------
PART1  PART2  PARTS        

SQL></programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section condition="hidden" id="i1011926" pagebreak="yes">
<title>SHOW MVS Command</title>
<para><indexterm><primary>SHOW MVS command</primary><secondary>syntax
of</secondary></indexterm>The SHOW MVS command displays all or a set
of the materialized views in the current schema of the TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW MVS [<replaceable>wild-card-pattern</replaceable
>]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>wild-card-pattern</replaceable></term>
<listitem><para><indexterm><primary>Materialized views</primary>
<secondary>wild-card search</secondary></indexterm><indexterm><primary
>Wild-card search</primary><secondary>materialized views</secondary>
</indexterm>is a character string used to search for and display materialized
views with names that match the character string. <replaceable>wild-card-pattern</replaceable
> matches an uppercase string unless you enclose it within double
quotes. To look for similar values, specify only part of the characters
of <replaceable>wild-card-pattern</replaceable> combined with these
wild-card characters:</para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="DL1  desc list">
<colspec colwidth="0.22*"/>
<colspec colwidth="1.78*"/>
<tbody>
<row><entry>%</entry><entry>Use a percent sign (%) to indicate zero
or more characters of any type. For example, <literal>%art%</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"%art%"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>*</entry><entry>Use an asterisk (*) to indicate zero or
more characters of any type. For example, <literal>*art*</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"*art*"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>_</entry><entry>Use an underscore (_) to indicate any
single character. For example, <literal>boo_</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo_"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
<row><entry>?</entry><entry>Use a question mark (?) to indicate any
single character. For example, <literal>boo?</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo?"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If you do not specify a wild-card pattern in a SHOW
MVS command, TrafCI displays all the materialized views that exist
in the current schema.</para></listitem>
<listitem><para>If you specify a wild-card pattern in a SHOW MVS command,
TrafCI displays only the materialized view names that match the wild-card
pattern.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command shows all the materialized views in the
current schema, PERSNL:</para>
<programlisting>SQL>show mvs;

MATERIALIZED VIEW NAMES
-------------------------------------------------------------
mvemp1  mvemp2  mvemp3  mvjobdesc

SQL></programlisting>
</listitem>
<listitem><para>This command shows all the materialized views in the
current schema, PERSNL, that have “EMP” in their names:</para>
<programlisting>SQL>show mvs %emp%;

MATERIALIZED VIEW NAMES
-------------------------------------------------------------
MVEMP1  MVEMP2  MVEMP3

SQL></programlisting>
</listitem>
<listitem><para>This command shows all the materialized views in the
current schema, SALES, that are named “ORDER” followed by one character:</para>
<programlisting>SQL>show mvs "ORDER_"

MATERIALIZED VIEW NAMES
-------------------------------------------------------------
ORDER1  ORDER2  ORDERS

SQL></programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="i1010250" pagebreak="yes">
<title>SHOW PARAM Command</title>
<para><indexterm><primary>SHOW PARAM command</primary><secondary>syntax
of</secondary></indexterm>The SHOW PARAM command displays the parameters
that are set in the current TrafCI session. </para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW PARAM</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Example</title>
<itemizedlist>
<listitem><para>This command shows that parameters that are set for
the current session:</para>
<programlisting>SQL>show param
lastname GREEN
dn 1500
sal 40000.00</programlisting>
</listitem>
<listitem><para>This command shows that when no parameters exist,
the SHOW PARAM command displays an error message:</para>
<programlisting>SQL>show param
No parameters found.
</programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref linkend="i1007123"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="SHOW-PREPARED" pagebreak="yes">
<title>SHOW PREPARED Command</title>
<para><indexterm><primary>SHOW PREPARED command</primary></indexterm
>The SHOW PREPARED command displays the prepared statements in the
current TrafCI session. If a pattern is specified, all prepared statements
matching the prepared statement name pattern are displayed. By default,
all prepared statements in the current session are displayed.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW PREPARED [<emphasis role="italic"
>stmtNamePattern</emphasis>] </programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>This command shows all the prepared statements, by default:</para>
<programlisting>SQL>show prepared
S1
        select * from t1

S2
        select * from student

T1
        select * from test123


SQL> show prepared s%

S1
        select * from t1

S2
        select * from student


SQL> show prepared t%

T1
        select * from test123
</programlisting>
</section>
</section>
<section condition="hidden" id="SHOW-PROCEDURES" pagebreak="yes">
<title>SHOW PROCEDURES Command</title>
<para><indexterm><primary>SHOW PROCEDURES command</primary></indexterm
>The SHOW PROCEDURES command displays the procedures (Stored Procedures
in Java) in the current schema of the TrafCI session. If a pattern
is specified, all procedures matching the pattern are displayed. By
default, all procedures in the current schema of the TrafCI session
are displayed.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW PROCEDURES [<replaceable>wild-card-pattern</replaceable
>] </programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>wild-card-pattern</replaceable></term>
<listitem><para><indexterm><primary>Procedures, wild-card search</primary>
</indexterm><indexterm><primary>Wild-card search</primary><secondary
>procedures</secondary></indexterm>is a character string used to search
for and display procedures with names that match the character string. <replaceable
>wild-card-pattern</replaceable> matches an uppercase string unless
you enclose it within double quotes. To look for similar values, specify
only part of the characters of <replaceable>wild-card-pattern</replaceable
> combined with these wild-card characters:</para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="DL1  desc list">
<colspec colwidth="0.19*"/>
<colspec colwidth="1.81*"/>
<tbody>
<row><entry>%</entry><entry>Use a percent sign (%) to indicate zero
or more characters of any type. For example, <literal>%art%</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"%art%"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>*</entry><entry>Use an asterisk (*) to indicate zero or
more characters of any type. For example, <literal>*art*</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"*art*"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>_</entry><entry>Use an underscore (_) to indicate any
single character. For example, <literal>boo_</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo_"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
<row><entry>?</entry><entry>Use a question mark (?) to indicate any
single character. For example, <literal>boo?</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo?"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If you do not specify a wild-card pattern, TrafCI
displays all procedures that exist in the current schema.</para>
</listitem>
<listitem><para>If you specify a wild-card pattern, TrafCI displays
only the procedure names that match the wild-card pattern.</para>
</listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>This command shows all the procedures, by default:</para>
<programlisting>SQL>show procedures;

PROCEDURES NAMES
-------------------------------------------------------------------------
ADJUSTSALARY          DAILYORDERS        EMPLOYEEJOB               HELLO
HELLOSTRING           LOWERPRICE         MONTHLYORDERS             MYPROC
N0101                 N0122              N0124                     N0200
N0202                 N0209              N0210                     N0211
N0212                 N0213              N0216                     N0226A
N0302                 N4210              N4260                     N4261
N4264                 N4267          </programlisting>
</section>
</section>
<section id="SHOW-RECCOUNT" pagebreak="yes">
<title>SHOW RECCOUNT Command</title>
<para><indexterm><primary>SHOW RECOUNT command</primary></indexterm
>The SHOW RECCOUNT command displays the record count of the previously
executed SQL statement. If the previously executed command was an
interface command, TrafCI returns zero. <phrase condition="hidden"
>Otherwise, TrafCI returns the count of the previously executed SQL
statement. For commands that invoke the catalog APIs—SHOW TABLES,
VIEWS, SYNONYMS, MVS, and so on—SHOW RECCOUNT returns the count of
the database objects.</phrase></para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW RECCOUNT  </programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not need an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>This command displays the record count of the SQL statement
that was executed last:</para>
<programlisting>SQL> select * from employee;

SQL>show reccount
RECCOUNT 62</programlisting>
</section>
</section>
<section id="SHOW-REMOTEPROCESS" pagebreak="yes">
<title>SHOW REMOTEPROCESS Command</title>
<para><indexterm><primary>SHOW REMOTEPROCESS command</primary>
</indexterm><indexterm><primary>DCS server, showing the process name</primary>
</indexterm><indexterm><primary>MXOSRVR, showing the process name</primary>
</indexterm>The SHOW REMOTEPROCESS command displays the process name
of the DCS server that is handling the current connection.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW REMOTEPROCESS</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not need an SQL terminator.</para></listitem>
<listitem><para>The command does not need an SQL terminator.</para>
</listitem>
</itemizedlist>
</section>
<section>
<title>Example</title>
<para>This command displays the process name, <literal>\g4t3028.houston.hp.com:0.$Z0000M2</literal
>, of the DCS server that is handling the current connection:</para>
<programlisting>SQL>show remoteprocess

REMOTE PROCESS \g4t3028.houston.hp.com:0.$Z0000M2

SQL></programlisting>
</section>
</section>
<section condition="hidden" id="SHOW-ROLE" pagebreak="yes">
<title>SHOW ROLE Command</title>
<para><indexterm><primary>SHOW ROLE command</primary></indexterm>The
SHOW ROLE command displays the role in which you are currently logged
on during an TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW ROLE</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line. The command does not
require an SQL terminator.</para>
</section>
<section>
<title>Example</title>
<para>This SHOW ROLE command displays the current role for the TrafCI
session:</para>
<programlisting>SQL>set connectopt role DB__USERADMINUSER
SQL>connect johndoe@blip.com, mydsn
Password: 
SQL>show role
ROLE DB__USERADMIN</programlisting>
<para>For more information, see the <xref linkend="CONNECT-Command"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="i1005258" pagebreak="yes">
<title>SHOW SCHEMA Command</title>
<para><indexterm><primary>SHOW SCHEMA command</primary><secondary
>syntax of</secondary></indexterm>The SHOW SCHEMA command displays
the current schema of the TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW SCHEMA</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Example</title>
<para>This command shows that the current schema of the session is
PERSNL:</para>
<programlisting>SQL>show schema
SCHEMA PERSNL</programlisting>
<para>For more information, see <xref linkend="i1004597"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section condition="hidden" id="i1005262" pagebreak="yes">
<title>SHOW SCHEMAS Command</title>
<para><indexterm><primary>SHOW SCHEMAS command</primary><secondary
>syntax of</secondary></indexterm>The SHOW SCHEMAS command displays
all or a set of the schemas that exist in the default catalog of the
current TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW SCHEMAS [<replaceable>wild-card-pattern</replaceable
>]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>wild-card-pattern</replaceable></term>
<listitem><para><indexterm><primary>Schema</primary><secondary>wild-card
search</secondary></indexterm><indexterm><primary>Wild-card search</primary>
<secondary>schemas</secondary></indexterm>is a character string used
to search for and display schemas with names that match the character
string. <replaceable>wild-card-pattern</replaceable> matches an uppercase
string unless you enclose it within double quotes. To look for similar
values, specify only part of the characters of <replaceable>wild-card-pattern</replaceable
> combined with these wild-card characters:</para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="DL1  desc list">
<colspec colwidth="0.21*"/>
<colspec colwidth="1.79*"/>
<tbody>
<row><entry>%</entry><entry>Use a percent sign (%) to indicate zero
or more characters of any type. For example, <literal>%art%</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"%art%"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>*</entry><entry>Use an asterisk (*) to indicate zero or
more characters of any type. For example, <literal>*art*</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"*art*"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>_</entry><entry>Use an underscore (_) to indicate any
single character. For example, <literal>boo_</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo_"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
<row><entry>?</entry><entry>Use a question mark (?) to indicate any
single character. For example, <literal>boo?</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo?"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If you do not specify a wild-card pattern in a SHOW
SCHEMAS command, TrafCI displays all the schemas that exist in the
default catalog.</para></listitem>
<listitem><para>If you specify a wild-card pattern in a SHOW SCHEMAS
command, TrafCI displays only the schema names that match the wild-card
pattern.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command shows all the schemas that exist in the
default catalog of the current session:</para>
<programlisting>SQL>show schemas

SCHEMA NAMES
-------------------------------------------------------------------------
HP_DEFINITION_SCHEMA   HP_TRANSPORTER    HP_USTAT    PUBLIC_ACCESS_SCHEMA
HP_INFORMATION_SCHEMA  SCHEMA NAMES

SQL></programlisting>
</listitem>
<listitem><para>This command shows the schemas in the default catalog
that have “SALES” in their names:</para>
<programlisting>SQL>show schemas %sales%

SCHEMA NAMES
------------------------------------------------------------------------
DBSCRIPT_SALES             D_SALES                         ODBC_SALES
SALES

SQL></programlisting>
</listitem>
</itemizedlist>
<para condition="hidden">For more information, see <xref
linkend="i1005377" role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="SESSION" pagebreak="yes">
<title>SHOW SESSION Command</title>
<para><indexterm><primary>SHOW SESSION command</primary></indexterm
><indexterm><primary>SESSION command</primary></indexterm>SHOW SESSION
or SESSION displays attributes of the current TrafCI session. You
can also use the ENV command to perform the same function.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>[SHOW] SESSION</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
<listitem><para>SHOW SESSION or SESSION displays these attributes:</para>
<informaltable frame="none">
<tgroup cols="2" colsep="0" rowsep="0">
<colspec colname="col1" colwidth="0.53*"/>
<colspec colname="col2" colwidth="1.47*"/>
<tbody>
<row><entry>COLSEP</entry><entry>Current column separator, which is
used to control how query results are displayed. <phrase>For more
information, see <xref linkend="SET-COLSEP"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row condition="hidden"><entry>DATASOURCE</entry><entry>Name of the
data source that you entered when logging in to the database platform. <phrase
>For more information, see <xref linkend="i1008715"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row><entry>HISTOPT</entry><entry>Current history options, which controls
how the commands are added to the history buffer. <phrase>For more
information, see <xref linkend="SET-HISTOPT"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row><entry>IDLETIMEOUT</entry><entry>Current idle timeout value,
which determines when the session expires after a period of inactivity.
By default, the idle timeout is 30 minutes. <phrase>For more information,
see <xref linkend="i1006792" role="select:quotedtitle page"/> and <xref
linkend="i1008731" role="select:quotedtitle page"/>.</phrase></entry>
</row>
<row><entry>LIST_COUNT</entry><entry>Current list count, which is
the maximum number of rows that can be returned by SELECT statements.
By default, the list count is all rows. <phrase>For more information,
see <xref linkend="SET-LIST-COUNT" role="select:quotedtitle page"
/>.</phrase></entry></row>
<row><entry>LOG FILE</entry><entry>Current log file and the directory
containing the log file. By default, logging during a session is turned
off. <phrase>For more information, see <xref linkend="i1006598"
role="select:quotedtitle page"/> and <xref linkend="i1005420"
role="select:quotedtitle page"/> or <xref linkend="i1005290"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row><entry>LOG OPTIONS</entry><entry>Current logging options. By
default, logging during a session is turned off, and this attribute
does not appear in the output. <phrase>For more information, see the <xref
linkend="i1005420" role="select:quotedtitle page"/> or <xref
linkend="i1005290" role="select:quotedtitle page"/>.</phrase></entry>
</row>
<row condition="hidden"><entry>LOOK AND FEEL</entry><entry>Current
look and feel of TrafCI. This property affects the formatting of status
messages. <phrase>For more information, see <xref linkend="i1010161"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row><entry>MARKUP</entry><entry>Current markup option selected for
the session. The default option is RAW. <phrase>For more information,
see <xref linkend="SET-MARKUP" role="select:quotedtitle page"/>.</phrase
></entry></row>
<row><entry>PROMPT</entry><entry>Current prompt for the session. For
example, the default is SQL>. <phrase>For more information, see <xref
linkend="i1004585" role="select:quotedtitle page"/> and <xref
linkend="SET-PROMPT" role="select:quotedtitle page"/>.</phrase></entry>
</row>
<row condition="hidden"><entry>ROLE</entry><entry>Current role for
the session. </entry></row>
<row><entry>SCHEMA</entry><entry>Current schema. The default is USR. <phrase
>For more information, see <xref linkend="i1004597"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row><entry>SERVER</entry><entry>Host name and port number that you
entered when logging in to the database platform. <phrase>For more
information, see <xref linkend="i1008715" role="select:quotedtitle page"
/>.</phrase></entry></row>
<row condition="hidden"><entry>SERVICE NAME</entry><entry>Current
service name for the session. </entry></row>
<row><entry>SQLTERMINATOR</entry><entry>Current SQL statement terminator.
The default is a semicolon (;). <phrase>For more information, see <xref
linkend="i1004589" role="select:quotedtitle page"/> and <xref
linkend="i1005270" role="select:quotedtitle page"/>.</phrase></entry>
</row>
<row><entry>STATISTICS</entry><entry>Current setting (on or off) of
statistics. For more information, see the <xref linkend="set-statistics"
role="select:quotedtitle page"/>.</entry></row>
<row><entry>TIME</entry><entry>Current setting (on or off) of the
local time as part of the prompt. When this command is set to on,
military time is displayed. By default, the local time is off. <phrase
>For more information, see <xref linkend="i1004585"
role="select:quotedtitle page"/> and <xref linkend="i1005242"
role="select:quotedtitle page"/>.</phrase></entry></row>
<row><entry>TIMING</entry><entry>Current setting (on or off) of the
elapsed time. By default, the elapsed time is off. <phrase>For more
information, see <xref linkend="i1004593" role="select:quotedtitle page"
/> and <xref linkend="i1005246" role="select:quotedtitle page"/>.</phrase
></entry></row>
<row><entry>USER</entry><entry>User name that you entered when logging
in to the database platform. <phrase>For more information, see <xref
linkend="i1008715" role="select:quotedtitle page"/>.</phrase></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This SHOW SESSION command displays the attributes
of the current session:</para>
<programlisting>SQL>show session

COLSEP          " "
<phrase condition="hidden">DATASOURCE      TDM_Default_DataSource
</phrase>HISTOPT         DEFAULT [No expansion of script files]
IDLETIMEOUT     0 min(s) [Never Expires]
LIST_COUNT      0 [All Rows]
LOG FILE        c:\session.txt
LOG OPTIONS     APPEND,CMDTEXT ON
MARKUP          RAW
PROMPT          SQL>
SCHEMA          SEABASE
SERVER          sqws135.houston.hp.com:23400
SQLTERMINATOR   ;
STATISTICS      OFF
TIME            OFF
TIMING          OFF
USER            user1</programlisting>
</listitem>
<listitem><para>This SESSION command shows the effect of setting various
session attributes:</para>
<programlisting>SQL>session

COLSEP          " "
<phrase condition="hidden">DATASOURCE      TDM_Default_DataSource
</phrase>HISTOPT         DEFAULT [No expansion of script files]
IDLETIMEOUT     30 min(s)
LIST_COUNT      0 [All Rows]
LOG             OFF
MARKUP          RAW
PROMPT          SQL>
SCHEMA          SEABASE
SERVER          sqws135.houston.hp.com:23400
SQLTERMINATOR   ;
STATISTICS      OFF
TIME            OFF
TIMING          OFF
USER            user1

SQL></programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="i1005266" pagebreak="yes">
<title>SHOW SQLPROMPT Command</title>
<para><indexterm><primary>SHOW SQLPROMPT command</primary></indexterm
>The SHOW SQLPROMPT command displays the value of the SQL prompt for
the current TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW SQLPROMPT</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Example</title>
<para>This command shows that the SQL prompt for the current session
is <literal>SQL></literal>:</para>
<programlisting>SQL>show sqlprompt
SQLPROMPT SQL></programlisting>
</section>
</section>
<section id="i1005270" pagebreak="yes">
<title>SHOW SQLTERMINATOR Command</title>
<para><indexterm><primary>SHOW SQLTERMINATOR command</primary>
</indexterm>The SHOW SQLTERMINATOR command displays the SQL statement
terminator of the current TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW SQLTERMINATOR</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Example</title>
<para>This command shows that the SQL terminator for the current session
is a period (.):</para>
<programlisting>SQL>show sqlterminator
SQLTERMINATOR .
</programlisting>
<para>For more information, see <xref linkend="i1004589"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="show-statistics" pagebreak="yes">
<title>SHOW STATISTICS Command</title>
<para><indexterm><primary>SHOW STATISTICS command</primary></indexterm
>The SHOW STATISTICS command displays if statistics has been enabled
or disabled for the current session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW STATISTICS</programlisting></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Example</title>
<para>This command shows SHOW STATISTICS disabled and then enabled:</para>
<programlisting>SQL>show statistics
STATISTICS OFF

SQL>set statistics on
 
SQL>show statistics
STATISTICS ON
</programlisting>
</section>
</section>
<section condition="hidden" id="i1012014" pagebreak="yes">
<title>SHOW SYNONYMS Command</title>
<para><indexterm><primary>SHOW SYNONYMS command</primary><secondary
>syntax of</secondary></indexterm>The SHOW SYNONYMS command displays
all or a set of the synonyms in the current schema of the TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW SYNONYMS [<replaceable>wild-card-pattern</replaceable
>]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>wild-card-pattern</replaceable></term>
<listitem><para><indexterm><primary>Synonyms</primary><secondary>wild-card
search</secondary></indexterm><indexterm><primary>Wild-card search</primary>
<secondary>synonyms</secondary></indexterm>is a character string used
to search for and display synonyms with names that match the character
string. <replaceable>wild-card-pattern</replaceable> matches an uppercase
string unless you enclose it within double quotes. To look for similar
values, specify only part of the characters of <replaceable>wild-card-pattern</replaceable
> combined with these wild-card characters:</para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="DL1  desc list">
<colspec colwidth="0.18*"/>
<colspec colwidth="1.82*"/>
<tbody>
<row><entry>%</entry><entry>Use a percent sign (%) to indicate zero
or more characters of any type. For example, <literal>%art%</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"%art%"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>*</entry><entry>Use an asterisk (*) to indicate zero or
more characters of any type. For example, <literal>*art*</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"*art*"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>_</entry><entry>Use an underscore (_) to indicate any
single character. For example, <literal>boo_</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo_"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
<row><entry>?</entry><entry>Use a question mark (?) to indicate any
single character. For example, <literal>boo?</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo?"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If you do not specify a wild-card pattern in a SHOW
SYNONYMS command, TrafCI displays all the synonyms that exist in the
current schema.</para></listitem>
<listitem><para>If you specify a wild-card pattern in a SHOW SYNONYMS
command, TrafCI displays only the synonym names that match the wild-card
pattern.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command shows all the synonyms in the current
schema, SALES:</para>
<programlisting>SQL>show synonyms

SYNONYM NAMES
-------------------------------------------------------------
CUST  DTLS  ORDR  PRTS  

SQL></programlisting>
</listitem>
<listitem><para>This command shows all the synonyms in the current
schema, SALES, that have “S” at the end of their names:</para>
<programlisting>SQL>show synonyms %s

SYNONYM NAMES
-------------------------------------------------------------
DTLS  PRTS  

SQL></programlisting>
</listitem>
<listitem><para>This command shows all the synonyms in the current
schema, SALES, that are named “PRT” followed by one character:</para>
<programlisting>SQL>show synonyms "PRT_"

SYNONYM NAMES
-------------------------------------------------------------
PRTS  

SQL></programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section condition="hidden" id="i1009180" pagebreak="yes">
<title>SHOW TABLE Command</title>
<para><indexterm><primary>SHOW TABLE command</primary><secondary>syntax
of</secondary></indexterm>The SHOW TABLE command displays a list of
the indexes, materialized views, synonyms, or triggers associated
with a specified table or materialized view.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW TABLE {<replaceable>table-name</replaceable
> | <replaceable>materialized-view-name</replaceable>}, 
           { INDEXES | MVS | SYNONYMS | TRIGGERS | ALL}</programlisting
><programlisting><replaceable>table-name</replaceable> is:</programlisting
><programlisting>    [<replaceable>schema-name</replaceable>.]<replaceable
>table-name</replaceable></programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>table-name</replaceable></term>
<listitem><para>specifies the name of a table. If you do not fully
qualify the <replaceable>table-name</replaceable>, TrafCI uses the
current schema.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>materialized-view-name</replaceable
></term>
<listitem><para>specifies the name of a materialized view. If you
do not fully qualify the <replaceable>materialized-view-name</replaceable
>, TrafCI uses the current schema.</para></listitem>
</varlistentry>
<varlistentry><term>INDEXES</term>
<listitem><para>displays a list of the indexes associated with the
specified table or materialized view.</para></listitem>
</varlistentry>
<varlistentry><term>MVS</term>
<listitem><para>displays a list of the materialized views associated
with the specified table or materialized view.</para></listitem>
</varlistentry>
<varlistentry><term>SYNONYMS</term>
<listitem><para>displays a list of the synonyms associated with the
specified table or materialized view.</para></listitem>
</varlistentry>
<varlistentry><term>TRIGGERS</term>
<listitem><para>displays a list of the triggers associated with the
specified table or materialized view.</para></listitem>
</varlistentry>
<varlistentry><term>ALL</term>
<listitem><para>displays a list of the indexes, materialized views,
synonyms, and triggers for a specified table or materialized view.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command shows a list of the indexes associated
with the EMPLOYEE table:</para>
<programlisting>SQL>show table persnl.employee, indexes
INDEX NAME 
---------- 
XEMPNAME   
XEMPDEPT   

SQL></programlisting>
</listitem>
<listitem><para>This command shows a list of the materialized views
associated with the ODETAIL table:</para>
<programlisting>SQL>show table sales.odetail, mvs
MATERIALIZED VIEW NAME 
---------------------- 
SALES.ODETAIL_MV       

SQL></programlisting>
</listitem>
<listitem><para>This command shows a list of the synonyms associated
with the ODETAIL table:</para>
<programlisting>SQL>show table sales.odetail, synonyms
SYNONYM NAME 
------------ 
INVENT.DET   

SQL></programlisting>
</listitem>
<listitem><para>This command shows a list of the triggers associated
with the EMPLOYEE table:</para>
<programlisting>SQL>show table persnl.employee, triggers
TRIGGER NAME    
--------------- 
PERSNL.NEW_HIRE 
PERSNL.WFR      

SQL></programlisting>
</listitem>
<listitem><para>This command shows a list of all the database objects
associated with the EMPLOYEE table:<programlisting>SQL>show table persnl.employee, all
INDEXES                                                                          
-------------------------------------------------------------------------------- 
XEMPNAME                                                                         
XEMPDEPT                                                                         

No synonyms present for object, PERSNL.EMPLOYEE

No materialized views present for object, PERSNL.EMPLOYEE
TRIGGERS                                                                         
-------------------------------------------------------------------------------- 
PERSNL.NEW_HIRE                                                                  
PERSNL.WFR                                                                       

SQL></programlisting><phrase>For more information, see <xref
linkend="i1009685" role="select:quotedtitle page"/>.</phrase></para>
</listitem>
</itemizedlist>
</section>
</section>
<section condition="hidden" id="i1005274" pagebreak="yes">
<title>SHOW TABLES Command</title>
<para><indexterm><primary>SHOW TABLES command</primary><secondary
>syntax of</secondary></indexterm>The SHOW TABLES command displays
all or a set of the tables that exist in the current schema of the
TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW TABLES [<replaceable>wild-card-pattern</replaceable
>]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>wild-card-pattern</replaceable></term>
<listitem><para><indexterm><primary>Tables</primary><secondary>wild-card
search</secondary></indexterm><indexterm><primary>Wild-card search</primary>
<secondary>tables</secondary></indexterm>is a character string used
to search for and display tables with names that match the character
string. <replaceable>wild-card-pattern</replaceable> matches an uppercase
string unless you enclose it within double quotes. To look for similar
values, specify only part of the characters of <replaceable>wild-card-pattern</replaceable
> combined with these wild-card characters:</para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="DL1  desc list">
<colspec colwidth="0.19*"/>
<colspec colwidth="1.81*"/>
<tbody>
<row><entry>%</entry><entry>Use a percent sign (%) to indicate zero
or more characters of any type. For example, <literal>%art%</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"%art%"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>*</entry><entry>Use an asterisk (*) to indicate zero or
more characters of any type. For example, <literal>*art*</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"*art*"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>_</entry><entry>Use an underscore (_) to indicate any
single character. For example, <literal>boo_</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo_"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
<row><entry>?</entry><entry>Use a question mark (?) to indicate any
single character. For example, <literal>boo?</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo?"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If you do not specify a wild-card pattern in a SHOW
TABLES command, TrafCI displays all the tables that exist in the current
schema.</para></listitem>
<listitem><para>If you specify a wild-card pattern in a SHOW TABLES
command, TrafCI displays only the table names that match the wild-card
pattern.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command shows all the tables in the current schema,
PERSNL:</para>
<programlisting>SQL>show schema
SCHEMA PERSNL

SQL>show tables

TABLE NAMES
-------------------------------------------------------------
DEPT      EMPLOYEE  JOB       PROJECT

SQL></programlisting>
</listitem>
<listitem><para>This command shows the tables in the current schema,
INVENT, that have “PART” at the beginning of their names:</para>
<programlisting>SQL>show tables part%

TABLE NAMES
-------------------------------------------------------------
PARTLOC   PARTSUPP  

SQL></programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref linkend="i1004959"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="i1005278" pagebreak="yes">
<title>SHOW TIME Command</title>
<para><indexterm><primary>SHOW TIME command</primary></indexterm>The
SHOW TIME command displays whether the setting for the local time
in the interface prompt is ON or OFF.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW TIME</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Example</title>
<para>This command shows that the setting for the local time in the
SQL prompt is OFF:</para>
<programlisting>SQL>show time
TIME OFF</programlisting>
</section>
</section>
<section id="i1005282" pagebreak="yes">
<title>SHOW TIMING Command</title>
<para><indexterm><primary>SHOW TIMING command</primary></indexterm
>The SHOW TIMING command displays whether the setting for the elapsed
time is ON or OFF.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW TIMING</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Example</title>
<itemizedlist>
<listitem><para>This command displays the elapsed time information
because the SET TIMING command is enabled:</para>
<programlisting>SQL>set timing on

SQL>show time
TIME OFF

Elapsed :00:00:00.000
</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section condition="hidden" id="SHOW_TRIGGERS_Command" pagebreak="yes">
<title>SHOW TRIGGERS Command</title>
<para><indexterm><primary>SHOW TRIGGERS command</primary><secondary
>syntax of</secondary></indexterm>The SHOW TRIGGERS command displays
the names of the triggers associated with the specified table in the
current schema of the TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW TRIGGERS ON <replaceable>table-name</replaceable
></programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>table-name</replaceable></term>
<listitem><para>is the name of a table in the current schema.</para>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<para>This command lists all the triggers associated with the table,
PRESCRIPTION, in the current schema, PHARM:</para>
<programlisting>SQL>show schema

SCHEMA PHARM

SQL>show triggers on prescription;

TRIGGER NAME   
-------------------------------------------------

PHARM.ALTERNATE_DRUG 
SQL></programlisting>
</section>
</section>
<section condition="hidden" id="i1009184" pagebreak="yes">
<title>SHOW VIEWS Command</title>
<para><indexterm><primary>SHOW VIEWS command</primary><secondary>syntax
of</secondary></indexterm>The SHOW VIEWS command displays all or a
set of the views that exist in the current schema of the TrafCI session.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SHOW VIEWS [<replaceable>wild-card-pattern</replaceable
>]</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>wild-card-pattern</replaceable></term>
<listitem><para><indexterm><primary>Views</primary><secondary>wild-card
search</secondary></indexterm><indexterm><primary>Wild-card search</primary>
<secondary>views</secondary></indexterm>is a character string used
to search for and display views with names that match the character
string. <replaceable>wild-card-pattern</replaceable> matches an uppercase
string unless you enclose it within double quotes. To look for similar
values, specify only part of the characters of <replaceable>wild-card-pattern</replaceable
> combined with these wild-card characters:</para>
<informaltable colsep="0" frame="none" rowsep="0">
<tgroup cols="2" tgroupstyle="DL1  desc list">
<colspec colwidth="0.19*"/>
<colspec colwidth="1.81*"/>
<tbody>
<row><entry>%</entry><entry>Use a percent sign (%) to indicate zero
or more characters of any type. For example, <literal>%art%</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"%art%"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>*</entry><entry>Use an asterisk (*) to indicate zero or
more characters of any type. For example, <literal>*art*</literal
> matches <literal>SMART</literal>, <literal>ARTIFICIAL</literal>,
and <literal>PARTICULAR</literal> but not <literal>smart</literal
> or <literal>Hearts</literal>. <literal>"*art*"</literal> matches <literal
>smart</literal> and <literal>Hearts</literal> but not <literal>SMART</literal
>, <literal>ARTIFICIAL</literal>, or <literal>PARTICULAR</literal
>.</entry></row>
<row><entry>_</entry><entry>Use an underscore (_) to indicate any
single character. For example, <literal>boo_</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo_"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
<row><entry>?</entry><entry>Use a question mark (?) to indicate any
single character. For example, <literal>boo?</literal> matches <literal
>BOOK</literal> and <literal>BOOT</literal> but not <literal>BOO</literal
> or <literal>BOOTS</literal>. <literal>"boo?"</literal> matches <literal
>book</literal> and <literal>boot</literal> but not <literal>boo</literal
> or <literal>boots</literal>.</entry></row>
</tbody>
</tgroup>
</informaltable>
</listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>If you do not specify a wild-card pattern in a SHOW
VIEWS command, TrafCI displays all the views (not materialized views)
that exist in the current schema.</para></listitem>
<listitem><para>If you specify a wild-card pattern in a SHOW VIEWS
command, TrafCI displays only the view names that match the wild-card
pattern.</para></listitem>
<listitem><para>If the SET TIMING command is set to ON, the elapsed
time information is displayed.</para></listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command shows all the views that exist in the
current schema, SALES:</para>
<programlisting>SQL>show schema
SCHEMA INVENT

SQL>show views

VIEW NAMES
-------------------------------------------------------------
VIEW207   VIEW207N  VIEWCS    VIEWCUST  

SQL></programlisting>
</listitem>
<listitem><para>This command shows the views in the current schema,
INVENT, that have “VIEW” at the beginning of their names:</para>
<programlisting>SQL>show views view%

VIEW NAMES
-------------------------------------------------------------
VIEW207   VIEW207N  VIEWCS    VIEWCUST  

SQL></programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref linkend="i1009772"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section id="i1005290" pagebreak="yes">
<title>SPOOL Command</title>
<para><indexterm><primary>SPOOL command</primary><secondary>syntax
of</secondary></indexterm>The SPOOL command logs the entered commands
and their output from TrafCI to a log file.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>SPOOL { ON [CLEAR, QUIET, CMDTEXT {ON | OFF}] 
      | <replaceable>log-file</replaceable> [CLEAR, QUIET, CMDTEXT {ON | OFF}]  
      | OFF }</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term>ON</term>
<listitem><para>starts the logging process and records information
in the <literal>sqlspool.lst</literal> file in the <literal>bin</literal
> directory.</para></listitem>
</varlistentry>
<varlistentry><term>ON CLEAR</term>
<listitem><para>instructs TrafCI to clear the contents of the <literal
>sqlspool.lst</literal> file before logging new information to the
file.</para></listitem>
</varlistentry>
<varlistentry><term>QUIET</term>
<listitem><para>specifies that the command text is displayed on the
screen, but the results of the command are written only to the log
file and not to the screen. </para></listitem>
</varlistentry>
<varlistentry><term>CMDTEXT ON</term>
<listitem><para>specifies that the command text and the log header
are displayed in the log file.</para></listitem>
</varlistentry>
<varlistentry><term>CMDTEXT OFF</term>
<listitem><para>specifies that the command text and the log header
are not displayed in the log file.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>log-file</replaceable></term>
<listitem><para>is the name of a log file into which TrafCI records
the entered commands and their output. If you want the log file to
exist outside the local directory where you launch TrafCI (by default,
the <literal>bin</literal> directory), specify the full directory
path of the log file. The log file does not need to exist, but the
specified directory must exist before you execute the SPOOL command. </para>
</listitem>
</varlistentry>
<varlistentry><term><replaceable>log-file</replaceable> CLEAR</term>
<listitem><para>instructs TrafCI to clear the contents of the specified <replaceable
>log-file</replaceable> before logging new information to the file.</para>
</listitem>
</varlistentry>
<varlistentry><term>OFF</term>
<listitem><para>stops the logging process.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>Use a unique name for each log file to avoid writing
information from different TrafCI sessions into the same log file.</para>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command starts the logging process and records
information to the <literal>sqlspool.lst</literal> file in the <literal
>bin</literal> directory:</para>
<programlisting>SQL>spool on</programlisting>
</listitem>
<listitem><para>This command starts the logging process and appends
new information to an existing log file, <literal>persnl_updates.log</literal
>, in the local directory (the same directory where you are running
TrafCI):</para>
<programlisting>SQL>spool persnl_updates.log</programlisting>
</listitem>
<listitem><para>This command starts the logging process and appends
new information to a log file, <literal>sales_updates.log</literal
>, in the specified directory on a Windows workstation:</para>
<programlisting>SQL>spool c:\log_files\sales_updates.log</programlisting>
</listitem>
<listitem><para>This command starts the logging process and appends
new information to a log file, <literal>sales_updates.log</literal
>, in the specified directory on a Linux or UNIX workstation:</para>
<programlisting>SQL>spool ./log_files/sales_updates.log</programlisting>
</listitem>
<listitem><para>This command starts the logging process and clears
existing information from the log file before logging new information
to the file:</para>
<programlisting>SQL>spool persnl_ddl.log clear</programlisting>
</listitem>
<listitem><para>This command starts the logging process and records
information to the <literal>sqlspool.lst</literal> file in the <literal
>bin</literal> directory:</para>
<programlisting>SQL>log on</programlisting>
</listitem>
<listitem><para>This command starts the logging process and appends
new information to an existing log file, <literal>persnl_updates.log</literal
>, in the local directory (the same directory where you are running
TrafCI):</para>
<programlisting>SQL>log persnl_updates.log</programlisting>
</listitem>
<listitem><para>This command starts the logging process and appends
new information to a log file, <literal>sales_updates.log</literal
>, in the specified directory on a Windows workstation:</para>
<programlisting>SQL>log c:\log_files\sales_updates.log</programlisting>
</listitem>
<listitem><para>This command starts the logging process and appends
new information to a log file, <literal>sales_updates.log</literal
>, in the specified directory on a Linux or UNIX workstation:</para>
<programlisting>SQL>log ./log_files/sales_updates.log</programlisting>
</listitem>
<listitem><para>This command starts the logging process and clears
existing information from the log file before logging new information
to the file:</para>
<programlisting>SQL>log persnl_ddl.log clear</programlisting>
</listitem>
<listitem><para>This command start the logging process, clears existing
information from the log file, and specifies that the command text
and log header is not displayed in the log file:</para>
<programlisting>SQL>log c:\temp\a.txt clear, cmdtext off

SQL>select * from <phrase>trafodion</phrase>.toi.job
+>;

JOBCODE JOBDESC
------- ------------------
    100 MANAGER
    450 PROGRAMMER
    900 SECRETARY
   300 SALESREP
    500 ACCOUNTANT
    400 SYSTEM ANALYST
    250 ASSEMBLER
    420 ENGINEER
    600 ADMINISTRATOR
    200 PRODUCTION SUPV

--- 10 row(s) selected.

SQL> log off
 
Output of c:\temp\a.txt
====================
JOBCODE JOBDESC
------- ------------------
    100 MANAGER
    450 PROGRAMMER
    900 SECRETARY
    300 SALESREP
    500 ACCOUNTANT
    400 SYSTEM ANALYST
    250 ASSEMBLER
    420 ENGINEER
    600 ADMINISTRATOR
    200 PRODUCTION SUPV
 
--- 10 row(s) selected
</programlisting>
</listitem>
<listitem><para>This command start the logging process, clears existing
information from the log file, and specifies that no output appears
on the console window:</para>
<programlisting>SQL>log c:\temp\b.txt clear, cmdtext off, quiet

SQL>select * 
+>from <phrase>trafodion</phrase>.toi.job;

SQL> log off
 
Output of c:\temp\b.txt
====================
JOBCODE JOBDESC
------- ------------------
    100 MANAGER
    450 PROGRAMMER
    900 SECRETARY
    300 SALESREP
    500 ACCOUNTANT
    400 SYSTEM ANALYST
    250 ASSEMBLER
    420 ENGINEER
    600 ADMINISTRATOR
    200 PRODUCTION SUPV
 
--- 10 row(s) selected
</programlisting>
<para>This command stops the logging process:</para>
<programlisting>SQL>log off</programlisting>
</listitem>
</itemizedlist>
<para>For more information, see <xref linkend="i1006598"
role="select:quotedtitle page"/>.</para>
</section>
</section>
<section condition="hidden" id="UPLOAD_JAR_Command" pagebreak="yes">
<title>UPLOAD JAR Command</title>
<para><indexterm><primary>UPLOAD JAR command</primary></indexterm
>The UPLOAD JAR command uploads a JAR file (or multiple JAR files)
from the client workstation to the Trafodion database platform.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>UPLOAD JAR [<replaceable>jar-file-directory</replaceable
>]{<replaceable>jar-file</replaceable> | *.jar} <phrase
condition="hidden">[BY USER]</phrase></programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
<variablelist>
<varlistentry><term><replaceable>jar-file-directory</replaceable></term>
<listitem><para>is the directory of the JAR file (or files) on the
client workstation.</para></listitem>
</varlistentry>
<varlistentry><term><replaceable>jar-file</replaceable></term>
<listitem><para>is the name of the JAR file to be uploaded.</para>
</listitem>
</varlistentry>
<varlistentry><term>*.jar</term>
<listitem><para>specifies all JAR files in the specified directory
be uploaded.</para></listitem>
</varlistentry>
</variablelist>
</section>
<section>
<title>Considerations</title>
<itemizedlist>
<listitem><para>You must enter the command on one line. The command
does not require an SQL terminator.</para></listitem>
<listitem><para>When you upload JAR files to the Trafodion database
platform, TrafCI copies the JAR files to the <phrase>$MY_UDR_ROOT
folder</phrase> and automatically overwrites without warning any existing
JAR files that have the same name.</para>
<important>
<para>Before uploading JAR files to the specified location, make sure
that you will not unintentionally overwrite JAR files that have the
same name.</para>
</important>
</listitem>
</itemizedlist>
</section>
<section>
<title>Examples</title>
<itemizedlist>
<listitem><para>This command copies a JAR file in the <filename>c:\myjars</filename
> directory to <phrase>the $MY_UDR_ROOT folder</phrase> on the Trafodion
database platform:</para>
<programlisting>SQL>upload jar c:\myjars\Sales.jar</programlisting>
</listitem>
<listitem><para>This command copies all the JAR files in the <filename
>c:\myjars</filename> directory to <phrase>the $MY_UDR_ROOT folder</phrase
> on the Trafodion database platform:</para>
<programlisting>SQL>upload jar c:\myjars\*.jar</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
<section id="VERSION-Command" pagebreak="yes">
<title>VERSION Command</title>
<para><indexterm><primary>VERSION command</primary></indexterm>The
VERSION command displays the build versions of the Trafodion database,
Trafodion Connectivity Service, Trafodion JDBC Type 4 Driver, and
TrafCI.</para>
<section>
<title>Syntax</title>
<informaltable colsep="0" frame="all" rowsep="0">
<tgroup cols="1" tgroupstyle="SD  syntax diagram">
<tbody>
<row><entry><programlisting>VERSION</programlisting></entry></row>
</tbody>
</tgroup>
</informaltable>
</section>
<section>
<title>Considerations</title>
<para>You must enter the command on one line. The command does not
require an SQL terminator.</para>
</section>
<section>
<title>Example</title>
<itemizedlist>
<listitem><para>This command shows versions of the Trafodion database,
Trafodion Connectivity Service, Trafodion JDBC Type 4 Driver, and
TrafCI:</para>
<!--WRITER'S NOTE: Updated output based on the current behavior (5/28/2014).-->
<programlisting>SQL>version

Trafodion Platform              : Release 0.8.0 
Trafodion Connectivity Services : Version 1.0.0 Release 0.8.0
Trafodion JDBC Type 4 Driver    : Traf_JDBC_Type4_Build_40646)
Trafodion Command Interface     : TrafCI_Build_40646

SQL> 
</programlisting>
</listitem>
</itemizedlist>
<itemizedlist>
<listitem><para>If TrafCI is started with the <literal>-noconnect</literal
> parameter, the VERSION command displays only TrafCI and the Trafodion
JDBC Type 4 Driver versions.</para>
<!--WRITER'S NOTE: Updated output based on the current behavior (5/28/2014).-->
<programlisting>C:\Program Files (x86)\Apache Software Foundation\Apache Trafodion Command Interface\bin>trafci -noconnect
Welcome to Apache Trafodion Command Interface
Copyright(C) 2015 Apache Software Foundation

Not connected.

SQL>version

Trafodion Platform              : Information not available.
Trafodion Connectivity Services : Information not available.
Trafodion JDBC Type 4 Driver    : Traf_JDBC_Type4_Build_40646
Trafodion Command Interface     : TrafCI_Build_40646</programlisting>
</listitem>
</itemizedlist>
</section>
</section>
</appendix>
<index></index>
</book>
